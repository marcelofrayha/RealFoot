{
	"id": "da1b5fee56eab300977a18e2de744b5a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenReceiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\n\r\ncontract TokenReceiver is IERC1155Receiver {\r\n    bytes4 private constant _INTERFACE_ID_ERC1155_RECEIVER = 0xf23a6e61;\r\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\r\n\r\n    function supportsInterface(bytes4 interfaceID) external pure override returns (bool) {\r\n        return interfaceID == _INTERFACE_ID_ERC165 || interfaceID == _INTERFACE_ID_ERC1155_RECEIVER;\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external pure override returns (bytes4) {\r\n        // Your custom logic here for handling the received ERC1155 token\r\n        // Note that this function must return the bytes4 value 0xf23a6e61, which is the interface ID for ERC1155Receiver.onERC1155Received\r\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external pure override returns (bytes4) {\r\n        // Your custom logic here for handling the received batch of ERC1155 tokens\r\n        // Note that this function must return the bytes4 value 0xbc197c81, which is the interface ID for ERC1155Receiver.onERC1155BatchReceived\r\n        return bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenReceiver.sol": {
				"TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenReceiver.sol\":132:1625  contract TokenReceiver is IERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenReceiver.sol\":132:1625  contract TokenReceiver is IERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenReceiver.sol\":322:517  function supportsInterface(bytes4 interfaceID) external pure override returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts/TokenReceiver.sol\":322:517  function supportsInterface(bytes4 interfaceID) external pure override returns (bool) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenReceiver.sol\":1051:1622  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"contracts/TokenReceiver.sol\":1535:1613  keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\") */\n      0xbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f6694146621\n        /* \"contracts/TokenReceiver.sol\":1051:1622  function onERC1155BatchReceived(... */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_12:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2776:2809   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2758:2810   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2746:2748   */\n      0x20\n        /* \"#utility.yul\":2731:2749   */\n      add\n        /* \"contracts/TokenReceiver.sol\":1051:1622  function onERC1155BatchReceived(... */\n      tag_10\n        /* \"#utility.yul\":2614:2816   */\n      jump\n        /* \"contracts/TokenReceiver.sol\":525:1043  function onERC1155Received(... */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/TokenReceiver.sol\":965:1034  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"contracts/TokenReceiver.sol\":525:1043  function onERC1155Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/TokenReceiver.sol\":322:517  function supportsInterface(bytes4 interfaceID) external pure override returns (bool) {... */\n    tag_9:\n        /* \"contracts/TokenReceiver.sol\":401:405  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/TokenReceiver.sol\":425:460  interfaceID == _INTERFACE_ID_ERC165 */\n      dup3\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n      dup1\n        /* \"contracts/TokenReceiver.sol\":425:509  interfaceID == _INTERFACE_ID_ERC165 || interfaceID == _INTERFACE_ID_ERC1155_RECEIVER */\n      tag_24\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/TokenReceiver.sol\":464:509  interfaceID == _INTERFACE_ID_ERC1155_RECEIVER */\n      dup3\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/TokenReceiver.sol\":425:509  interfaceID == _INTERFACE_ID_ERC165 || interfaceID == _INTERFACE_ID_ERC1155_RECEIVER */\n    tag_24:\n        /* \"contracts/TokenReceiver.sol\":418:509  return interfaceID == _INTERFACE_ID_ERC165 || interfaceID == _INTERFACE_ID_ERC1155_RECEIVER */\n      swap3\n        /* \"contracts/TokenReceiver.sol\":322:517  function supportsInterface(bytes4 interfaceID) external pure override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_32:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_33:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_27:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_36:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:1042   */\n    tag_28:\n        /* \"#utility.yul\":738:746   */\n      0x00\n        /* \"#utility.yul\":748:754   */\n      dup1\n        /* \"#utility.yul\":802:805   */\n      dup4\n        /* \"#utility.yul\":795:799   */\n      0x1f\n        /* \"#utility.yul\":787:793   */\n      dup5\n        /* \"#utility.yul\":783:800   */\n      add\n        /* \"#utility.yul\":779:806   */\n      slt\n        /* \"#utility.yul\":769:824   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":820:821   */\n      0x00\n        /* \"#utility.yul\":817:818   */\n      dup1\n        /* \"#utility.yul\":810:822   */\n      revert\n        /* \"#utility.yul\":769:824   */\n    tag_38:\n      pop\n        /* \"#utility.yul\":843:863   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":886:904   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":875:905   */\n      dup2\n      gt\n        /* \"#utility.yul\":872:922   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":918:919   */\n      0x00\n        /* \"#utility.yul\":915:916   */\n      dup1\n        /* \"#utility.yul\":908:920   */\n      revert\n        /* \"#utility.yul\":872:922   */\n    tag_39:\n        /* \"#utility.yul\":955:959   */\n      0x20\n        /* \"#utility.yul\":947:953   */\n      dup4\n        /* \"#utility.yul\":943:960   */\n      add\n        /* \"#utility.yul\":931:960   */\n      swap2\n      pop\n        /* \"#utility.yul\":1015:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1012   */\n      0x20\n        /* \"#utility.yul\":998:1004   */\n      dup3\n        /* \"#utility.yul\":995:996   */\n      0x05\n        /* \"#utility.yul\":991:1005   */\n      shl\n        /* \"#utility.yul\":983:989   */\n      dup6\n        /* \"#utility.yul\":979:1006   */\n      add\n        /* \"#utility.yul\":975:1013   */\n      add\n        /* \"#utility.yul\":972:1019   */\n      gt\n        /* \"#utility.yul\":969:1036   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":969:1036   */\n    tag_40:\n        /* \"#utility.yul\":675:1042   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1394   */\n    tag_29:\n        /* \"#utility.yul\":1098:1106   */\n      0x00\n        /* \"#utility.yul\":1108:1114   */\n      dup1\n        /* \"#utility.yul\":1162:1165   */\n      dup4\n        /* \"#utility.yul\":1155:1159   */\n      0x1f\n        /* \"#utility.yul\":1147:1153   */\n      dup5\n        /* \"#utility.yul\":1143:1160   */\n      add\n        /* \"#utility.yul\":1139:1166   */\n      slt\n        /* \"#utility.yul\":1129:1184   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1180:1181   */\n      0x00\n        /* \"#utility.yul\":1177:1178   */\n      dup1\n        /* \"#utility.yul\":1170:1182   */\n      revert\n        /* \"#utility.yul\":1129:1184   */\n    tag_42:\n      pop\n        /* \"#utility.yul\":1203:1223   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1246:1264   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1235:1265   */\n      dup2\n      gt\n        /* \"#utility.yul\":1232:1282   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1278:1279   */\n      0x00\n        /* \"#utility.yul\":1275:1276   */\n      dup1\n        /* \"#utility.yul\":1268:1280   */\n      revert\n        /* \"#utility.yul\":1232:1282   */\n    tag_43:\n        /* \"#utility.yul\":1315:1319   */\n      0x20\n        /* \"#utility.yul\":1307:1313   */\n      dup4\n        /* \"#utility.yul\":1303:1320   */\n      add\n        /* \"#utility.yul\":1291:1320   */\n      swap2\n      pop\n        /* \"#utility.yul\":1367:1370   */\n      dup4\n        /* \"#utility.yul\":1360:1364   */\n      0x20\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1343:1349   */\n      dup6\n        /* \"#utility.yul\":1339:1358   */\n      add\n        /* \"#utility.yul\":1335:1365   */\n      add\n        /* \"#utility.yul\":1332:1371   */\n      gt\n        /* \"#utility.yul\":1329:1388   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1384:1385   */\n      0x00\n        /* \"#utility.yul\":1381:1382   */\n      dup1\n        /* \"#utility.yul\":1374:1386   */\n      revert\n        /* \"#utility.yul\":1399:2609   */\n    tag_14:\n        /* \"#utility.yul\":1559:1565   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup1\n        /* \"#utility.yul\":1575:1581   */\n      0x00\n        /* \"#utility.yul\":1583:1589   */\n      dup1\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1599:1605   */\n      dup1\n        /* \"#utility.yul\":1607:1613   */\n      0x00\n        /* \"#utility.yul\":1615:1621   */\n      dup1\n        /* \"#utility.yul\":1668:1671   */\n      0xa0\n        /* \"#utility.yul\":1656:1665   */\n      dup10\n        /* \"#utility.yul\":1647:1654   */\n      dup12\n        /* \"#utility.yul\":1643:1666   */\n      sub\n        /* \"#utility.yul\":1639:1672   */\n      slt\n        /* \"#utility.yul\":1636:1689   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1685:1686   */\n      0x00\n        /* \"#utility.yul\":1682:1683   */\n      dup1\n        /* \"#utility.yul\":1675:1687   */\n      revert\n        /* \"#utility.yul\":1636:1689   */\n    tag_46:\n        /* \"#utility.yul\":1708:1737   */\n      tag_47\n        /* \"#utility.yul\":1727:1736   */\n      dup10\n        /* \"#utility.yul\":1708:1737   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1698:1737   */\n      swap8\n      pop\n        /* \"#utility.yul\":1756:1794   */\n      tag_48\n        /* \"#utility.yul\":1790:1792   */\n      0x20\n        /* \"#utility.yul\":1779:1788   */\n      dup11\n        /* \"#utility.yul\":1775:1793   */\n      add\n        /* \"#utility.yul\":1756:1794   */\n      tag_27\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1746:1794   */\n      swap7\n      pop\n        /* \"#utility.yul\":1845:1847   */\n      0x40\n        /* \"#utility.yul\":1834:1843   */\n      dup10\n        /* \"#utility.yul\":1830:1848   */\n      add\n        /* \"#utility.yul\":1817:1849   */\n      calldataload\n        /* \"#utility.yul\":1868:1886   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1909:1911   */\n      dup1\n        /* \"#utility.yul\":1901:1907   */\n      dup3\n        /* \"#utility.yul\":1898:1912   */\n      gt\n        /* \"#utility.yul\":1895:1929   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1922:1923   */\n      dup1\n        /* \"#utility.yul\":1915:1927   */\n      revert\n        /* \"#utility.yul\":1895:1929   */\n    tag_49:\n        /* \"#utility.yul\":1964:2034   */\n      tag_50\n        /* \"#utility.yul\":2026:2033   */\n      dup13\n        /* \"#utility.yul\":2017:2023   */\n      dup4\n        /* \"#utility.yul\":2006:2015   */\n      dup14\n        /* \"#utility.yul\":2002:2024   */\n      add\n        /* \"#utility.yul\":1964:2034   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2053:2061   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":1938:2034   */\n      swap7\n      pop\n        /* \"#utility.yul\":2141:2143   */\n      0x60\n        /* \"#utility.yul\":2126:2144   */\n      dup12\n      add\n        /* \"#utility.yul\":2113:2145   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2157:2173   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2154:2190   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":2186:2187   */\n      0x00\n        /* \"#utility.yul\":2183:2184   */\n      dup1\n        /* \"#utility.yul\":2176:2188   */\n      revert\n        /* \"#utility.yul\":2154:2190   */\n    tag_51:\n        /* \"#utility.yul\":2225:2297   */\n      tag_52\n        /* \"#utility.yul\":2289:2296   */\n      dup13\n        /* \"#utility.yul\":2278:2286   */\n      dup4\n        /* \"#utility.yul\":2267:2276   */\n      dup14\n        /* \"#utility.yul\":2263:2287   */\n      add\n        /* \"#utility.yul\":2225:2297   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":2316:2324   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":2199:2297   */\n      swap5\n      pop\n        /* \"#utility.yul\":2404:2407   */\n      0x80\n        /* \"#utility.yul\":2389:2408   */\n      dup12\n      add\n        /* \"#utility.yul\":2376:2409   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2421:2437   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2418:2454   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":2450:2451   */\n      0x00\n        /* \"#utility.yul\":2447:2448   */\n      dup1\n        /* \"#utility.yul\":2440:2452   */\n      revert\n        /* \"#utility.yul\":2418:2454   */\n    tag_53:\n      pop\n        /* \"#utility.yul\":2489:2549   */\n      tag_54\n        /* \"#utility.yul\":2541:2548   */\n      dup12\n        /* \"#utility.yul\":2530:2538   */\n      dup3\n        /* \"#utility.yul\":2519:2528   */\n      dup13\n        /* \"#utility.yul\":2515:2539   */\n      add\n        /* \"#utility.yul\":2489:2549   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1399:2609   */\n      swap10\n      swap13\n      swap9\n      swap12\n      pop\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":2568:2576   */\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1399:2609   */\n      jump\t// out\n        /* \"#utility.yul\":2821:3516   */\n    tag_20:\n        /* \"#utility.yul\":2927:2933   */\n      0x00\n        /* \"#utility.yul\":2935:2941   */\n      dup1\n        /* \"#utility.yul\":2943:2949   */\n      0x00\n        /* \"#utility.yul\":2951:2957   */\n      dup1\n        /* \"#utility.yul\":2959:2965   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":3020:3023   */\n      0xa0\n        /* \"#utility.yul\":3008:3017   */\n      dup8\n        /* \"#utility.yul\":2999:3006   */\n      dup10\n        /* \"#utility.yul\":2995:3018   */\n      sub\n        /* \"#utility.yul\":2991:3024   */\n      slt\n        /* \"#utility.yul\":2988:3041   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":3037:3038   */\n      0x00\n        /* \"#utility.yul\":3034:3035   */\n      dup1\n        /* \"#utility.yul\":3027:3039   */\n      revert\n        /* \"#utility.yul\":2988:3041   */\n    tag_57:\n        /* \"#utility.yul\":3060:3089   */\n      tag_58\n        /* \"#utility.yul\":3079:3088   */\n      dup8\n        /* \"#utility.yul\":3060:3089   */\n      tag_27\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":3050:3089   */\n      swap6\n      pop\n        /* \"#utility.yul\":3108:3146   */\n      tag_59\n        /* \"#utility.yul\":3142:3144   */\n      0x20\n        /* \"#utility.yul\":3131:3140   */\n      dup9\n        /* \"#utility.yul\":3127:3145   */\n      add\n        /* \"#utility.yul\":3108:3146   */\n      tag_27\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":3098:3146   */\n      swap5\n      pop\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3182:3191   */\n      dup8\n        /* \"#utility.yul\":3178:3196   */\n      add\n        /* \"#utility.yul\":3165:3197   */\n      calldataload\n        /* \"#utility.yul\":3155:3197   */\n      swap4\n      pop\n        /* \"#utility.yul\":3244:3246   */\n      0x60\n        /* \"#utility.yul\":3233:3242   */\n      dup8\n        /* \"#utility.yul\":3229:3247   */\n      add\n        /* \"#utility.yul\":3216:3248   */\n      calldataload\n        /* \"#utility.yul\":3206:3248   */\n      swap3\n      pop\n        /* \"#utility.yul\":3299:3302   */\n      0x80\n        /* \"#utility.yul\":3288:3297   */\n      dup8\n        /* \"#utility.yul\":3284:3303   */\n      add\n        /* \"#utility.yul\":3271:3304   */\n      calldataload\n        /* \"#utility.yul\":3327:3345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3319:3325   */\n      dup2\n        /* \"#utility.yul\":3316:3346   */\n      gt\n        /* \"#utility.yul\":3313:3363   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":3359:3360   */\n      0x00\n        /* \"#utility.yul\":3356:3357   */\n      dup1\n        /* \"#utility.yul\":3349:3361   */\n      revert\n        /* \"#utility.yul\":3313:3363   */\n    tag_60:\n        /* \"#utility.yul\":3398:3456   */\n      tag_61\n        /* \"#utility.yul\":3448:3455   */\n      dup10\n        /* \"#utility.yul\":3439:3445   */\n      dup3\n        /* \"#utility.yul\":3428:3437   */\n      dup11\n        /* \"#utility.yul\":3424:3446   */\n      add\n        /* \"#utility.yul\":3398:3456   */\n      tag_29\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2821:3516   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3475:3483   */\n      swap4\n      swap5\n        /* \"#utility.yul\":2821:3516   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063abe848bfa614bf2c4cea0e22d1853c16e89275b7a16c8010d612f6563b7bfd64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610376806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100c2575b600080fd5b610059610054366004610132565b6100fb565b60405190151581526020015b60405180910390f35b6100a961007c36600461020d565b7fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b6040516001600160e01b03199091168152602001610065565b6100a96100d03660046102c8565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b60006001600160e01b031982166301ffc9a760e01b148061012c57506001600160e01b0319821663f23a6e6160e01b145b92915050565b60006020828403121561014457600080fd5b81356001600160e01b03198116811461015c57600080fd5b9392505050565b80356001600160a01b038116811461017a57600080fd5b919050565b60008083601f84011261019157600080fd5b50813567ffffffffffffffff8111156101a957600080fd5b6020830191508360208260051b85010111156101c457600080fd5b9250929050565b60008083601f8401126101dd57600080fd5b50813567ffffffffffffffff8111156101f557600080fd5b6020830191508360208285010111156101c457600080fd5b60008060008060008060008060a0898b03121561022957600080fd5b61023289610163565b975061024060208a01610163565b9650604089013567ffffffffffffffff8082111561025d57600080fd5b6102698c838d0161017f565b909850965060608b013591508082111561028257600080fd5b61028e8c838d0161017f565b909650945060808b01359150808211156102a757600080fd5b506102b48b828c016101cb565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156102e157600080fd5b6102ea87610163565b95506102f860208801610163565b94506040870135935060608701359250608087013567ffffffffffffffff81111561032257600080fd5b61032e89828a016101cb565b979a969950949750929593949250505056fea264697066735822122063abe848bfa614bf2c4cea0e22d1853c16e89275b7a16c8010d612f6563b7bfd64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xC2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x132 JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x20D JUMP JUMPDEST PUSH32 0xBC197C819B3E337A6F9652DD10BECD7EEF83032AF3B9D958D3D42F6694146621 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0xA9 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C8 JUMP JUMPDEST PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x12C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 DUP10 PUSH2 0x163 JUMP JUMPDEST SWAP8 POP PUSH2 0x240 PUSH1 0x20 DUP11 ADD PUSH2 0x163 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 DUP13 DUP4 DUP14 ADD PUSH2 0x17F JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E DUP13 DUP4 DUP14 ADD PUSH2 0x17F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 DUP12 DUP3 DUP13 ADD PUSH2 0x1CB JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EA DUP8 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP PUSH2 0x2F8 PUSH1 0x20 DUP9 ADD PUSH2 0x163 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E DUP10 DUP3 DUP11 ADD PUSH2 0x1CB JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xABE848BF 0xA6 EQ 0xBF 0x2C 0x4C 0xEA 0xE 0x22 0xD1 DUP6 EXTCODECOPY AND 0xE8 SWAP3 PUSH22 0xB7A16C8010D612F6563B7BFD64736F6C634300081300 CALLER ",
							"sourceMap": "132:1493:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@supportsInterface_80": {
									"entryPoint": 251,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3518:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:3"
															},
															"nodeType": "YulIf",
															"src": "93:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:3",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:3",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:3"
															},
															"nodeType": "YulIf",
															"src": "199:71:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:3",
														"type": ""
													}
												],
												"src": "305:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:3"
															},
															"nodeType": "YulIf",
															"src": "594:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:3",
														"type": ""
													}
												],
												"src": "497:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:283:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "787:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "795:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "783:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "783:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "802:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:35:3"
															},
															"nodeType": "YulIf",
															"src": "769:55:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "833:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "856:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "843:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "906:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "915:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "918:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "908:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "908:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "908:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "878:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "886:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "875:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:30:3"
															},
															"nodeType": "YulIf",
															"src": "872:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "931:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "947:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "955:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "931:8:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "983:6:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "995:1:3",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "998:6:3"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "991:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "991:14:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "979:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "979:27:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:38:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1015:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "972:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:47:3"
															},
															"nodeType": "YulIf",
															"src": "969:67:3"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "722:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "730:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "738:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "748:6:3",
														"type": ""
													}
												],
												"src": "675:367:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:275:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1168:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1180:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1170:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1170:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1170:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1155:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1143:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1143:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1162:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:35:3"
															},
															"nodeType": "YulIf",
															"src": "1129:55:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1193:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1216:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1203:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1266:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1275:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1278:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1268:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1268:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1268:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1235:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:30:3"
															},
															"nodeType": "YulIf",
															"src": "1232:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1291:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1303:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1291:8:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1381:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1384:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1374:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1374:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1343:6:3"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:19:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1360:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1335:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:30:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1332:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:39:3"
															},
															"nodeType": "YulIf",
															"src": "1329:59:3"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1098:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1108:6:3",
														"type": ""
													}
												],
												"src": "1047:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1626:983:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1673:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1682:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1685:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1675:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1675:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1675:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1647:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1643:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1643:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1668:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1639:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:33:3"
															},
															"nodeType": "YulIf",
															"src": "1636:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1727:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1708:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1746:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1779:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1790:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1775:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1756:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1803:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1845:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1817:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1807:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1858:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1868:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1862:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1913:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1922:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1915:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1915:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1915:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1909:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:14:3"
															},
															"nodeType": "YulIf",
															"src": "1895:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1938:96:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2026:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1964:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:70:3"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "1942:8:3",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1952:8:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2043:18:3",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "2053:8:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2070:18:3",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2080:8:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2097:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2130:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2141:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2126:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2126:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:32:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2101:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2174:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2183:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2186:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2176:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2176:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2160:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2170:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2157:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:16:3"
															},
															"nodeType": "YulIf",
															"src": "2154:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2199:98:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2267:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2278:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2263:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2289:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2225:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:72:3"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "2203:8:3",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "2213:8:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2306:18:3",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "2316:8:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2333:18:3",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "2343:8:3"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2360:49:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2404:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2376:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:33:3"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2364:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2450:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2440:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2424:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2434:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2421:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:16:3"
															},
															"nodeType": "YulIf",
															"src": "2418:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2463:86:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2519:9:3"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2530:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2515:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2541:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2489:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:60:3"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "2467:8:3",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "2477:8:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2558:18:3",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "2568:8:3"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2585:18:3",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "2595:8:3"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1536:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1547:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1559:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1567:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1575:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1583:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1591:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1599:6:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1607:6:3",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1615:6:3",
														"type": ""
													}
												],
												"src": "1399:1210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2713:103:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2723:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2735:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2731:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2723:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2765:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2780:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2792:3:3",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2797:10:3",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2788:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2788:20:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2758:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2758:52:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2682:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2693:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2704:4:3",
														"type": ""
													}
												],
												"src": "2614:202:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:538:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3025:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3027:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2999:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:33:3"
															},
															"nodeType": "YulIf",
															"src": "2988:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3050:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3079:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3060:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3098:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3108:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3155:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3182:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3193:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3178:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3165:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3206:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3233:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3216:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:32:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3206:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3257:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3288:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3299:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3284:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3271:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:33:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3261:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3347:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3356:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3349:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3349:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3349:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3319:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3316:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:30:3"
															},
															"nodeType": "YulIf",
															"src": "3313:50:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3372:84:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3428:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3439:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3448:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3398:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:58:3"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "3376:8:3",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "3386:8:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3465:18:3",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "3475:8:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3492:18:3",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "3502:8:3"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2904:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2915:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2927:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2935:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2943:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2951:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2959:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2967:6:3",
														"type": ""
													}
												],
												"src": "2821:695:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100c2575b600080fd5b610059610054366004610132565b6100fb565b60405190151581526020015b60405180910390f35b6100a961007c36600461020d565b7fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b6040516001600160e01b03199091168152602001610065565b6100a96100d03660046102c8565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b60006001600160e01b031982166301ffc9a760e01b148061012c57506001600160e01b0319821663f23a6e6160e01b145b92915050565b60006020828403121561014457600080fd5b81356001600160e01b03198116811461015c57600080fd5b9392505050565b80356001600160a01b038116811461017a57600080fd5b919050565b60008083601f84011261019157600080fd5b50813567ffffffffffffffff8111156101a957600080fd5b6020830191508360208260051b85010111156101c457600080fd5b9250929050565b60008083601f8401126101dd57600080fd5b50813567ffffffffffffffff8111156101f557600080fd5b6020830191508360208285010111156101c457600080fd5b60008060008060008060008060a0898b03121561022957600080fd5b61023289610163565b975061024060208a01610163565b9650604089013567ffffffffffffffff8082111561025d57600080fd5b6102698c838d0161017f565b909850965060608b013591508082111561028257600080fd5b61028e8c838d0161017f565b909650945060808b01359150808211156102a757600080fd5b506102b48b828c016101cb565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156102e157600080fd5b6102ea87610163565b95506102f860208801610163565b94506040870135935060608701359250608087013567ffffffffffffffff81111561032257600080fd5b61032e89828a016101cb565b979a969950949750929593949250505056fea264697066735822122063abe848bfa614bf2c4cea0e22d1853c16e89275b7a16c8010d612f6563b7bfd64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xC2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x132 JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x20D JUMP JUMPDEST PUSH32 0xBC197C819B3E337A6F9652DD10BECD7EEF83032AF3B9D958D3D42F6694146621 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0xA9 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C8 JUMP JUMPDEST PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x12C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x232 DUP10 PUSH2 0x163 JUMP JUMPDEST SWAP8 POP PUSH2 0x240 PUSH1 0x20 DUP11 ADD PUSH2 0x163 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 DUP13 DUP4 DUP14 ADD PUSH2 0x17F JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E DUP13 DUP4 DUP14 ADD PUSH2 0x17F JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 DUP12 DUP3 DUP13 ADD PUSH2 0x1CB JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EA DUP8 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP PUSH2 0x2F8 PUSH1 0x20 DUP9 ADD PUSH2 0x163 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E DUP10 DUP3 DUP11 ADD PUSH2 0x1CB JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xABE848BF 0xA6 EQ 0xBF 0x2C 0x4C 0xEA 0xE 0x22 0xD1 DUP6 EXTCODECOPY AND 0xE8 SWAP3 PUSH22 0xB7A16C8010D612F6563B7BFD64736F6C634300081300 CALLER ",
							"sourceMap": "132:1493:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:195;;;;;;:::i;:::-;;:::i;:::-;;;470:14:3;;463:22;445:41;;433:2;418:18;322:195:2;;;;;;;;1051:571;;;;;;:::i;:::-;1535:78;1051:571;;;;;;;;;;;;;;-1:-1:-1;;;;;;2776:33:3;;;2758:52;;2746:2;2731:18;1051:571:2;2614:202:3;525:518:2;;;;;;:::i;:::-;965:69;525:518;;;;;;;;;322:195;401:4;-1:-1:-1;;;;;;425:35:2;;-1:-1:-1;;;425:35:2;;:84;;-1:-1:-1;;;;;;;464:45:2;;-1:-1:-1;;;464:45:2;425:84;418:91;322:195;-1:-1:-1;;322:195:2:o;14:286:3:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:3;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:3:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:3;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:367::-;738:8;748:6;802:3;795:4;787:6;783:17;779:27;769:55;;820:1;817;810:12;769:55;-1:-1:-1;843:20:3;;886:18;875:30;;872:50;;;918:1;915;908:12;872:50;955:4;947:6;943:17;931:29;;1015:3;1008:4;998:6;995:1;991:14;983:6;979:27;975:38;972:47;969:67;;;1032:1;1029;1022:12;969:67;675:367;;;;;:::o;1047:347::-;1098:8;1108:6;1162:3;1155:4;1147:6;1143:17;1139:27;1129:55;;1180:1;1177;1170:12;1129:55;-1:-1:-1;1203:20:3;;1246:18;1235:30;;1232:50;;;1278:1;1275;1268:12;1232:50;1315:4;1307:6;1303:17;1291:29;;1367:3;1360:4;1351:6;1343;1339:19;1335:30;1332:39;1329:59;;;1384:1;1381;1374:12;1399:1210;1559:6;1567;1575;1583;1591;1599;1607;1615;1668:3;1656:9;1647:7;1643:23;1639:33;1636:53;;;1685:1;1682;1675:12;1636:53;1708:29;1727:9;1708:29;:::i;:::-;1698:39;;1756:38;1790:2;1779:9;1775:18;1756:38;:::i;:::-;1746:48;;1845:2;1834:9;1830:18;1817:32;1868:18;1909:2;1901:6;1898:14;1895:34;;;1925:1;1922;1915:12;1895:34;1964:70;2026:7;2017:6;2006:9;2002:22;1964:70;:::i;:::-;2053:8;;-1:-1:-1;1938:96:3;-1:-1:-1;2141:2:3;2126:18;;2113:32;;-1:-1:-1;2157:16:3;;;2154:36;;;2186:1;2183;2176:12;2154:36;2225:72;2289:7;2278:8;2267:9;2263:24;2225:72;:::i;:::-;2316:8;;-1:-1:-1;2199:98:3;-1:-1:-1;2404:3:3;2389:19;;2376:33;;-1:-1:-1;2421:16:3;;;2418:36;;;2450:1;2447;2440:12;2418:36;;2489:60;2541:7;2530:8;2519:9;2515:24;2489:60;:::i;:::-;1399:1210;;;;-1:-1:-1;1399:1210:3;;-1:-1:-1;1399:1210:3;;;;;;2568:8;-1:-1:-1;;;1399:1210:3:o;2821:695::-;2927:6;2935;2943;2951;2959;2967;3020:3;3008:9;2999:7;2995:23;2991:33;2988:53;;;3037:1;3034;3027:12;2988:53;3060:29;3079:9;3060:29;:::i;:::-;3050:39;;3108:38;3142:2;3131:9;3127:18;3108:38;:::i;:::-;3098:48;;3193:2;3182:9;3178:18;3165:32;3155:42;;3244:2;3233:9;3229:18;3216:32;3206:42;;3299:3;3288:9;3284:19;3271:33;3327:18;3319:6;3316:30;3313:50;;;3359:1;3356;3349:12;3313:50;3398:58;3448:7;3439:6;3428:9;3424:22;3398:58;:::i;:::-;2821:695;;;;-1:-1:-1;2821:695:3;;-1:-1:-1;2821:695:3;;3475:8;;2821:695;-1:-1:-1;;;2821:695:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "177200",
								"executionCost": "220",
								"totalCost": "177420"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1625,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063abe848bfa614bf2c4cea0e22d1853c16e89275b7a16c8010d612f6563b7bfd64736f6c63430008130033",
									".code": [
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 1625,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 322,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 322,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1051,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C819B3E337A6F9652DD10BECD7EEF83032AF3B9D958D3D42F6694146621"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2776,
											"end": 2809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2809,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2614,
											"end": 2816,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 1043,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 322,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 425,
											"end": 460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 425,
											"end": 460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 425,
											"end": 460,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 425,
											"end": 460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 425,
											"end": 509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 464,
											"end": 509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 464,
											"end": 509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 464,
											"end": 509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 425,
											"end": 509,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 425,
											"end": 509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 418,
											"end": 509,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 322,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 322,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 793,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 783,
											"end": 800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 769,
											"end": 824,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 810,
											"end": 822,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 824,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 769,
											"end": 824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 886,
											"end": 904,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 875,
											"end": 905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 875,
											"end": 905,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 872,
											"end": 922,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 872,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 872,
											"end": 922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 920,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 872,
											"end": 922,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 872,
											"end": 922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 955,
											"end": 959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 943,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 931,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1012,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 991,
											"end": 1005,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 979,
											"end": 1006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1019,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 969,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1394,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1047,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1159,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1166,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1129,
											"end": 1184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1184,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1129,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1223,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1265,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1232,
											"end": 1282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1280,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1232,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1388,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1607,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1666,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1672,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1708,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1737,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1708,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1790,
											"end": 1792,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1756,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1794,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1756,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1794,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1964,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 2034,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1964,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2061,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 2034,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2141,
											"end": 2143,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2126,
											"end": 2144,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2145,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2190,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2154,
											"end": 2190,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2154,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2225,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2225,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2324,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2297,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2407,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2389,
											"end": 2408,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2421,
											"end": 2437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2437,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2528,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2489,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2549,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2489,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP13",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 2609,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2576,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 2609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3060,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3108,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3197,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3197,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3233,
											"end": 3242,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3248,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3248,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3288,
											"end": 3297,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3304,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3316,
											"end": 3346,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3448,
											"end": 3455,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3398,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3456,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3398,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP11",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3483,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3483,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 3516,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 3516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/TokenReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenReceiver.sol\":\"TokenReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/TokenReceiver.sol\":{\"keccak256\":\"0xda259b27b21fa962e259371849682bd900dab118e9da4c12c2f46bba1ecd5eba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caf535123e6e31c98324ea75cc578a9fb6543882948c216ad3d37a56a5a3caa7\",\"dweb:/ipfs/QmXfeCGZSuRdiQPUdxj2NZ8sLVFZhVtq6chYxk9EvGApEV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:15:9:\n   |\n15 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 578,
					"file": "contracts/TokenReceiver.sol",
					"start": 562
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:16:9:\n   |\n16 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 601,
					"file": "contracts/TokenReceiver.sol",
					"start": 589
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:17:9:\n   |\n17 |         uint256 id,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 622,
					"file": "contracts/TokenReceiver.sol",
					"start": 612
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:18:9:\n   |\n18 |         uint256 value,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 646,
					"file": "contracts/TokenReceiver.sol",
					"start": 633
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:19:9:\n   |\n19 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 676,
					"file": "contracts/TokenReceiver.sol",
					"start": 657
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:27:9:\n   |\n27 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1109,
					"file": "contracts/TokenReceiver.sol",
					"start": 1093
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:28:9:\n   |\n28 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1132,
					"file": "contracts/TokenReceiver.sol",
					"start": 1120
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:29:9:\n   |\n29 |         uint256[] calldata ids,\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1165,
					"file": "contracts/TokenReceiver.sol",
					"start": 1143
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:30:9:\n   |\n30 |         uint256[] calldata values,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1201,
					"file": "contracts/TokenReceiver.sol",
					"start": 1176
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TokenReceiver.sol:31:9:\n   |\n31 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1231,
					"file": "contracts/TokenReceiver.sol",
					"start": 1212
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							52
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 41,
							"sourceUnit": 53,
							"src": "143:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"262:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 52,
										"src": "262:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 40,
							"linearizedBaseContracts": [
								40,
								52
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1211:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1234:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1278:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 18,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:0"
									},
									"scope": 40,
									"src": "1107:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2332:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2380:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2412:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 31,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2447:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2491:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 36,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:0"
									},
									"scope": 40,
									"src": "2291:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "232:2269:0",
							"usedErrors": []
						}
					],
					"src": "118:2384:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 43,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "IERC165",
							"nameLocation": "415:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "801:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 45,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 52,
									"src": "774:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 53,
							"src": "405:447:1",
							"usedErrors": []
						}
					],
					"src": "100:753:1"
				},
				"id": 1
			},
			"contracts/TokenReceiver.sol": {
				"ast": {
					"absolutePath": "contracts/TokenReceiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							52
						],
						"TokenReceiver": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 54,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"id": 55,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 41,
							"src": "60:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"158:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 40,
										"src": "158:16:2"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "158:16:2"
								}
							],
							"canonicalName": "TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								40,
								52
							],
							"name": "TokenReceiver",
							"nameLocation": "141:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_RECEIVER",
									"nameLocation": "206:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "182:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 58,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786632336136653631",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "239:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4063915617_by_1",
											"typeString": "int_const 4063915617"
										},
										"value": "0xf23a6e61"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nameLocation": "280:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "256:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 61,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "256:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783031666663396137",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "303:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										51
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "407:110:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 71,
															"name": "interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "425:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 72,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "440:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "425:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 74,
															"name": "interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "464:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 75,
															"name": "_INTERFACE_ID_ERC1155_RECEIVER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "479:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "464:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "425:84:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 78,
												"nodeType": "Return",
												"src": "418:91:2"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "331:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "383:8:2"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "356:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "349:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:20:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "401:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "401:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:6:2"
									},
									"scope": 131,
									"src": "322:195:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										21
									],
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "724:319:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "975:58:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 98,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "965:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "965:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "958:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 96,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "958:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 95,
												"id": 102,
												"nodeType": "Return",
												"src": "951:84:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "534:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "698:8:2"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "570:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "562:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "597:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "589:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "620:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "612:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "641:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "633:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "672:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "657:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 89,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:132:2"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "716:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 93,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:8:2"
									},
									"scope": 131,
									"src": "525:518:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1279:343:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e455243313135354261746368526563656976656428616464726573732c616464726573732c75696e743235365b5d2c75696e743235365b5d2c627974657329",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1545:67:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f6694146621",
																		"typeString": "literal_string \"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\""
																	},
																	"value": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f6694146621",
																		"typeString": "literal_string \"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\""
																	}
																],
																"id": 124,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1535:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1535:78:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1528:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 122,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1528:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 121,
												"id": 128,
												"nodeType": "Return",
												"src": "1521:93:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "1060:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1253:8:2"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1120:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1162:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1143:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1143:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "1143:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1195:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1176:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1176:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "1176:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1212:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:156:2"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1271:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1271:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:8:2"
									},
									"scope": 131,
									"src": "1051:571:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "132:1493:2",
							"usedErrors": []
						}
					],
					"src": "33:1594:2"
				},
				"id": 2
			}
		}
	}
}