{
	"id": "645d18e18b936155a50baa447cab6c71",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\nimport \"../core/RedstoneConsumerNumericBase.sol\";\n\ncontract CustomUrlsConsumerBase is RedstoneConsumerNumericBase {\n  function getUniqueSignersThreshold() public view virtual override returns (uint8) {\n    return 2;\n  }\n\n  function getAuthorisedSignerIndex(address signerAddress)\n    public\n    view\n    virtual\n    override\n    returns (uint8)\n  {\n    if (signerAddress == 0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF) {\n      return 0;\n    } else if (signerAddress == 0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6) {\n      return 1;\n    } else {\n      revert SignerNotAuthorised(signerAddress);\n    }\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\nimport \"./RedstoneConsumerBase.sol\";\n\n/**\n * @title The base contract for Redstone consumers' contracts that allows to\n * securely calculate numeric redstone oracle values\n * @author The Redstone Oracles team\n * @dev This contract can extend other contracts to allow them\n * securely fetch Redstone oracle data from transactions calldata\n */\nabstract contract RedstoneConsumerNumericBase is RedstoneConsumerBase {\n  /**\n   * @dev This function can be used in a consumer contract to securely extract an\n   * oracle value for a given data feed id. Security is achieved by\n   * signatures verification, timestamp validation, and aggregating values\n   * from different authorised signers into a single numeric value. If any of the\n   * required conditions do not match, the function will revert.\n   * Note! This function expects that tx calldata contains redstone payload in the end\n   * Learn more about redstone payload here: https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector#readme\n   * @param dataFeedId bytes32 value that uniquely identifies the data feed\n   * @return Extracted and verified numeric oracle value for the given data feed id\n   */\n  function getOracleNumericValueFromTxMsg(bytes32 dataFeedId)\n    internal\n    view\n    virtual\n    returns (uint256)\n  {\n    bytes32[] memory dataFeedIds = new bytes32[](1);\n    dataFeedIds[0] = dataFeedId;\n    return getOracleNumericValuesFromTxMsg(dataFeedIds)[0];\n  }\n\n  /**\n   * @dev This function can be used in a consumer contract to securely extract several\n   * numeric oracle values for a given array of data feed ids. Security is achieved by\n   * signatures verification, timestamp validation, and aggregating values\n   * from different authorised signers into a single numeric value. If any of the\n   * required conditions do not match, the function will revert.\n   * Note! This function expects that tx calldata contains redstone payload in the end\n   * Learn more about redstone payload here: https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector#readme\n   * @param dataFeedIds An array of unique data feed identifiers\n   * @return An array of the extracted and verified oracle values in the same order\n   * as they are requested in the dataFeedIds array\n   */\n  function getOracleNumericValuesFromTxMsg(bytes32[] memory dataFeedIds)\n    internal\n    view\n    virtual\n    returns (uint256[] memory)\n  {\n    return _securelyExtractOracleValuesFromTxMsg(dataFeedIds);\n  }\n\n  /**\n   * @dev This function works similarly to the `getOracleNumericValuesFromTxMsg` with the\n   * only difference that it allows to request oracle data for an array of data feeds\n   * that may contain duplicates\n   * \n   * @param dataFeedIdsWithDuplicates An array of data feed identifiers (duplicates are allowed)\n   * @return An array of the extracted and verified oracle values in the same order\n   * as they are requested in the dataFeedIdsWithDuplicates array\n   */\n  function getOracleNumericValuesWithDuplicatesFromTxMsg(bytes32[] memory dataFeedIdsWithDuplicates) internal view returns (uint256[] memory) {\n    // Building an array without duplicates\n    bytes32[] memory dataFeedIdsWithoutDuplicates = new bytes32[](dataFeedIdsWithDuplicates.length);\n    bool alreadyIncluded;\n    uint256 uniqueDataFeedIdsCount = 0;\n\n    for (uint256 indexWithDup = 0; indexWithDup < dataFeedIdsWithDuplicates.length; indexWithDup++) {\n      // Checking if current element is already included in `dataFeedIdsWithoutDuplicates`\n      alreadyIncluded = false;\n      for (uint256 indexWithoutDup = 0; indexWithoutDup < uniqueDataFeedIdsCount; indexWithoutDup++) {\n        if (dataFeedIdsWithoutDuplicates[indexWithoutDup] == dataFeedIdsWithDuplicates[indexWithDup]) {\n          alreadyIncluded = true;\n          break;\n        }\n      }\n\n      // Adding if not included\n      if (!alreadyIncluded) {\n        dataFeedIdsWithoutDuplicates[uniqueDataFeedIdsCount] = dataFeedIdsWithDuplicates[indexWithDup];\n        uniqueDataFeedIdsCount++;\n      }\n    }\n\n    // Overriding dataFeedIdsWithoutDuplicates.length\n    // Equivalent to: dataFeedIdsWithoutDuplicates.length = uniqueDataFeedIdsCount;\n    assembly {\n      mstore(dataFeedIdsWithoutDuplicates, uniqueDataFeedIdsCount)\n    }\n\n    // Requesting oracle values (without duplicates)\n    uint256[] memory valuesWithoutDuplicates = getOracleNumericValuesFromTxMsg(dataFeedIdsWithoutDuplicates);\n\n    // Preparing result values array\n    uint256[] memory valuesWithDuplicates = new uint256[](dataFeedIdsWithDuplicates.length);\n    for (uint256 indexWithDup = 0; indexWithDup < dataFeedIdsWithDuplicates.length; indexWithDup++) {\n      for (uint256 indexWithoutDup = 0; indexWithoutDup < dataFeedIdsWithoutDuplicates.length; indexWithoutDup++) {\n        if (dataFeedIdsWithDuplicates[indexWithDup] == dataFeedIdsWithoutDuplicates[indexWithoutDup]) {\n          valuesWithDuplicates[indexWithDup] = valuesWithoutDuplicates[indexWithoutDup];\n          break;\n        }\n      }\n    }\n\n    return valuesWithDuplicates;\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./RedstoneConstants.sol\";\nimport \"./RedstoneDefaultsLib.sol\";\nimport \"./CalldataExtractor.sol\";\nimport \"../libs/BitmapLib.sol\";\nimport \"../libs/SignatureLib.sol\";\n\n/**\n * @title The base contract with the main Redstone logic\n * @author The Redstone Oracles team\n * @dev Do not use this contract directly in consumer contracts, take a\n * look at `RedstoneConsumerNumericBase` and `RedstoneConsumerBytesBase` instead\n */\nabstract contract RedstoneConsumerBase is CalldataExtractor {\n  using SafeMath for uint256;\n\n  /* ========== VIRTUAL FUNCTIONS (MAY BE OVERRIDDEN IN CHILD CONTRACTS) ========== */\n\n  /**\n   * @dev This function must be implemented by the child consumer contract.\n   * It should return a unique index for a given signer address if the signer\n   * is authorised, otherwise it should revert\n   * @param receivedSigner The address of a signer, recovered from ECDSA signature\n   * @return Unique index for a signer in the range [0..255]\n   */\n  function getAuthorisedSignerIndex(address receivedSigner) public view virtual returns (uint8);\n\n  /**\n   * @dev This function may be overridden by the child consumer contract.\n   * It should validate the timestamp against the current time (block.timestamp)\n   * It should revert with a helpful message if the timestamp is not valid\n   * @param receivedTimestampMilliseconds Timestamp extracted from calldata\n   */\n  function validateTimestamp(uint256 receivedTimestampMilliseconds) public view virtual {\n    RedstoneDefaultsLib.validateTimestamp(receivedTimestampMilliseconds);\n  }\n\n  /**\n   * @dev This function should be overridden by the child consumer contract.\n   * @return The minimum required value of unique authorised signers\n   */\n  function getUniqueSignersThreshold() public view virtual returns (uint8) {\n    return 1;\n  }\n\n  /**\n   * @dev This function may be overridden by the child consumer contract.\n   * It should aggregate values from different signers to a single uint value.\n   * By default, it calculates the median value\n   * @param values An array of uint256 values from different signers\n   * @return Result of the aggregation in the form of a single number\n   */\n  function aggregateValues(uint256[] memory values) public view virtual returns (uint256) {\n    return RedstoneDefaultsLib.aggregateValues(values);\n  }\n\n  /* ========== FUNCTIONS WITH IMPLEMENTATION (CAN NOT BE OVERRIDDEN) ========== */\n\n  /**\n   * @dev This is an internal helpful function for secure extraction oracle values\n   * from the tx calldata. Security is achieved by signatures verification, timestamp\n   * validation, and aggregating values from different authorised signers into a\n   * single numeric value. If any of the required conditions (e.g. too old timestamp or\n   * insufficient number of authorised signers) do not match, the function will revert.\n   *\n   * Note! You should not call this function in a consumer contract. You can use\n   * `getOracleNumericValuesFromTxMsg` or `getOracleNumericValueFromTxMsg` instead.\n   *\n   * @param dataFeedIds An array of unique data feed identifiers\n   * @return An array of the extracted and verified oracle values in the same order\n   * as they are requested in dataFeedIds array\n   */\n  function _securelyExtractOracleValuesFromTxMsg(bytes32[] memory dataFeedIds)\n    internal\n    view\n    returns (uint256[] memory)\n  {\n    // Initializing helpful variables and allocating memory\n    uint256[] memory uniqueSignerCountForDataFeedIds = new uint256[](dataFeedIds.length);\n    uint256[] memory signersBitmapForDataFeedIds = new uint256[](dataFeedIds.length);\n    uint256[][] memory valuesForDataFeeds = new uint256[][](dataFeedIds.length);\n    for (uint256 i = 0; i < dataFeedIds.length; i++) {\n      // The line below is commented because newly allocated arrays are filled with zeros\n      // But we left it for better readability\n      // signersBitmapForDataFeedIds[i] = 0; // <- setting to an empty bitmap\n      valuesForDataFeeds[i] = new uint256[](getUniqueSignersThreshold());\n    }\n\n    // Extracting the number of data packages from calldata\n    uint256 calldataNegativeOffset = _extractByteSizeOfUnsignedMetadata();\n    uint256 dataPackagesCount = _extractDataPackagesCountFromCalldata(calldataNegativeOffset);\n    calldataNegativeOffset += DATA_PACKAGES_COUNT_BS;\n\n    // Saving current free memory pointer\n    uint256 freeMemPtr;\n    assembly {\n      freeMemPtr := mload(FREE_MEMORY_PTR)\n    }\n\n    // Data packages extraction in a loop\n    for (uint256 dataPackageIndex = 0; dataPackageIndex < dataPackagesCount; dataPackageIndex++) {\n      // Extract data package details and update calldata offset\n      uint256 dataPackageByteSize = _extractDataPackage(\n        dataFeedIds,\n        uniqueSignerCountForDataFeedIds,\n        signersBitmapForDataFeedIds,\n        valuesForDataFeeds,\n        calldataNegativeOffset\n      );\n      calldataNegativeOffset += dataPackageByteSize;\n\n      // Shifting memory pointer back to the \"safe\" value\n      assembly {\n        mstore(FREE_MEMORY_PTR, freeMemPtr)\n      }\n    }\n\n    // Validating numbers of unique signers and calculating aggregated values for each dataFeedId\n    return _getAggregatedValues(valuesForDataFeeds, uniqueSignerCountForDataFeedIds);\n  }\n\n  /**\n   * @dev This is a private helpful function, which extracts data for a data package based\n   * on the given negative calldata offset, verifies them, and in the case of successful\n   * verification updates the corresponding data package values in memory\n   *\n   * @param dataFeedIds an array of unique data feed identifiers\n   * @param uniqueSignerCountForDataFeedIds an array with the numbers of unique signers\n   * for each data feed\n   * @param signersBitmapForDataFeedIds an array of signer bitmaps for data feeds\n   * @param valuesForDataFeeds 2-dimensional array, valuesForDataFeeds[i][j] contains\n   * j-th value for the i-th data feed\n   * @param calldataNegativeOffset negative calldata offset for the given data package\n   *\n   * @return An array of the aggregated values\n   */\n  function _extractDataPackage(\n    bytes32[] memory dataFeedIds,\n    uint256[] memory uniqueSignerCountForDataFeedIds,\n    uint256[] memory signersBitmapForDataFeedIds,\n    uint256[][] memory valuesForDataFeeds,\n    uint256 calldataNegativeOffset\n  ) private view returns (uint256) {\n    uint256 signerIndex;\n\n    (\n      uint256 dataPointsCount,\n      uint256 eachDataPointValueByteSize\n    ) = _extractDataPointsDetailsForDataPackage(calldataNegativeOffset);\n\n    // We use scopes to resolve problem with too deep stack\n    {\n      uint48 extractedTimestamp;\n      address signerAddress;\n      bytes32 signedHash;\n      bytes memory signedMessage;\n      uint256 signedMessageBytesCount;\n\n      signedMessageBytesCount = dataPointsCount.mul(eachDataPointValueByteSize + DATA_POINT_SYMBOL_BS)\n        + DATA_PACKAGE_WITHOUT_DATA_POINTS_AND_SIG_BS; //DATA_POINT_VALUE_BYTE_SIZE_BS + TIMESTAMP_BS + DATA_POINTS_COUNT_BS\n\n      uint256 timestampCalldataOffset = msg.data.length.sub(\n        calldataNegativeOffset + TIMESTAMP_NEGATIVE_OFFSET_IN_DATA_PACKAGE_WITH_STANDARD_SLOT_BS);\n\n      uint256 signedMessageCalldataOffset = msg.data.length.sub(\n        calldataNegativeOffset + SIG_BS + signedMessageBytesCount);\n\n      assembly {\n        // Extracting the signed message\n        signedMessage := extractBytesFromCalldata(\n          signedMessageCalldataOffset,\n          signedMessageBytesCount\n        )\n\n        // Hashing the signed message\n        signedHash := keccak256(add(signedMessage, BYTES_ARR_LEN_VAR_BS), signedMessageBytesCount)\n\n        // Extracting timestamp\n        extractedTimestamp := calldataload(timestampCalldataOffset)\n\n        function initByteArray(bytesCount) -> ptr {\n          ptr := mload(FREE_MEMORY_PTR)\n          mstore(ptr, bytesCount)\n          ptr := add(ptr, BYTES_ARR_LEN_VAR_BS)\n          mstore(FREE_MEMORY_PTR, add(ptr, bytesCount))\n        }\n\n        function extractBytesFromCalldata(offset, bytesCount) -> extractedBytes {\n          let extractedBytesStartPtr := initByteArray(bytesCount)\n          calldatacopy(\n            extractedBytesStartPtr,\n            offset,\n            bytesCount\n          )\n          extractedBytes := sub(extractedBytesStartPtr, BYTES_ARR_LEN_VAR_BS)\n        }\n      }\n\n      // Validating timestamp\n      validateTimestamp(extractedTimestamp);\n\n      // Verifying the off-chain signature against on-chain hashed data\n      signerAddress = SignatureLib.recoverSignerAddress(\n        signedHash,\n        calldataNegativeOffset + SIG_BS\n      );\n      signerIndex = getAuthorisedSignerIndex(signerAddress);\n    }\n\n    // Updating helpful arrays\n    {\n      bytes32 dataPointDataFeedId;\n      uint256 dataPointValue;\n      for (uint256 dataPointIndex = 0; dataPointIndex < dataPointsCount; dataPointIndex++) {\n        // Extracting data feed id and value for the current data point\n        (dataPointDataFeedId, dataPointValue) = _extractDataPointValueAndDataFeedId(\n          calldataNegativeOffset,\n          eachDataPointValueByteSize,\n          dataPointIndex\n        );\n\n        for (\n          uint256 dataFeedIdIndex = 0;\n          dataFeedIdIndex < dataFeedIds.length;\n          dataFeedIdIndex++\n        ) {\n          if (dataPointDataFeedId == dataFeedIds[dataFeedIdIndex]) {\n            uint256 bitmapSignersForDataFeedId = signersBitmapForDataFeedIds[dataFeedIdIndex];\n\n            if (\n              !BitmapLib.getBitFromBitmap(bitmapSignersForDataFeedId, signerIndex) && /* current signer was not counted for current dataFeedId */\n              uniqueSignerCountForDataFeedIds[dataFeedIdIndex] < getUniqueSignersThreshold()\n            ) {\n              // Increase unique signer counter\n              uniqueSignerCountForDataFeedIds[dataFeedIdIndex]++;\n\n              // Add new value\n              valuesForDataFeeds[dataFeedIdIndex][\n                uniqueSignerCountForDataFeedIds[dataFeedIdIndex] - 1\n              ] = dataPointValue;\n\n              // Update signers bitmap\n              signersBitmapForDataFeedIds[dataFeedIdIndex] = BitmapLib.setBitInBitmap(\n                bitmapSignersForDataFeedId,\n                signerIndex\n              );\n            }\n\n            // Breaking, as there couldn't be several indexes for the same feed ID\n            break;\n          }\n        }\n      }\n    }\n\n    // Return total data package byte size\n    return\n      DATA_PACKAGE_WITHOUT_DATA_POINTS_BS +\n      (eachDataPointValueByteSize + DATA_POINT_SYMBOL_BS) *\n      dataPointsCount;\n  }\n\n  /**\n   * @dev This is a private helpful function, which aggregates values from different\n   * authorised signers for the given arrays of values for each data feed\n   *\n   * @param valuesForDataFeeds 2-dimensional array, valuesForDataFeeds[i][j] contains\n   * j-th value for the i-th data feed\n   * @param uniqueSignerCountForDataFeedIds an array with the numbers of unique signers\n   * for each data feed\n   *\n   * @return An array of the aggregated values\n   */\n  function _getAggregatedValues(\n    uint256[][] memory valuesForDataFeeds,\n    uint256[] memory uniqueSignerCountForDataFeedIds\n  ) private view returns (uint256[] memory) {\n    uint256[] memory aggregatedValues = new uint256[](valuesForDataFeeds.length);\n    uint256 uniqueSignersThreshold = getUniqueSignersThreshold();\n\n    for (uint256 dataFeedIndex = 0; dataFeedIndex < valuesForDataFeeds.length; dataFeedIndex++) {\n      if (uniqueSignerCountForDataFeedIds[dataFeedIndex] < uniqueSignersThreshold) {\n        revert InsufficientNumberOfUniqueSigners(\n          uniqueSignerCountForDataFeedIds[dataFeedIndex],\n          uniqueSignersThreshold);\n      }\n      uint256 aggregatedValueForDataFeedId = aggregateValues(valuesForDataFeeds[dataFeedIndex]);\n      aggregatedValues[dataFeedIndex] = aggregatedValueForDataFeedId;\n    }\n\n    return aggregatedValues;\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nlibrary SignatureLib {\n  uint256 constant ECDSA_SIG_R_BS = 32;\n  uint256 constant ECDSA_SIG_S_BS = 32;\n\n  function recoverSignerAddress(bytes32 signedHash, uint256 signatureCalldataNegativeOffset)\n    internal\n    pure\n    returns (address)\n  {\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n    assembly {\n      let signatureCalldataStartPos := sub(calldatasize(), signatureCalldataNegativeOffset)\n      r := calldataload(signatureCalldataStartPos)\n      signatureCalldataStartPos := add(signatureCalldataStartPos, ECDSA_SIG_R_BS)\n      s := calldataload(signatureCalldataStartPos)\n      signatureCalldataStartPos := add(signatureCalldataStartPos, ECDSA_SIG_S_BS)\n      v := byte(0, calldataload(signatureCalldataStartPos)) // last byte of the signature memory array\n    }\n    return ecrecover(signedHash, v, r, s);\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nlibrary BitmapLib {\n  function setBitInBitmap(uint256 bitmap, uint256 bitIndex) internal pure returns (uint256) {\n    return bitmap | (1 << bitIndex);\n  }\n\n  function getBitFromBitmap(uint256 bitmap, uint256 bitIndex) internal pure returns (bool) {\n    uint256 bitAtIndex = bitmap & (1 << bitIndex);\n    return bitAtIndex > 0;\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./RedstoneConstants.sol\";\n\n/**\n * @title The base contract with the main logic of data extraction from calldata\n * @author The Redstone Oracles team\n * @dev This contract was created to reuse the same logic in the RedstoneConsumerBase\n * and the ProxyConnector contracts\n */\ncontract CalldataExtractor is RedstoneConstants {\n  using SafeMath for uint256;\n\n  function _extractByteSizeOfUnsignedMetadata() internal pure returns (uint256) {\n    // Checking if the calldata ends with the RedStone marker\n    bool hasValidRedstoneMarker;\n    assembly {\n      let calldataLast32Bytes := calldataload(sub(calldatasize(), STANDARD_SLOT_BS))\n      hasValidRedstoneMarker := eq(\n        REDSTONE_MARKER_MASK,\n        and(calldataLast32Bytes, REDSTONE_MARKER_MASK)\n      )\n    }\n    if (!hasValidRedstoneMarker) {\n      revert CalldataMustHaveValidPayload();\n    }\n\n    // Using uint24, because unsigned metadata byte size number has 3 bytes\n    uint24 unsignedMetadataByteSize;\n    if (REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS > msg.data.length) {\n      revert CalldataOverOrUnderFlow();\n    }\n    assembly {\n      unsignedMetadataByteSize := calldataload(\n        sub(calldatasize(), REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS)\n      )\n    }\n    uint256 calldataNegativeOffset = unsignedMetadataByteSize\n      + UNSIGNED_METADATA_BYTE_SIZE_BS\n      + REDSTONE_MARKER_BS;\n    if (calldataNegativeOffset + DATA_PACKAGES_COUNT_BS > msg.data.length) {\n      revert IncorrectUnsignedMetadataSize();\n    }\n    return calldataNegativeOffset;\n  }\n\n  // We return uint16, because unsigned metadata byte size number has 2 bytes\n  function _extractDataPackagesCountFromCalldata(uint256 calldataNegativeOffset)\n    internal\n    pure\n    returns (uint16 dataPackagesCount)\n  {\n    uint256 calldataNegativeOffsetWithStandardSlot = calldataNegativeOffset + STANDARD_SLOT_BS;\n    if (calldataNegativeOffsetWithStandardSlot > msg.data.length) {\n      revert CalldataOverOrUnderFlow();\n    }\n    assembly {\n      dataPackagesCount := calldataload(\n        sub(calldatasize(), calldataNegativeOffsetWithStandardSlot)\n      )\n    }\n    return dataPackagesCount;\n  }\n\n  function _extractDataPointValueAndDataFeedId(\n    uint256 calldataNegativeOffsetForDataPackage,\n    uint256 defaultDataPointValueByteSize,\n    uint256 dataPointIndex\n  ) internal pure virtual returns (bytes32 dataPointDataFeedId, uint256 dataPointValue) {\n    uint256 negativeOffsetToDataPoints = calldataNegativeOffsetForDataPackage + DATA_PACKAGE_WITHOUT_DATA_POINTS_BS;\n    uint256 dataPointNegativeOffset = negativeOffsetToDataPoints.add(\n      (1 + dataPointIndex).mul((defaultDataPointValueByteSize + DATA_POINT_SYMBOL_BS))\n    );\n    uint256 dataPointCalldataOffset = msg.data.length.sub(dataPointNegativeOffset);\n    assembly {\n      dataPointDataFeedId := calldataload(dataPointCalldataOffset)\n      dataPointValue := calldataload(add(dataPointCalldataOffset, DATA_POINT_SYMBOL_BS))\n    }\n  }\n\n  function _extractDataPointsDetailsForDataPackage(uint256 calldataNegativeOffsetForDataPackage)\n    internal\n    pure\n    returns (uint256 dataPointsCount, uint256 eachDataPointValueByteSize)\n  {\n    // Using uint24, because data points count byte size number has 3 bytes\n    uint24 dataPointsCount_;\n\n    // Using uint32, because data point value byte size has 4 bytes\n    uint32 eachDataPointValueByteSize_;\n\n    // Extract data points count\n    uint256 negativeCalldataOffset = calldataNegativeOffsetForDataPackage + SIG_BS;\n    uint256 calldataOffset = msg.data.length.sub(negativeCalldataOffset + STANDARD_SLOT_BS);\n    assembly {\n      dataPointsCount_ := calldataload(calldataOffset)\n    }\n\n    // Extract each data point value size\n    calldataOffset = calldataOffset.sub(DATA_POINTS_COUNT_BS);\n    assembly {\n      eachDataPointValueByteSize_ := calldataload(calldataOffset)\n    }\n\n    // Prepare returned values\n    dataPointsCount = dataPointsCount_;\n    eachDataPointValueByteSize = eachDataPointValueByteSize_;\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\nimport \"../libs/NumericArrayLib.sol\";\n\n/**\n * @title Default implementations of virtual redstone consumer base functions\n * @author The Redstone Oracles team\n */\nlibrary RedstoneDefaultsLib {\n  uint256 constant DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS = 3 minutes;\n  uint256 constant DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS = 1 minutes;\n\n  error TimestampFromTooLongFuture(uint256 receivedTimestampSeconds, uint256 blockTimestamp);\n  error TimestampIsTooOld(uint256 receivedTimestampSeconds, uint256 blockTimestamp);\n\n  function validateTimestamp(uint256 receivedTimestampMilliseconds) internal view {\n    // Getting data timestamp from future seems quite unlikely\n    // But we've already spent too much time with different cases\n    // Where block.timestamp was less than dataPackage.timestamp.\n    // Some blockchains may case this problem as well.\n    // That's why we add MAX_BLOCK_TIMESTAMP_DELAY\n    // and allow data \"from future\" but with a small delay\n    uint256 receivedTimestampSeconds = receivedTimestampMilliseconds / 1000;\n\n    if (block.timestamp < receivedTimestampSeconds) {\n      if ((receivedTimestampSeconds - block.timestamp) > DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS) {\n        revert TimestampFromTooLongFuture(receivedTimestampSeconds, block.timestamp);\n      }\n    } else if ((block.timestamp - receivedTimestampSeconds) > DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS) {\n      revert TimestampIsTooOld(receivedTimestampSeconds, block.timestamp);\n    }\n  }\n\n  function aggregateValues(uint256[] memory values) internal pure returns (uint256) {\n    return NumericArrayLib.pickMedian(values);\n  }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.4;\n\n/**\n * @title The base contract with helpful constants\n * @author The Redstone Oracles team\n * @dev It mainly contains redstone-related values, which improve readability\n * of other contracts (e.g. CalldataExtractor and RedstoneConsumerBase)\n */\ncontract RedstoneConstants {\n  // === Abbreviations ===\n  // BS - Bytes size\n  // PTR - Pointer (memory location)\n  // SIG - Signature\n\n  // Solidity and YUL constants\n  uint256 internal constant STANDARD_SLOT_BS = 32;\n  uint256 internal constant FREE_MEMORY_PTR = 0x40;\n  uint256 internal constant BYTES_ARR_LEN_VAR_BS = 32;\n  uint256 internal constant FUNCTION_SIGNATURE_BS = 4;\n  uint256 internal constant REVERT_MSG_OFFSET = 68; // Revert message structure described here: https://ethereum.stackexchange.com/a/66173/106364\n  uint256 internal constant STRING_ERR_MESSAGE_MASK = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n\n  // RedStone protocol consts\n  uint256 internal constant SIG_BS = 65;\n  uint256 internal constant TIMESTAMP_BS = 6;\n  uint256 internal constant DATA_PACKAGES_COUNT_BS = 2;\n  uint256 internal constant DATA_POINTS_COUNT_BS = 3;\n  uint256 internal constant DATA_POINT_VALUE_BYTE_SIZE_BS = 4;\n  uint256 internal constant DATA_POINT_SYMBOL_BS = 32;\n  uint256 internal constant DEFAULT_DATA_POINT_VALUE_BS = 32;\n  uint256 internal constant UNSIGNED_METADATA_BYTE_SIZE_BS = 3;\n  uint256 internal constant REDSTONE_MARKER_BS = 9; // byte size of 0x000002ed57011e0000\n  uint256 internal constant REDSTONE_MARKER_MASK = 0x0000000000000000000000000000000000000000000000000002ed57011e0000;\n\n  // Derived values (based on consts)\n  uint256 internal constant TIMESTAMP_NEGATIVE_OFFSET_IN_DATA_PACKAGE_WITH_STANDARD_SLOT_BS = 104; // SIG_BS + DATA_POINTS_COUNT_BS + DATA_POINT_VALUE_BYTE_SIZE_BS + STANDARD_SLOT_BS\n  uint256 internal constant DATA_PACKAGE_WITHOUT_DATA_POINTS_BS = 78; // DATA_POINT_VALUE_BYTE_SIZE_BS + TIMESTAMP_BS + DATA_POINTS_COUNT_BS + SIG_BS\n  uint256 internal constant DATA_PACKAGE_WITHOUT_DATA_POINTS_AND_SIG_BS = 13; // DATA_POINT_VALUE_BYTE_SIZE_BS + TIMESTAMP_BS + DATA_POINTS_COUNT_BS\n  uint256 internal constant REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS = 41; // REDSTONE_MARKER_BS + STANDARD_SLOT_BS\n\n  // Error messages\n  error CalldataOverOrUnderFlow();\n  error IncorrectUnsignedMetadataSize();\n  error InsufficientNumberOfUniqueSigners(uint256 receivedSignersCount, uint256 requiredSignersCount);\n  error EachSignerMustProvideTheSameValue();\n  error EmptyCalldataPointersArr();\n  error InvalidCalldataPointer();\n  error CalldataMustHaveValidPayload();\n  error SignerNotAuthorised(address receivedSigner);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nlibrary NumericArrayLib {\n  // This function sort array in memory using bubble sort algorithm,\n  // which performs even better than quick sort for small arrays\n\n  uint256 constant BYTES_ARR_LEN_VAR_BS = 32;\n  uint256 constant UINT256_VALUE_BS = 32;\n\n  error CanNotPickMedianOfEmptyArray();\n\n  // This function modifies the array\n  function pickMedian(uint256[] memory arr) internal pure returns (uint256) {\n    if (arr.length == 0) {\n      revert CanNotPickMedianOfEmptyArray();\n    }\n    sort(arr);\n    uint256 middleIndex = arr.length / 2;\n    if (arr.length % 2 == 0) {\n      uint256 sum = SafeMath.add(arr[middleIndex - 1], arr[middleIndex]);\n      return sum / 2;\n    } else {\n      return arr[middleIndex];\n    }\n  }\n\n  function sort(uint256[] memory arr) internal pure {\n    assembly {\n      let arrLength := mload(arr)\n      let valuesPtr := add(arr, BYTES_ARR_LEN_VAR_BS)\n      let endPtr := add(valuesPtr, mul(arrLength, UINT256_VALUE_BS))\n      for {\n        let arrIPtr := valuesPtr\n      } lt(arrIPtr, endPtr) {\n        arrIPtr := add(arrIPtr, UINT256_VALUE_BS) // arrIPtr += 32\n      } {\n        for {\n          let arrJPtr := valuesPtr\n        } lt(arrJPtr, arrIPtr) {\n          arrJPtr := add(arrJPtr, UINT256_VALUE_BS) // arrJPtr += 32\n        } {\n          let arrI := mload(arrIPtr)\n          let arrJ := mload(arrJPtr)\n          if lt(arrI, arrJ) {\n            mstore(arrIPtr, arrJ)\n            mstore(arrJPtr, arrI)\n          }\n        }\n      }\n    }\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol": {
				"CalldataExtractor": {
					"abi": [
						{
							"inputs": [],
							"name": "CalldataMustHaveValidPayload",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CalldataOverOrUnderFlow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EachSignerMustProvideTheSameValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyCalldataPointersArr",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectUnsignedMetadataSize",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedSignersCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requiredSignersCount",
									"type": "uint256"
								}
							],
							"name": "InsufficientNumberOfUniqueSigners",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCalldataPointer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "SignerNotAuthorised",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "The Redstone Oracles team",
						"details": "This contract was created to reuse the same logic in the RedstoneConsumerBase and the ProxyConnector contracts",
						"kind": "dev",
						"methods": {},
						"title": "The base contract with the main logic of data extraction from calldata",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":405:4101  contract CalldataExtractor is RedstoneConstants {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":405:4101  contract CalldataExtractor is RedstoneConstants {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220872d630f6384a100737e6b00b51c3ffdbb08a814fa290447e74dd494a9fed3b064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220872d630f6384a100737e6b00b51c3ffdbb08a814fa290447e74dd494a9fed3b064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x2D PUSH4 0xF6384A1 STOP PUSH20 0x7E6B00B51C3FFDBB08A814FA290447E74DD494A9 INVALID 0xD3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "405:3696:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220872d630f6384a100737e6b00b51c3ffdbb08a814fa290447e74dd494a9fed3b064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x2D PUSH4 0xF6384A1 STOP PUSH20 0x7E6B00B51C3FFDBB08A814FA290447E74DD494A9 INVALID 0xD3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "405:3696:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_extractByteSizeOfUnsignedMetadata()": "infinite",
								"_extractDataPackagesCountFromCalldata(uint256)": "infinite",
								"_extractDataPointValueAndDataFeedId(uint256,uint256,uint256)": "infinite",
								"_extractDataPointsDetailsForDataPackage(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 4101,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220872d630f6384a100737e6b00b51c3ffdbb08a814fa290447e74dd494a9fed3b064736f6c634300080d0033",
									".code": [
										{
											"begin": 405,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 4101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 4101,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CalldataMustHaveValidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CalldataOverOrUnderFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EachSignerMustProvideTheSameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCalldataPointersArr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectUnsignedMetadataSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedSignersCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignersCount\",\"type\":\"uint256\"}],\"name\":\"InsufficientNumberOfUniqueSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldataPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"SignerNotAuthorised\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"The Redstone Oracles team\",\"details\":\"This contract was created to reuse the same logic in the RedstoneConsumerBase and the ProxyConnector contracts\",\"kind\":\"dev\",\"methods\":{},\"title\":\"The base contract with the main logic of data extraction from calldata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":\"CalldataExtractor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":{\"keccak256\":\"0xdd3de13c7194743e56133e19bb228a88d446e41a9494215c8e4b908155644eae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f69c992aeaabc2823648fa7be053d5c9b93e3914f2397f6213e87ecf167ed226\",\"dweb:/ipfs/QmRgynehX4BGMMsuEVg8LYUp55M8u1WELSCP4amYgLWprn\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":{\"keccak256\":\"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f\",\"dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol": {
				"RedstoneConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "CalldataMustHaveValidPayload",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CalldataOverOrUnderFlow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EachSignerMustProvideTheSameValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyCalldataPointersArr",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectUnsignedMetadataSize",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedSignersCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requiredSignersCount",
									"type": "uint256"
								}
							],
							"name": "InsufficientNumberOfUniqueSigners",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCalldataPointer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "SignerNotAuthorised",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "The Redstone Oracles team",
						"details": "It mainly contains redstone-related values, which improve readability of other contracts (e.g. CalldataExtractor and RedstoneConsumerBase)",
						"kind": "dev",
						"methods": {},
						"title": "The base contract with helpful constants",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":309:2684  contract RedstoneConstants {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":309:2684  contract RedstoneConstants {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad8c65438eb34f8da83e76a9763879b23770076c086a36985e687caf09ecdea964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ad8c65438eb34f8da83e76a9763879b23770076c086a36985e687caf09ecdea964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP13 PUSH6 0x438EB34F8DA8 RETURNDATACOPY PUSH23 0xA9763879B23770076C086A36985E687CAF09ECDEA96473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "309:2375:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ad8c65438eb34f8da83e76a9763879b23770076c086a36985e687caf09ecdea964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP13 PUSH6 0x438EB34F8DA8 RETURNDATACOPY PUSH23 0xA9763879B23770076C086A36985E687CAF09ECDEA96473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "309:2375:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 2684,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad8c65438eb34f8da83e76a9763879b23770076c086a36985e687caf09ecdea964736f6c634300080d0033",
									".code": [
										{
											"begin": 309,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 2684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 309,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 2684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 309,
											"end": 2684,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CalldataMustHaveValidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CalldataOverOrUnderFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EachSignerMustProvideTheSameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCalldataPointersArr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectUnsignedMetadataSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedSignersCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignersCount\",\"type\":\"uint256\"}],\"name\":\"InsufficientNumberOfUniqueSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldataPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"SignerNotAuthorised\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"The Redstone Oracles team\",\"details\":\"It mainly contains redstone-related values, which improve readability of other contracts (e.g. CalldataExtractor and RedstoneConsumerBase)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"The base contract with helpful constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":\"RedstoneConstants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":{\"keccak256\":\"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f\",\"dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol": {
				"RedstoneConsumerBase": {
					"abi": [
						{
							"inputs": [],
							"name": "CalldataMustHaveValidPayload",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CalldataOverOrUnderFlow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CanNotPickMedianOfEmptyArray",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EachSignerMustProvideTheSameValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyCalldataPointersArr",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectUnsignedMetadataSize",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedSignersCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requiredSignersCount",
									"type": "uint256"
								}
							],
							"name": "InsufficientNumberOfUniqueSigners",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCalldataPointer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "SignerNotAuthorised",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampFromTooLongFuture",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampIsTooOld",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "aggregateValues",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "getAuthorisedSignerIndex",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUniqueSignersThreshold",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampMilliseconds",
									"type": "uint256"
								}
							],
							"name": "validateTimestamp",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Redstone Oracles team",
						"details": "Do not use this contract directly in consumer contracts, take a look at `RedstoneConsumerNumericBase` and `RedstoneConsumerBytesBase` instead",
						"kind": "dev",
						"methods": {
							"aggregateValues(uint256[])": {
								"details": "This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value",
								"params": {
									"values": "An array of uint256 values from different signers"
								},
								"returns": {
									"_0": "Result of the aggregation in the form of a single number"
								}
							},
							"getAuthorisedSignerIndex(address)": {
								"details": "This function must be implemented by the child consumer contract. It should return a unique index for a given signer address if the signer is authorised, otherwise it should revert",
								"params": {
									"receivedSigner": "The address of a signer, recovered from ECDSA signature"
								},
								"returns": {
									"_0": "Unique index for a signer in the range [0..255]"
								}
							},
							"getUniqueSignersThreshold()": {
								"details": "This function should be overridden by the child consumer contract.",
								"returns": {
									"_0": "The minimum required value of unique authorised signers"
								}
							},
							"validateTimestamp(uint256)": {
								"details": "This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid",
								"params": {
									"receivedTimestampMilliseconds": "Timestamp extracted from calldata"
								}
							}
						},
						"title": "The base contract with the main Redstone logic",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregateValues(uint256[])": "b24ebfcc",
							"getAuthorisedSignerIndex(address)": "3ce142f5",
							"getUniqueSignersThreshold()": "f90c4924",
							"validateTimestamp(uint256)": "f50b2efe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CalldataMustHaveValidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CalldataOverOrUnderFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CanNotPickMedianOfEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EachSignerMustProvideTheSameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCalldataPointersArr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectUnsignedMetadataSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedSignersCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignersCount\",\"type\":\"uint256\"}],\"name\":\"InsufficientNumberOfUniqueSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldataPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"SignerNotAuthorised\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampFromTooLongFuture\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampIsTooOld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"aggregateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"getAuthorisedSignerIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniqueSignersThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampMilliseconds\",\"type\":\"uint256\"}],\"name\":\"validateTimestamp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Redstone Oracles team\",\"details\":\"Do not use this contract directly in consumer contracts, take a look at `RedstoneConsumerNumericBase` and `RedstoneConsumerBytesBase` instead\",\"kind\":\"dev\",\"methods\":{\"aggregateValues(uint256[])\":{\"details\":\"This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value\",\"params\":{\"values\":\"An array of uint256 values from different signers\"},\"returns\":{\"_0\":\"Result of the aggregation in the form of a single number\"}},\"getAuthorisedSignerIndex(address)\":{\"details\":\"This function must be implemented by the child consumer contract. It should return a unique index for a given signer address if the signer is authorised, otherwise it should revert\",\"params\":{\"receivedSigner\":\"The address of a signer, recovered from ECDSA signature\"},\"returns\":{\"_0\":\"Unique index for a signer in the range [0..255]\"}},\"getUniqueSignersThreshold()\":{\"details\":\"This function should be overridden by the child consumer contract.\",\"returns\":{\"_0\":\"The minimum required value of unique authorised signers\"}},\"validateTimestamp(uint256)\":{\"details\":\"This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid\",\"params\":{\"receivedTimestampMilliseconds\":\"Timestamp extracted from calldata\"}}},\"title\":\"The base contract with the main Redstone logic\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":\"RedstoneConsumerBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":{\"keccak256\":\"0xdd3de13c7194743e56133e19bb228a88d446e41a9494215c8e4b908155644eae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f69c992aeaabc2823648fa7be053d5c9b93e3914f2397f6213e87ecf167ed226\",\"dweb:/ipfs/QmRgynehX4BGMMsuEVg8LYUp55M8u1WELSCP4amYgLWprn\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":{\"keccak256\":\"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f\",\"dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":{\"keccak256\":\"0xcea791cdbc054d88248f94d600761fe2b33721f016608444828b400511c2f14a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bae01e69b26c58cbb0fcb2ce192e3fcde27f32855b2546fedf13d85475f7ede\",\"dweb:/ipfs/QmVTHJdboEmwGtwxZuw8xhP142cx6x7UJ5na4uTGEevS4k\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":{\"keccak256\":\"0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73\",\"dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":{\"keccak256\":\"0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb\",\"dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":{\"keccak256\":\"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd\",\"dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":{\"keccak256\":\"0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4\",\"dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol": {
				"RedstoneConsumerNumericBase": {
					"abi": [
						{
							"inputs": [],
							"name": "CalldataMustHaveValidPayload",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CalldataOverOrUnderFlow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CanNotPickMedianOfEmptyArray",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EachSignerMustProvideTheSameValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyCalldataPointersArr",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectUnsignedMetadataSize",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedSignersCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requiredSignersCount",
									"type": "uint256"
								}
							],
							"name": "InsufficientNumberOfUniqueSigners",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCalldataPointer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "SignerNotAuthorised",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampFromTooLongFuture",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampIsTooOld",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "aggregateValues",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "getAuthorisedSignerIndex",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUniqueSignersThreshold",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampMilliseconds",
									"type": "uint256"
								}
							],
							"name": "validateTimestamp",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Redstone Oracles team",
						"details": "This contract can extend other contracts to allow them securely fetch Redstone oracle data from transactions calldata",
						"kind": "dev",
						"methods": {
							"aggregateValues(uint256[])": {
								"details": "This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value",
								"params": {
									"values": "An array of uint256 values from different signers"
								},
								"returns": {
									"_0": "Result of the aggregation in the form of a single number"
								}
							},
							"getAuthorisedSignerIndex(address)": {
								"details": "This function must be implemented by the child consumer contract. It should return a unique index for a given signer address if the signer is authorised, otherwise it should revert",
								"params": {
									"receivedSigner": "The address of a signer, recovered from ECDSA signature"
								},
								"returns": {
									"_0": "Unique index for a signer in the range [0..255]"
								}
							},
							"getUniqueSignersThreshold()": {
								"details": "This function should be overridden by the child consumer contract.",
								"returns": {
									"_0": "The minimum required value of unique authorised signers"
								}
							},
							"validateTimestamp(uint256)": {
								"details": "This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid",
								"params": {
									"receivedTimestampMilliseconds": "Timestamp extracted from calldata"
								}
							}
						},
						"title": "The base contract for Redstone consumers' contracts that allows to securely calculate numeric redstone oracle values",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregateValues(uint256[])": "b24ebfcc",
							"getAuthorisedSignerIndex(address)": "3ce142f5",
							"getUniqueSignersThreshold()": "f90c4924",
							"validateTimestamp(uint256)": "f50b2efe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CalldataMustHaveValidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CalldataOverOrUnderFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CanNotPickMedianOfEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EachSignerMustProvideTheSameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCalldataPointersArr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectUnsignedMetadataSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedSignersCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignersCount\",\"type\":\"uint256\"}],\"name\":\"InsufficientNumberOfUniqueSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldataPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"SignerNotAuthorised\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampFromTooLongFuture\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampIsTooOld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"aggregateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"getAuthorisedSignerIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniqueSignersThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampMilliseconds\",\"type\":\"uint256\"}],\"name\":\"validateTimestamp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Redstone Oracles team\",\"details\":\"This contract can extend other contracts to allow them securely fetch Redstone oracle data from transactions calldata\",\"kind\":\"dev\",\"methods\":{\"aggregateValues(uint256[])\":{\"details\":\"This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value\",\"params\":{\"values\":\"An array of uint256 values from different signers\"},\"returns\":{\"_0\":\"Result of the aggregation in the form of a single number\"}},\"getAuthorisedSignerIndex(address)\":{\"details\":\"This function must be implemented by the child consumer contract. It should return a unique index for a given signer address if the signer is authorised, otherwise it should revert\",\"params\":{\"receivedSigner\":\"The address of a signer, recovered from ECDSA signature\"},\"returns\":{\"_0\":\"Unique index for a signer in the range [0..255]\"}},\"getUniqueSignersThreshold()\":{\"details\":\"This function should be overridden by the child consumer contract.\",\"returns\":{\"_0\":\"The minimum required value of unique authorised signers\"}},\"validateTimestamp(uint256)\":{\"details\":\"This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid\",\"params\":{\"receivedTimestampMilliseconds\":\"Timestamp extracted from calldata\"}}},\"title\":\"The base contract for Redstone consumers' contracts that allows to securely calculate numeric redstone oracle values\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol\":\"RedstoneConsumerNumericBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":{\"keccak256\":\"0xdd3de13c7194743e56133e19bb228a88d446e41a9494215c8e4b908155644eae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f69c992aeaabc2823648fa7be053d5c9b93e3914f2397f6213e87ecf167ed226\",\"dweb:/ipfs/QmRgynehX4BGMMsuEVg8LYUp55M8u1WELSCP4amYgLWprn\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":{\"keccak256\":\"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f\",\"dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":{\"keccak256\":\"0xcea791cdbc054d88248f94d600761fe2b33721f016608444828b400511c2f14a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bae01e69b26c58cbb0fcb2ce192e3fcde27f32855b2546fedf13d85475f7ede\",\"dweb:/ipfs/QmVTHJdboEmwGtwxZuw8xhP142cx6x7UJ5na4uTGEevS4k\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol\":{\"keccak256\":\"0xe8e70ed8bb3efc527dccaf5919587c7ff3980836256d7d8db8f632721a3cf956\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://550168f845b478dbb81f3f5dcf71cc61d64558a6dd676d95d2c46008b5e3e380\",\"dweb:/ipfs/Qmc2F5p3NdVubj733YqBGHyhA4TBnvEbqRRadkedboKw8Y\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":{\"keccak256\":\"0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73\",\"dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":{\"keccak256\":\"0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb\",\"dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":{\"keccak256\":\"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd\",\"dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":{\"keccak256\":\"0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4\",\"dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol": {
				"RedstoneDefaultsLib": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampFromTooLongFuture",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampIsTooOld",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "The Redstone Oracles team",
						"kind": "dev",
						"methods": {},
						"title": "Default implementations of virtual redstone consumer base functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":225:1683  library RedstoneDefaultsLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":225:1683  library RedstoneDefaultsLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061d2f7bbfe461f8682be5cdd09768b833fb681c941c681e1b5ec0c999dc25ef564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061d2f7bbfe461f8682be5cdd09768b833fb681c941c681e1b5ec0c999dc25ef564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xD2F7 0xBB INVALID CHAINID 0x1F DUP7 DUP3 0xBE 0x5C 0xDD MULMOD PUSH23 0x8B833FB681C941C681E1B5EC0C999DC25EF564736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "225:1458:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061d2f7bbfe461f8682be5cdd09768b833fb681c941c681e1b5ec0c999dc25ef564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xD2F7 0xBB INVALID CHAINID 0x1F DUP7 DUP3 0xBE 0x5C 0xDD MULMOD PUSH23 0x8B833FB681C941C681E1B5EC0C999DC25EF564736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "225:1458:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"aggregateValues(uint256[] memory)": "infinite",
								"validateTimestamp(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 225,
									"end": 1683,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061d2f7bbfe461f8682be5cdd09768b833fb681c941c681e1b5ec0c999dc25ef564736f6c634300080d0033",
									".code": [
										{
											"begin": 225,
											"end": 1683,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 1683,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampFromTooLongFuture\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampIsTooOld\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"The Redstone Oracles team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Default implementations of virtual redstone consumer base functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":\"RedstoneDefaultsLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":{\"keccak256\":\"0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73\",\"dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":{\"keccak256\":\"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd\",\"dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol": {
				"CustomUrlsConsumerBase": {
					"abi": [
						{
							"inputs": [],
							"name": "CalldataMustHaveValidPayload",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CalldataOverOrUnderFlow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CanNotPickMedianOfEmptyArray",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EachSignerMustProvideTheSameValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptyCalldataPointersArr",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectUnsignedMetadataSize",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedSignersCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requiredSignersCount",
									"type": "uint256"
								}
							],
							"name": "InsufficientNumberOfUniqueSigners",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCalldataPointer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receivedSigner",
									"type": "address"
								}
							],
							"name": "SignerNotAuthorised",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampFromTooLongFuture",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "TimestampIsTooOld",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "aggregateValues",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signerAddress",
									"type": "address"
								}
							],
							"name": "getAuthorisedSignerIndex",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUniqueSignersThreshold",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receivedTimestampMilliseconds",
									"type": "uint256"
								}
							],
							"name": "validateTimestamp",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"aggregateValues(uint256[])": {
								"details": "This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value",
								"params": {
									"values": "An array of uint256 values from different signers"
								},
								"returns": {
									"_0": "Result of the aggregation in the form of a single number"
								}
							},
							"getUniqueSignersThreshold()": {
								"details": "This function should be overridden by the child consumer contract.",
								"returns": {
									"_0": "The minimum required value of unique authorised signers"
								}
							},
							"validateTimestamp(uint256)": {
								"details": "This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid",
								"params": {
									"receivedTimestampMilliseconds": "Timestamp extracted from calldata"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":114:666  contract CustomUrlsConsumerBase is RedstoneConsumerNumericBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":114:666  contract CustomUrlsConsumerBase is RedstoneConsumerNumericBase {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ce142f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb24ebfcc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf50b2efe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf90c4924\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":286:664  function getAuthorisedSignerIndex(address signerAddress)... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2280:2429  function aggregateValues(uint256[] memory values) public view virtual returns (uint256) {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1505:1670  function validateTimestamp(uint256 receivedTimestampMilliseconds) public view virtual {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":181:282  function getUniqueSignersThreshold() public view virtual override returns (uint8) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":286:664  function getAuthorisedSignerIndex(address signerAddress)... */\n    tag_10:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":401:406  uint8 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":437:479  0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF */\n      0x11fffc9970c41b9bfb9aa35be838d39bce918cff\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":420:479  signerAddress == 0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":420:433  signerAddress */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":420:479  signerAddress == 0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":416:660  if (signerAddress == 0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF) {... */\n      tag_27\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":496:497  0 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":489:497  return 0 */\n      swap1\n      pop\n      jump(tag_26)\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":416:660  if (signerAddress == 0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF) {... */\n    tag_27:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":531:573  0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6 */\n      0xdbcc2c6c892c8d3e3fe4d325fec810b7376a5ed6\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":514:573  signerAddress == 0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":514:527  signerAddress */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":514:573  signerAddress == 0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":510:660  if (signerAddress == 0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6) {... */\n      tag_29\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":590:591  1 */\n      0x01\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":583:591  return 1 */\n      swap1\n      pop\n      jump(tag_26)\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":510:660  if (signerAddress == 0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6) {... */\n    tag_29:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":639:652  signerAddress */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":619:653  SignerNotAuthorised(signerAddress) */\n      mload(0x40)\n      0xec459bc000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":286:664  function getAuthorisedSignerIndex(address signerAddress)... */\n    tag_26:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2280:2429  function aggregateValues(uint256[] memory values) public view virtual returns (uint256) {... */\n    tag_16:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2359:2366  uint256 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2381:2424  RedstoneDefaultsLib.aggregateValues(values) */\n      tag_34\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2417:2423  values */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2381:2416  RedstoneDefaultsLib.aggregateValues */\n      tag_35\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2381:2424  RedstoneDefaultsLib.aggregateValues(values) */\n      jump\t// in\n    tag_34:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2374:2424  return RedstoneDefaultsLib.aggregateValues(values) */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":2280:2429  function aggregateValues(uint256[] memory values) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1505:1670  function validateTimestamp(uint256 receivedTimestampMilliseconds) public view virtual {... */\n    tag_22:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1597:1665  RedstoneDefaultsLib.validateTimestamp(receivedTimestampMilliseconds) */\n      tag_37\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1635:1664  receivedTimestampMilliseconds */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1597:1634  RedstoneDefaultsLib.validateTimestamp */\n      tag_38\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1597:1665  RedstoneDefaultsLib.validateTimestamp(receivedTimestampMilliseconds) */\n      jump\t// in\n    tag_37:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":1505:1670  function validateTimestamp(uint256 receivedTimestampMilliseconds) public view virtual {... */\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":181:282  function getUniqueSignersThreshold() public view virtual override returns (uint8) {... */\n    tag_24:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":256:261  uint8 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":276:277  2 */\n      0x02\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":269:277  return 2 */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":181:282  function getUniqueSignersThreshold() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1547:1681  function aggregateValues(uint256[] memory values) internal pure returns (uint256) {... */\n    tag_35:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1620:1627  uint256 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1642:1676  NumericArrayLib.pickMedian(values) */\n      tag_41\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1669:1675  values */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1642:1668  NumericArrayLib.pickMedian */\n      tag_42\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1642:1676  NumericArrayLib.pickMedian(values) */\n      jump\t// in\n    tag_41:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1635:1676  return NumericArrayLib.pickMedian(values) */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1547:1681  function aggregateValues(uint256[] memory values) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":584:1543  function validateTimestamp(uint256 receivedTimestampMilliseconds) internal view {... */\n    tag_38:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1030:1062  uint256 receivedTimestampSeconds */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1097:1101  1000 */\n      0x03e8\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1065:1094  receivedTimestampMilliseconds */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1065:1101  receivedTimestampMilliseconds / 1000 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1030:1101  uint256 receivedTimestampSeconds = receivedTimestampMilliseconds / 1000 */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1130:1154  receivedTimestampSeconds */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1112:1127  block.timestamp */\n      timestamp\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1112:1154  block.timestamp < receivedTimestampSeconds */\n      lt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1108:1539  if (block.timestamp < receivedTimestampSeconds) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":390:399  1 minutes */\n      0x3c\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1196:1211  block.timestamp */\n      timestamp\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1169:1193  receivedTimestampSeconds */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1169:1211  receivedTimestampSeconds - block.timestamp */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1168:1255  (receivedTimestampSeconds - block.timestamp) > DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS */\n      gt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1164:1352  if ((receivedTimestampSeconds - block.timestamp) > DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1301:1325  receivedTimestampSeconds */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1327:1342  block.timestamp */\n      timestamp\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1274:1343  TimestampFromTooLongFuture(receivedTimestampSeconds, block.timestamp) */\n      mload(0x40)\n      0xb6b0916d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1164:1352  if ((receivedTimestampSeconds - block.timestamp) > DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS) {... */\n    tag_49:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1108:1539  if (block.timestamp < receivedTimestampSeconds) {... */\n      jump(tag_52)\n    tag_46:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":317:326  3 minutes */\n      0xb4\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1387:1411  receivedTimestampSeconds */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1369:1384  block.timestamp */\n      timestamp\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1369:1411  block.timestamp - receivedTimestampSeconds */\n      tag_53\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1368:1455  (block.timestamp - receivedTimestampSeconds) > DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS */\n      gt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1364:1539  if ((block.timestamp - receivedTimestampSeconds) > DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1490:1514  receivedTimestampSeconds */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1516:1531  block.timestamp */\n      timestamp\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1472:1532  TimestampIsTooOld(receivedTimestampSeconds, block.timestamp) */\n      mload(0x40)\n      0x0321d0b500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1364:1539  if ((block.timestamp - receivedTimestampSeconds) > DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS) {... */\n    tag_54:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":1108:1539  if (block.timestamp < receivedTimestampSeconds) {... */\n    tag_52:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":664:1543  {... */\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":584:1543  function validateTimestamp(uint256 receivedTimestampMilliseconds) internal view {... */\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":448:839  function pickMedian(uint256[] memory arr) internal pure returns (uint256) {... */\n    tag_42:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":513:520  uint256 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":546:547  0 */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":532:535  arr */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":532:542  arr.length */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":532:547  arr.length == 0 */\n      sub\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":528:601  if (arr.length == 0) {... */\n      tag_57\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":564:594  CanNotPickMedianOfEmptyArray() */\n      mload(0x40)\n      0x9e198af900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":528:601  if (arr.length == 0) {... */\n    tag_57:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":606:615  sort(arr) */\n      tag_58\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":611:614  arr */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":606:610  sort */\n      tag_59\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":606:615  sort(arr) */\n      jump\t// in\n    tag_58:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":621:640  uint256 middleIndex */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":656:657  2 */\n      0x02\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":643:646  arr */\n      dup4\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":643:653  arr.length */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":643:657  arr.length / 2 */\n      tag_60\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_60:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":621:657  uint256 middleIndex = arr.length / 2 */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":685:686  0 */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":680:681  2 */\n      0x02\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":667:670  arr */\n      dup5\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":667:677  arr.length */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":667:681  arr.length % 2 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":667:686  arr.length % 2 == 0 */\n      sub\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":663:835  if (arr.length % 2 == 0) {... */\n      tag_63\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":696:707  uint256 sum */\n      0x00\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":710:762  SafeMath.add(arr[middleIndex - 1], arr[middleIndex]) */\n      tag_64\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":723:726  arr */\n      dup5\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":741:742  1 */\n      0x01\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":727:738  middleIndex */\n      dup5\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":727:742  middleIndex - 1 */\n      tag_65\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_65:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":723:743  arr[middleIndex - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_66\n      jumpi\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n    tag_66:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":745:748  arr */\n      dup6\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":749:760  middleIndex */\n      dup5\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":745:761  arr[middleIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_69\n      jumpi\n      tag_70\n      tag_68\n      jump\t// in\n    tag_70:\n    tag_69:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":710:722  SafeMath.add */\n      tag_71\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":710:762  SafeMath.add(arr[middleIndex - 1], arr[middleIndex]) */\n      jump\t// in\n    tag_64:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":696:762  uint256 sum = SafeMath.add(arr[middleIndex - 1], arr[middleIndex]) */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":783:784  2 */\n      0x02\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":777:780  sum */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":777:784  sum / 2 */\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":770:784  return sum / 2 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_56)\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":663:835  if (arr.length % 2 == 0) {... */\n    tag_63:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":812:815  arr */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":816:827  middleIndex */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":812:828  arr[middleIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_75\n      tag_68\n      jump\t// in\n    tag_75:\n    tag_74:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":805:828  return arr[middleIndex] */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":448:839  function pickMedian(uint256[] memory arr) internal pure returns (uint256) {... */\n    tag_56:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":843:1593  function sort(uint256[] memory arr) internal pure {... */\n    tag_59:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":939:942  arr */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":933:943  mload(arr) */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":976:996  BYTES_ARR_LEN_VAR_BS */\n      0x20\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":971:974  arr */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":967:997  add(arr, BYTES_ARR_LEN_VAR_BS) */\n      add\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1048:1064  UINT256_VALUE_BS */\n      0x20\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1037:1046  arrLength */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1033:1065  mul(arrLength, UINT256_VALUE_BS) */\n      mul\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1022:1031  valuesPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1018:1066  add(valuesPtr, mul(arrLength, UINT256_VALUE_BS)) */\n      add\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1102:1111  valuesPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1073:1583  for {... */\n    tag_77:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1132:1138  endPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1123:1130  arrIPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1120:1139  lt(arrIPtr, endPtr) */\n      lt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1073:1583  for {... */\n      iszero\n      tag_79\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1258:1267  valuesPtr */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1227:1575  for {... */\n    tag_80:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1290:1297  arrIPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1281:1288  arrJPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1278:1298  lt(arrJPtr, arrIPtr) */\n      lt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1227:1575  for {... */\n      iszero\n      tag_82\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1410:1417  arrIPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1404:1418  mload(arrIPtr) */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1447:1454  arrJPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1441:1455  mload(arrJPtr) */\n      mload\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1478:1482  arrJ */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1472:1476  arrI */\n      dup3\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1469:1483  lt(arrI, arrJ) */\n      lt\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1466:1565  if lt(arrI, arrJ) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1514:1518  arrJ */\n      dup1\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1505:1512  arrIPtr */\n      dup5\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1498:1519  mstore(arrIPtr, arrJ) */\n      mstore\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1548:1552  arrI */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1539:1546  arrJPtr */\n      dup4\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1532:1553  mstore(arrJPtr, arrI) */\n      mstore\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1466:1565  if lt(arrI, arrJ) {... */\n    tag_83:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1380:1575  {... */\n      pop\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1335:1351  UINT256_VALUE_BS */\n      0x20\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1326:1333  arrJPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1322:1352  add(arrJPtr, UINT256_VALUE_BS) */\n      add\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1311:1352  arrJPtr := add(arrJPtr, UINT256_VALUE_BS) */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1227:1575  for {... */\n      jump(tag_80)\n    tag_82:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1231:1277  {... */\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1174:1190  UINT256_VALUE_BS */\n      0x20\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1165:1172  arrIPtr */\n      dup2\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1161:1191  add(arrIPtr, UINT256_VALUE_BS) */\n      add\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1150:1191  arrIPtr := add(arrIPtr, UINT256_VALUE_BS) */\n      swap1\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1073:1583  for {... */\n      jump(tag_77)\n    tag_79:\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":1077:1119  {... */\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":908:1589  {... */\n      pop\n      pop\n      pop\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":843:1593  function sort(uint256[] memory arr) internal pure {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_87:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_88:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_89:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_90:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_91:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_118\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_90\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_92:\n        /* \"#utility.yul\":641:665   */\n      tag_120\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_91\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_121:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_93:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_123\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_92\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_126\n      tag_88\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":917:1036   */\n    tag_125:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_127\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1262   */\n    tag_94:\n        /* \"#utility.yul\":1211:1218   */\n      0x00\n        /* \"#utility.yul\":1251:1255   */\n      0xff\n        /* \"#utility.yul\":1244:1249   */\n      dup3\n        /* \"#utility.yul\":1240:1256   */\n      and\n        /* \"#utility.yul\":1229:1256   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1380   */\n    tag_95:\n        /* \"#utility.yul\":1351:1373   */\n      tag_130\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1351:1373   */\n      tag_94\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1346:1349   */\n      dup3\n        /* \"#utility.yul\":1339:1374   */\n      mstore\n        /* \"#utility.yul\":1268:1380   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1386:1600   */\n    tag_12:\n        /* \"#utility.yul\":1475:1479   */\n      0x00\n        /* \"#utility.yul\":1513:1515   */\n      0x20\n        /* \"#utility.yul\":1502:1511   */\n      dup3\n        /* \"#utility.yul\":1498:1516   */\n      add\n        /* \"#utility.yul\":1490:1516   */\n      swap1\n      pop\n        /* \"#utility.yul\":1526:1593   */\n      tag_132\n        /* \"#utility.yul\":1590:1591   */\n      0x00\n        /* \"#utility.yul\":1579:1588   */\n      dup4\n        /* \"#utility.yul\":1575:1592   */\n      add\n        /* \"#utility.yul\":1566:1572   */\n      dup5\n        /* \"#utility.yul\":1526:1593   */\n      tag_95\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1386:1600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1606:1723   */\n    tag_96:\n        /* \"#utility.yul\":1715:1716   */\n      0x00\n        /* \"#utility.yul\":1712:1713   */\n      dup1\n        /* \"#utility.yul\":1705:1717   */\n      revert\n        /* \"#utility.yul\":1729:1831   */\n    tag_97:\n        /* \"#utility.yul\":1770:1776   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x1f\n        /* \"#utility.yul\":1817:1824   */\n      not\n        /* \"#utility.yul\":1812:1814   */\n      0x1f\n        /* \"#utility.yul\":1805:1810   */\n      dup4\n        /* \"#utility.yul\":1801:1815   */\n      add\n        /* \"#utility.yul\":1797:1825   */\n      and\n        /* \"#utility.yul\":1787:1825   */\n      swap1\n      pop\n        /* \"#utility.yul\":1729:1831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2017   */\n    tag_98:\n        /* \"#utility.yul\":1885:1962   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1882:1883   */\n      0x00\n        /* \"#utility.yul\":1875:1963   */\n      mstore\n        /* \"#utility.yul\":1982:1986   */\n      0x41\n        /* \"#utility.yul\":1979:1980   */\n      0x04\n        /* \"#utility.yul\":1972:1987   */\n      mstore\n        /* \"#utility.yul\":2006:2010   */\n      0x24\n        /* \"#utility.yul\":2003:2004   */\n      0x00\n        /* \"#utility.yul\":1996:2011   */\n      revert\n        /* \"#utility.yul\":2023:2304   */\n    tag_99:\n        /* \"#utility.yul\":2106:2133   */\n      tag_137\n        /* \"#utility.yul\":2128:2132   */\n      dup3\n        /* \"#utility.yul\":2106:2133   */\n      tag_97\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2098:2104   */\n      dup2\n        /* \"#utility.yul\":2094:2134   */\n      add\n        /* \"#utility.yul\":2236:2242   */\n      dup2\n        /* \"#utility.yul\":2224:2234   */\n      dup2\n        /* \"#utility.yul\":2221:2243   */\n      lt\n        /* \"#utility.yul\":2200:2218   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2188:2198   */\n      dup3\n        /* \"#utility.yul\":2185:2219   */\n      gt\n        /* \"#utility.yul\":2182:2244   */\n      or\n        /* \"#utility.yul\":2179:2267   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2247:2265   */\n      tag_139\n      tag_98\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2179:2267   */\n    tag_138:\n        /* \"#utility.yul\":2287:2297   */\n      dup1\n        /* \"#utility.yul\":2283:2285   */\n      0x40\n        /* \"#utility.yul\":2276:2298   */\n      mstore\n        /* \"#utility.yul\":2066:2304   */\n      pop\n        /* \"#utility.yul\":2023:2304   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2439   */\n    tag_100:\n        /* \"#utility.yul\":2344:2350   */\n      0x00\n        /* \"#utility.yul\":2371:2391   */\n      tag_141\n      tag_87\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2361:2391   */\n      swap1\n      pop\n        /* \"#utility.yul\":2400:2433   */\n      tag_142\n        /* \"#utility.yul\":2428:2432   */\n      dup3\n        /* \"#utility.yul\":2420:2426   */\n      dup3\n        /* \"#utility.yul\":2400:2433   */\n      tag_99\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2310:2439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2445:2756   */\n    tag_101:\n        /* \"#utility.yul\":2522:2526   */\n      0x00\n        /* \"#utility.yul\":2612:2630   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2604:2610   */\n      dup3\n        /* \"#utility.yul\":2601:2631   */\n      gt\n        /* \"#utility.yul\":2598:2654   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2634:2652   */\n      tag_145\n      tag_98\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2598:2654   */\n    tag_144:\n        /* \"#utility.yul\":2684:2688   */\n      0x20\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2672:2689   */\n      mul\n        /* \"#utility.yul\":2664:2689   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:2748   */\n      0x20\n        /* \"#utility.yul\":2738:2742   */\n      dup2\n        /* \"#utility.yul\":2734:2749   */\n      add\n        /* \"#utility.yul\":2726:2749   */\n      swap1\n      pop\n        /* \"#utility.yul\":2445:2756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2762:2879   */\n    tag_102:\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2868:2869   */\n      dup1\n        /* \"#utility.yul\":2861:2873   */\n      revert\n        /* \"#utility.yul\":2885:2962   */\n    tag_103:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2956   */\n      dup2\n        /* \"#utility.yul\":2940:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3090   */\n    tag_104:\n        /* \"#utility.yul\":3041:3065   */\n      tag_149\n        /* \"#utility.yul\":3059:3064   */\n      dup2\n        /* \"#utility.yul\":3041:3065   */\n      tag_103\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3031:3066   */\n      eq\n        /* \"#utility.yul\":3021:3084   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":3080:3081   */\n      0x00\n        /* \"#utility.yul\":3077:3078   */\n      dup1\n        /* \"#utility.yul\":3070:3082   */\n      revert\n        /* \"#utility.yul\":3021:3084   */\n    tag_150:\n        /* \"#utility.yul\":2968:3090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3096:3235   */\n    tag_105:\n        /* \"#utility.yul\":3142:3147   */\n      0x00\n        /* \"#utility.yul\":3180:3186   */\n      dup2\n        /* \"#utility.yul\":3167:3187   */\n      calldataload\n        /* \"#utility.yul\":3158:3187   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3229   */\n      tag_152\n        /* \"#utility.yul\":3223:3228   */\n      dup2\n        /* \"#utility.yul\":3196:3229   */\n      tag_104\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3096:3235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:3968   */\n    tag_106:\n        /* \"#utility.yul\":3354:3359   */\n      0x00\n        /* \"#utility.yul\":3379:3460   */\n      tag_154\n        /* \"#utility.yul\":3395:3459   */\n      tag_155\n        /* \"#utility.yul\":3452:3458   */\n      dup5\n        /* \"#utility.yul\":3395:3459   */\n      tag_101\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3379:3460   */\n      tag_100\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3370:3460   */\n      swap1\n      pop\n        /* \"#utility.yul\":3480:3485   */\n      dup1\n        /* \"#utility.yul\":3509:3515   */\n      dup4\n        /* \"#utility.yul\":3502:3507   */\n      dup3\n        /* \"#utility.yul\":3495:3516   */\n      mstore\n        /* \"#utility.yul\":3543:3547   */\n      0x20\n        /* \"#utility.yul\":3536:3541   */\n      dup3\n        /* \"#utility.yul\":3532:3548   */\n      add\n        /* \"#utility.yul\":3525:3548   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3600   */\n      0x20\n        /* \"#utility.yul\":3588:3594   */\n      dup5\n        /* \"#utility.yul\":3584:3601   */\n      mul\n        /* \"#utility.yul\":3576:3582   */\n      dup4\n        /* \"#utility.yul\":3572:3602   */\n      add\n        /* \"#utility.yul\":3625:3628   */\n      dup6\n        /* \"#utility.yul\":3617:3623   */\n      dup2\n        /* \"#utility.yul\":3614:3629   */\n      gt\n        /* \"#utility.yul\":3611:3733   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3644:3723   */\n      tag_157\n      tag_102\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3611:3733   */\n    tag_156:\n        /* \"#utility.yul\":3759:3765   */\n      dup4\n        /* \"#utility.yul\":3742:3962   */\n    tag_158:\n        /* \"#utility.yul\":3776:3782   */\n      dup2\n        /* \"#utility.yul\":3771:3774   */\n      dup2\n        /* \"#utility.yul\":3768:3783   */\n      lt\n        /* \"#utility.yul\":3742:3962   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":3851:3854   */\n      dup1\n        /* \"#utility.yul\":3880:3917   */\n      tag_161\n        /* \"#utility.yul\":3913:3916   */\n      dup9\n        /* \"#utility.yul\":3901:3911   */\n      dup3\n        /* \"#utility.yul\":3880:3917   */\n      tag_105\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3875:3878   */\n      dup5\n        /* \"#utility.yul\":3868:3918   */\n      mstore\n        /* \"#utility.yul\":3947:3951   */\n      0x20\n        /* \"#utility.yul\":3942:3945   */\n      dup5\n        /* \"#utility.yul\":3938:3952   */\n      add\n        /* \"#utility.yul\":3931:3952   */\n      swap4\n      pop\n        /* \"#utility.yul\":3818:3962   */\n      pop\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3797:3800   */\n      dup2\n        /* \"#utility.yul\":3793:3807   */\n      add\n        /* \"#utility.yul\":3786:3807   */\n      swap1\n      pop\n        /* \"#utility.yul\":3742:3962   */\n      jump(tag_158)\n    tag_160:\n        /* \"#utility.yul\":3746:3767   */\n      pop\n        /* \"#utility.yul\":3360:3968   */\n      pop\n      pop\n        /* \"#utility.yul\":3258:3968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3991:4361   */\n    tag_107:\n        /* \"#utility.yul\":4062:4067   */\n      0x00\n        /* \"#utility.yul\":4111:4114   */\n      dup3\n        /* \"#utility.yul\":4104:4108   */\n      0x1f\n        /* \"#utility.yul\":4096:4102   */\n      dup4\n        /* \"#utility.yul\":4092:4109   */\n      add\n        /* \"#utility.yul\":4088:4115   */\n      slt\n        /* \"#utility.yul\":4078:4200   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":4119:4198   */\n      tag_164\n      tag_96\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4078:4200   */\n    tag_163:\n        /* \"#utility.yul\":4236:4242   */\n      dup2\n        /* \"#utility.yul\":4223:4243   */\n      calldataload\n        /* \"#utility.yul\":4261:4355   */\n      tag_165\n        /* \"#utility.yul\":4351:4354   */\n      dup5\n        /* \"#utility.yul\":4343:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4340   */\n      0x20\n        /* \"#utility.yul\":4328:4334   */\n      dup7\n        /* \"#utility.yul\":4324:4341   */\n      add\n        /* \"#utility.yul\":4261:4355   */\n      tag_106\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4252:4355   */\n      swap2\n      pop\n        /* \"#utility.yul\":4068:4361   */\n      pop\n        /* \"#utility.yul\":3991:4361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4367:4906   */\n    tag_15:\n        /* \"#utility.yul\":4451:4457   */\n      0x00\n        /* \"#utility.yul\":4500:4502   */\n      0x20\n        /* \"#utility.yul\":4488:4497   */\n      dup3\n        /* \"#utility.yul\":4479:4486   */\n      dup5\n        /* \"#utility.yul\":4475:4498   */\n      sub\n        /* \"#utility.yul\":4471:4503   */\n      slt\n        /* \"#utility.yul\":4468:4587   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":4506:4585   */\n      tag_168\n      tag_88\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4468:4587   */\n    tag_167:\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4643:4652   */\n      dup3\n        /* \"#utility.yul\":4639:4656   */\n      add\n        /* \"#utility.yul\":4626:4657   */\n      calldataload\n        /* \"#utility.yul\":4684:4702   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4676:4682   */\n      dup2\n        /* \"#utility.yul\":4673:4703   */\n      gt\n        /* \"#utility.yul\":4670:4787   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":4706:4785   */\n      tag_170\n      tag_89\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4670:4787   */\n    tag_169:\n        /* \"#utility.yul\":4811:4889   */\n      tag_171\n        /* \"#utility.yul\":4881:4888   */\n      dup5\n        /* \"#utility.yul\":4872:4878   */\n      dup3\n        /* \"#utility.yul\":4861:4870   */\n      dup6\n        /* \"#utility.yul\":4857:4879   */\n      add\n        /* \"#utility.yul\":4811:4889   */\n      tag_107\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4801:4889   */\n      swap2\n      pop\n        /* \"#utility.yul\":4597:4899   */\n      pop\n        /* \"#utility.yul\":4367:4906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4912:5030   */\n    tag_108:\n        /* \"#utility.yul\":4999:5023   */\n      tag_173\n        /* \"#utility.yul\":5017:5022   */\n      dup2\n        /* \"#utility.yul\":4999:5023   */\n      tag_103\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4994:4997   */\n      dup3\n        /* \"#utility.yul\":4987:5024   */\n      mstore\n        /* \"#utility.yul\":4912:5030   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5036:5258   */\n    tag_18:\n        /* \"#utility.yul\":5129:5133   */\n      0x00\n        /* \"#utility.yul\":5167:5169   */\n      0x20\n        /* \"#utility.yul\":5156:5165   */\n      dup3\n        /* \"#utility.yul\":5152:5170   */\n      add\n        /* \"#utility.yul\":5144:5170   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5251   */\n      tag_175\n        /* \"#utility.yul\":5248:5249   */\n      0x00\n        /* \"#utility.yul\":5237:5246   */\n      dup4\n        /* \"#utility.yul\":5233:5250   */\n      add\n        /* \"#utility.yul\":5224:5230   */\n      dup5\n        /* \"#utility.yul\":5180:5251   */\n      tag_108\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5036:5258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5264:5593   */\n    tag_21:\n        /* \"#utility.yul\":5323:5329   */\n      0x00\n        /* \"#utility.yul\":5372:5374   */\n      0x20\n        /* \"#utility.yul\":5360:5369   */\n      dup3\n        /* \"#utility.yul\":5351:5358   */\n      dup5\n        /* \"#utility.yul\":5347:5370   */\n      sub\n        /* \"#utility.yul\":5343:5375   */\n      slt\n        /* \"#utility.yul\":5340:5459   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5378:5457   */\n      tag_178\n      tag_88\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5340:5459   */\n    tag_177:\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5523:5576   */\n      tag_179\n        /* \"#utility.yul\":5568:5575   */\n      dup5\n        /* \"#utility.yul\":5559:5565   */\n      dup3\n        /* \"#utility.yul\":5548:5557   */\n      dup6\n        /* \"#utility.yul\":5544:5566   */\n      add\n        /* \"#utility.yul\":5523:5576   */\n      tag_105\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5513:5576   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5586   */\n      pop\n        /* \"#utility.yul\":5264:5593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5599:5717   */\n    tag_109:\n        /* \"#utility.yul\":5686:5710   */\n      tag_181\n        /* \"#utility.yul\":5704:5709   */\n      dup2\n        /* \"#utility.yul\":5686:5710   */\n      tag_91\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5681:5684   */\n      dup3\n        /* \"#utility.yul\":5674:5711   */\n      mstore\n        /* \"#utility.yul\":5599:5717   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5723:5945   */\n    tag_32:\n        /* \"#utility.yul\":5816:5820   */\n      0x00\n        /* \"#utility.yul\":5854:5856   */\n      0x20\n        /* \"#utility.yul\":5843:5852   */\n      dup3\n        /* \"#utility.yul\":5839:5857   */\n      add\n        /* \"#utility.yul\":5831:5857   */\n      swap1\n      pop\n        /* \"#utility.yul\":5867:5938   */\n      tag_183\n        /* \"#utility.yul\":5935:5936   */\n      0x00\n        /* \"#utility.yul\":5924:5933   */\n      dup4\n        /* \"#utility.yul\":5920:5937   */\n      add\n        /* \"#utility.yul\":5911:5917   */\n      dup5\n        /* \"#utility.yul\":5867:5938   */\n      tag_109\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5723:5945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6131   */\n    tag_110:\n        /* \"#utility.yul\":5999:6076   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5996:5997   */\n      0x00\n        /* \"#utility.yul\":5989:6077   */\n      mstore\n        /* \"#utility.yul\":6096:6100   */\n      0x12\n        /* \"#utility.yul\":6093:6094   */\n      0x04\n        /* \"#utility.yul\":6086:6101   */\n      mstore\n        /* \"#utility.yul\":6120:6124   */\n      0x24\n        /* \"#utility.yul\":6117:6118   */\n      0x00\n        /* \"#utility.yul\":6110:6125   */\n      revert\n        /* \"#utility.yul\":6137:6317   */\n    tag_111:\n        /* \"#utility.yul\":6185:6262   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6182:6183   */\n      0x00\n        /* \"#utility.yul\":6175:6263   */\n      mstore\n        /* \"#utility.yul\":6282:6286   */\n      0x11\n        /* \"#utility.yul\":6279:6280   */\n      0x04\n        /* \"#utility.yul\":6272:6287   */\n      mstore\n        /* \"#utility.yul\":6306:6310   */\n      0x24\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6296:6311   */\n      revert\n        /* \"#utility.yul\":6323:6508   */\n    tag_45:\n        /* \"#utility.yul\":6363:6364   */\n      0x00\n        /* \"#utility.yul\":6380:6400   */\n      tag_187\n        /* \"#utility.yul\":6398:6399   */\n      dup3\n        /* \"#utility.yul\":6380:6400   */\n      tag_103\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6375:6400   */\n      swap2\n      pop\n        /* \"#utility.yul\":6414:6434   */\n      tag_188\n        /* \"#utility.yul\":6432:6433   */\n      dup4\n        /* \"#utility.yul\":6414:6434   */\n      tag_103\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6409:6434   */\n      swap3\n      pop\n        /* \"#utility.yul\":6453:6454   */\n      dup3\n        /* \"#utility.yul\":6443:6478   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":6458:6476   */\n      tag_190\n      tag_110\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6443:6478   */\n    tag_189:\n        /* \"#utility.yul\":6500:6501   */\n      dup3\n        /* \"#utility.yul\":6497:6498   */\n      dup3\n        /* \"#utility.yul\":6493:6502   */\n      div\n        /* \"#utility.yul\":6488:6502   */\n      swap1\n      pop\n        /* \"#utility.yul\":6323:6508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6514:6705   */\n    tag_48:\n        /* \"#utility.yul\":6554:6558   */\n      0x00\n        /* \"#utility.yul\":6574:6594   */\n      tag_192\n        /* \"#utility.yul\":6592:6593   */\n      dup3\n        /* \"#utility.yul\":6574:6594   */\n      tag_103\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6569:6594   */\n      swap2\n      pop\n        /* \"#utility.yul\":6608:6628   */\n      tag_193\n        /* \"#utility.yul\":6626:6627   */\n      dup4\n        /* \"#utility.yul\":6608:6628   */\n      tag_103\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6603:6628   */\n      swap3\n      pop\n        /* \"#utility.yul\":6647:6648   */\n      dup3\n        /* \"#utility.yul\":6644:6645   */\n      dup3\n        /* \"#utility.yul\":6641:6649   */\n      lt\n        /* \"#utility.yul\":6638:6672   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6652:6670   */\n      tag_195\n      tag_111\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6638:6672   */\n    tag_194:\n        /* \"#utility.yul\":6697:6698   */\n      dup3\n        /* \"#utility.yul\":6694:6695   */\n      dup3\n        /* \"#utility.yul\":6690:6699   */\n      sub\n        /* \"#utility.yul\":6682:6699   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6711:7043   */\n    tag_51:\n        /* \"#utility.yul\":6832:6836   */\n      0x00\n        /* \"#utility.yul\":6870:6872   */\n      0x40\n        /* \"#utility.yul\":6859:6868   */\n      dup3\n        /* \"#utility.yul\":6855:6873   */\n      add\n        /* \"#utility.yul\":6847:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6883:6954   */\n      tag_197\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6927:6933   */\n      dup6\n        /* \"#utility.yul\":6883:6954   */\n      tag_108\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6964:7036   */\n      tag_198\n        /* \"#utility.yul\":7032:7034   */\n      0x20\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7035   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup5\n        /* \"#utility.yul\":6964:7036   */\n      tag_108\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6711:7043   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7049:7225   */\n    tag_62:\n        /* \"#utility.yul\":7081:7082   */\n      0x00\n        /* \"#utility.yul\":7098:7118   */\n      tag_200\n        /* \"#utility.yul\":7116:7117   */\n      dup3\n        /* \"#utility.yul\":7098:7118   */\n      tag_103\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7093:7118   */\n      swap2\n      pop\n        /* \"#utility.yul\":7132:7152   */\n      tag_201\n        /* \"#utility.yul\":7150:7151   */\n      dup4\n        /* \"#utility.yul\":7132:7152   */\n      tag_103\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7127:7152   */\n      swap3\n      pop\n        /* \"#utility.yul\":7171:7172   */\n      dup3\n        /* \"#utility.yul\":7161:7196   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":7176:7194   */\n      tag_203\n      tag_110\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7161:7196   */\n    tag_202:\n        /* \"#utility.yul\":7217:7218   */\n      dup3\n        /* \"#utility.yul\":7214:7215   */\n      dup3\n        /* \"#utility.yul\":7210:7219   */\n      mod\n        /* \"#utility.yul\":7205:7219   */\n      swap1\n      pop\n        /* \"#utility.yul\":7049:7225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7231:7411   */\n    tag_68:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x32\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7722   */\n    tag_86:\n        /* \"#utility.yul\":7457:7460   */\n      0x00\n        /* \"#utility.yul\":7476:7496   */\n      tag_206\n        /* \"#utility.yul\":7494:7495   */\n      dup3\n        /* \"#utility.yul\":7476:7496   */\n      tag_103\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7471:7496   */\n      swap2\n      pop\n        /* \"#utility.yul\":7510:7530   */\n      tag_207\n        /* \"#utility.yul\":7528:7529   */\n      dup4\n        /* \"#utility.yul\":7510:7530   */\n      tag_103\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7505:7530   */\n      swap3\n      pop\n        /* \"#utility.yul\":7664:7665   */\n      dup3\n        /* \"#utility.yul\":7596:7662   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7592:7666   */\n      sub\n        /* \"#utility.yul\":7589:7590   */\n      dup3\n        /* \"#utility.yul\":7586:7667   */\n      gt\n        /* \"#utility.yul\":7583:7690   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":7670:7688   */\n      tag_209\n      tag_111\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7583:7690   */\n    tag_208:\n        /* \"#utility.yul\":7714:7715   */\n      dup3\n        /* \"#utility.yul\":7711:7712   */\n      dup3\n        /* \"#utility.yul\":7707:7716   */\n      add\n        /* \"#utility.yul\":7700:7716   */\n      swap1\n      pop\n        /* \"#utility.yul\":7417:7722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220109a1d435797bea2346ac8b06fcc8b315ad9c4a26c993b69492b50aabc28469764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610936806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633ce142f514610051578063b24ebfcc14610081578063f50b2efe146100b1578063f90c4924146100cd575b600080fd5b61006b600480360381019061006691906104a1565b6100eb565b60405161007891906104ea565b60405180910390f35b61009b60048036038101906100969190610694565b6101cf565b6040516100a891906106ec565b60405180910390f35b6100cb60048036038101906100c69190610707565b6101e1565b005b6100d56101ed565b6040516100e291906104ea565b60405180910390f35b60007311fffc9970c41b9bfb9aa35be838d39bce918cff73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361013d57600090506101ca565b73dbcc2c6c892c8d3e3fe4d325fec810b7376a5ed673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018d57600190506101ca565b816040517fec459bc00000000000000000000000000000000000000000000000000000000081526004016101c19190610743565b60405180910390fd5b919050565b60006101da826101f6565b9050919050565b6101ea81610208565b50565b60006002905090565b6000610201826102d2565b9050919050565b60006103e88261021891906107bc565b90508042101561027a57603c428261023091906107ed565b11156102755780426040517fb6b0916d00000000000000000000000000000000000000000000000000000000815260040161026c929190610821565b60405180910390fd5b6102ce565b60b4814261028891906107ed565b11156102cd5780426040517f0321d0b50000000000000000000000000000000000000000000000000000000081526004016102c4929190610821565b60405180910390fd5b5b5050565b60008082510361030e576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610317826103c6565b60006002835161032791906107bc565b9050600060028451610339919061084a565b036103a257600061038a8460018461035191906107ed565b815181106103625761036161087b565b5b602002602001015185848151811061037d5761037c61087b565b5b6020026020010151610419565b905060028161039991906107bc565b925050506103c1565b8281815181106103b5576103b461087b565b5b60200260200101519150505b919050565b805160208201602082028101815b8181101561041257825b818110156104065781518151808210156103f9578084528183525b50506020810190506103de565b506020810190506103d4565b5050505050565b6000818361042791906108aa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061046e82610443565b9050919050565b61047e81610463565b811461048957600080fd5b50565b60008135905061049b81610475565b92915050565b6000602082840312156104b7576104b6610439565b5b60006104c58482850161048c565b91505092915050565b600060ff82169050919050565b6104e4816104ce565b82525050565b60006020820190506104ff60008301846104db565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105538261050a565b810181811067ffffffffffffffff821117156105725761057161051b565b5b80604052505050565b600061058561042f565b9050610591828261054a565b919050565b600067ffffffffffffffff8211156105b1576105b061051b565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6105da816105c7565b81146105e557600080fd5b50565b6000813590506105f7816105d1565b92915050565b600061061061060b84610596565b61057b565b90508083825260208201905060208402830185811115610633576106326105c2565b5b835b8181101561065c578061064888826105e8565b845260208401935050602081019050610635565b5050509392505050565b600082601f83011261067b5761067a610505565b5b813561068b8482602086016105fd565b91505092915050565b6000602082840312156106aa576106a9610439565b5b600082013567ffffffffffffffff8111156106c8576106c761043e565b5b6106d484828501610666565b91505092915050565b6106e6816105c7565b82525050565b600060208201905061070160008301846106dd565b92915050565b60006020828403121561071d5761071c610439565b5b600061072b848285016105e8565b91505092915050565b61073d81610463565b82525050565b60006020820190506107586000830184610734565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107c7826105c7565b91506107d2836105c7565b9250826107e2576107e161075e565b5b828204905092915050565b60006107f8826105c7565b9150610803836105c7565b9250828210156108165761081561078d565b5b828203905092915050565b600060408201905061083660008301856106dd565b61084360208301846106dd565b9392505050565b6000610855826105c7565b9150610860836105c7565b9250826108705761086f61075e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006108b5826105c7565b91506108c0836105c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f5576108f461078d565b5b82820190509291505056fea2646970667358221220109a1d435797bea2346ac8b06fcc8b315ad9c4a26c993b69492b50aabc28469764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x936 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CE142F5 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB24EBFCC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF50B2EFE EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF90C4924 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0x11FFFC9970C41B9BFB9AA35BE838D39BCE918CFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CA JUMP JUMPDEST PUSH20 0xDBCC2C6C892C8D3E3FE4D325FEC810B7376A5ED6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1CA JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0xEC459BC000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x208 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 DUP3 PUSH2 0x2D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x3C TIMESTAMP DUP3 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST GT ISZERO PUSH2 0x275 JUMPI DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH32 0xB6B0916D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP3 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH1 0xB4 DUP2 TIMESTAMP PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST GT ISZERO PUSH2 0x2CD JUMPI DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH32 0x321D0B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP3 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SUB PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E198AF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x84A JUMP JUMPDEST SUB PUSH2 0x3A2 JUMPI PUSH1 0x0 PUSH2 0x38A DUP5 PUSH1 0x1 DUP5 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x362 JUMPI PUSH2 0x361 PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP3 MUL DUP2 ADD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x412 JUMPI DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x406 JUMPI DUP2 MLOAD DUP2 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x3F9 JUMPI DUP1 DUP5 MSTORE DUP2 DUP4 MSTORE JUMPDEST POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DE JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46E DUP3 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x463 JUMP JUMPDEST DUP2 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49B DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C5 DUP5 DUP3 DUP6 ADD PUSH2 0x48C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E4 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x553 DUP3 PUSH2 0x50A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0x51B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP3 DUP3 PUSH2 0x54A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x51B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x5C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F7 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x610 PUSH2 0x60B DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x5C2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP1 PUSH2 0x648 DUP9 DUP3 PUSH2 0x5E8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x635 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x68B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AA JUMPI PUSH2 0x6A9 PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x43E JUMP JUMPDEST JUMPDEST PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x666 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x5C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x701 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH2 0x71C PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP5 DUP3 DUP6 ADD PUSH2 0x5E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x463 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x758 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7C7 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D2 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x75E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F8 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x803 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x78D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x836 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x843 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x860 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x75E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B5 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x78D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP11 SAR NUMBER JUMPI SWAP8 0xBE LOG2 CALLVALUE PUSH11 0xC8B06FCC8B315AD9C4A26C SWAP10 EXTCODESIZE PUSH10 0x492B50AABC2846976473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "114:552:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_1416": {
									"entryPoint": 1049,
									"id": 1416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@aggregateValues_1037": {
									"entryPoint": 502,
									"id": 1037,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@aggregateValues_331": {
									"entryPoint": 463,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAuthorisedSignerIndex_1080": {
									"entryPoint": 235,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUniqueSignersThreshold_1052": {
									"entryPoint": 493,
									"id": 1052,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pickMedian_1195": {
									"entryPoint": 722,
									"id": 1195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sort_1203": {
									"entryPoint": 966,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@validateTimestamp_1023": {
									"entryPoint": 520,
									"id": 1023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@validateTimestamp_307": {
									"entryPoint": 481,
									"id": 307,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7725:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:10"
															},
															"nodeType": "YulIf",
															"src": "917:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:10",
														"type": ""
													}
												],
												"src": "841:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1219:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1229:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1244:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1251:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1229:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1201:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1211:7:10",
														"type": ""
													}
												],
												"src": "1176:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1346:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1367:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1351:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1351:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1339:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1317:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1324:3:10",
														"type": ""
													}
												],
												"src": "1268:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:120:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1490:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1566:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1579:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1590:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1526:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1452:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1464:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1475:4:10",
														"type": ""
													}
												],
												"src": "1386:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1606:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1805:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1801:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1821:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1817:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1760:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1770:6:10",
														"type": ""
													}
												],
												"src": "1729:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1865:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1882:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1972:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2003:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2006:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1996:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1837:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2066:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2076:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2098:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2128:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2106:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2080:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2245:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2247:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2247:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2188:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2185:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2224:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2236:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2221:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2221:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2182:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:62:10"
															},
															"nodeType": "YulIf",
															"src": "2179:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2283:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2287:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2052:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2060:4:10",
														"type": ""
													}
												],
												"src": "2023:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2371:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2428:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2400:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2400:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2335:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2344:6:10",
														"type": ""
													}
												],
												"src": "2310:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2527:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2632:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2634:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2634:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:30:10"
															},
															"nodeType": "YulIf",
															"src": "2598:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2664:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2672:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2664:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2726:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2738:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2744:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2511:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2522:4:10",
														"type": ""
													}
												],
												"src": "2445:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2851:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2861:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2762:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2930:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2940:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2951:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2922:7:10",
														"type": ""
													}
												],
												"src": "2885:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3068:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3034:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3059:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3041:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3041:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3031:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:43:10"
															},
															"nodeType": "YulIf",
															"src": "3021:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3004:5:10",
														"type": ""
													}
												],
												"src": "2968:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3148:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3158:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3180:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3167:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3158:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3223:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3196:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3196:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3126:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3134:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3142:5:10",
														"type": ""
													}
												],
												"src": "3096:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3360:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3370:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3395:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3395:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3379:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3370:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3469:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3480:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3473:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3502:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3509:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3525:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3536:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3543:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3596:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3584:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3630:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3644:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3644:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3644:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3617:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3625:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3614:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:15:10"
															},
															"nodeType": "YulIf",
															"src": "3611:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3818:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3833:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "3837:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3875:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "3901:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "3913:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "3880:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3880:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3868:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3868:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3868:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3931:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3942:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3947:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3938:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3931:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3776:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3784:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3786:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3797:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3802:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3793:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3793:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3786:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3746:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3748:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "3759:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "3752:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3742:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3330:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3338:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3346:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3354:5:10",
														"type": ""
													}
												],
												"src": "3258:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4068:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4117:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4119:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4119:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4119:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4096:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4104:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4092:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4092:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4111:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:35:10"
															},
															"nodeType": "YulIf",
															"src": "4078:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4209:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4213:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4252:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4328:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4336:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4343:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4351:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4261:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4252:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4046:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4054:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4062:5:10",
														"type": ""
													}
												],
												"src": "3991:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4458:448:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4504:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4506:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4506:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4479:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4488:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4475:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:32:10"
															},
															"nodeType": "YulIf",
															"src": "4468:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4597:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4612:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4643:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4654:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4639:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4639:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4626:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4616:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4704:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4706:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4706:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4706:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4676:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4684:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4673:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4673:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "4670:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4801:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4861:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4857:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4811:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4811:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4801:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4428:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4439:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4451:6:10",
														"type": ""
													}
												],
												"src": "4367:539:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4977:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5017:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4999:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4987:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4965:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4972:3:10",
														"type": ""
													}
												],
												"src": "4912:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5134:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5144:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5156:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5167:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5248:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5180:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5180:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5106:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5118:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5129:4:10",
														"type": ""
													}
												],
												"src": "5036:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5376:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5378:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5378:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5378:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5351:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5343:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:32:10"
															},
															"nodeType": "YulIf",
															"src": "5340:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5498:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5548:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5559:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5544:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5544:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5523:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5513:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5300:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5311:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5323:6:10",
														"type": ""
													}
												],
												"src": "5264:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5664:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5681:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5686:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5652:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5659:3:10",
														"type": ""
													}
												],
												"src": "5599:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5821:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5831:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5843:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5839:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5831:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5911:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5924:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5935:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5920:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5867:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5867:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5793:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5805:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5816:4:10",
														"type": ""
													}
												],
												"src": "5723:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5999:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5989:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6086:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6117:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6120:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6110:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5951:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6165:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6182:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6185:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6279:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6282:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6272:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6303:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6306:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6296:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6137:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6365:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6375:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6398:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6380:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6375:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6409:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6432:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6414:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6409:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6456:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6458:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6458:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6453:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:9:10"
															},
															"nodeType": "YulIf",
															"src": "6443:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6497:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6500:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6493:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6488:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6354:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6357:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6363:1:10",
														"type": ""
													}
												],
												"src": "6323:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6559:146:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6569:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6592:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6574:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6569:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6603:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6626:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6608:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6603:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6650:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6652:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6652:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6652:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6644:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6647:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6641:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:8:10"
															},
															"nodeType": "YulIf",
															"src": "6638:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6682:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6694:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6697:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6690:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6682:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6545:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6548:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6554:4:10",
														"type": ""
													}
												],
												"src": "6514:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6837:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6847:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6883:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6883:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6964:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6964:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6801:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6813:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6821:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6832:4:10",
														"type": ""
													}
												],
												"src": "6711:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7083:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7093:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7116:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7098:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7093:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7127:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7150:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7132:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7174:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7176:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7176:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7176:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7171:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7164:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7164:9:10"
															},
															"nodeType": "YulIf",
															"src": "7161:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7205:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7214:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7217:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7210:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7205:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7072:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7075:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7081:1:10",
														"type": ""
													}
												],
												"src": "7049:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7471:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7494:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7476:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7471:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7505:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7528:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7510:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7510:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7505:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7668:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7670:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7670:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7670:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7589:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7596:66:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7664:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7592:74:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7586:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:81:10"
															},
															"nodeType": "YulIf",
															"src": "7583:107:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7700:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7711:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7714:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7448:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7451:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7457:3:10",
														"type": ""
													}
												],
												"src": "7417:305:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80633ce142f514610051578063b24ebfcc14610081578063f50b2efe146100b1578063f90c4924146100cd575b600080fd5b61006b600480360381019061006691906104a1565b6100eb565b60405161007891906104ea565b60405180910390f35b61009b60048036038101906100969190610694565b6101cf565b6040516100a891906106ec565b60405180910390f35b6100cb60048036038101906100c69190610707565b6101e1565b005b6100d56101ed565b6040516100e291906104ea565b60405180910390f35b60007311fffc9970c41b9bfb9aa35be838d39bce918cff73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361013d57600090506101ca565b73dbcc2c6c892c8d3e3fe4d325fec810b7376a5ed673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018d57600190506101ca565b816040517fec459bc00000000000000000000000000000000000000000000000000000000081526004016101c19190610743565b60405180910390fd5b919050565b60006101da826101f6565b9050919050565b6101ea81610208565b50565b60006002905090565b6000610201826102d2565b9050919050565b60006103e88261021891906107bc565b90508042101561027a57603c428261023091906107ed565b11156102755780426040517fb6b0916d00000000000000000000000000000000000000000000000000000000815260040161026c929190610821565b60405180910390fd5b6102ce565b60b4814261028891906107ed565b11156102cd5780426040517f0321d0b50000000000000000000000000000000000000000000000000000000081526004016102c4929190610821565b60405180910390fd5b5b5050565b60008082510361030e576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610317826103c6565b60006002835161032791906107bc565b9050600060028451610339919061084a565b036103a257600061038a8460018461035191906107ed565b815181106103625761036161087b565b5b602002602001015185848151811061037d5761037c61087b565b5b6020026020010151610419565b905060028161039991906107bc565b925050506103c1565b8281815181106103b5576103b461087b565b5b60200260200101519150505b919050565b805160208201602082028101815b8181101561041257825b818110156104065781518151808210156103f9578084528183525b50506020810190506103de565b506020810190506103d4565b5050505050565b6000818361042791906108aa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061046e82610443565b9050919050565b61047e81610463565b811461048957600080fd5b50565b60008135905061049b81610475565b92915050565b6000602082840312156104b7576104b6610439565b5b60006104c58482850161048c565b91505092915050565b600060ff82169050919050565b6104e4816104ce565b82525050565b60006020820190506104ff60008301846104db565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105538261050a565b810181811067ffffffffffffffff821117156105725761057161051b565b5b80604052505050565b600061058561042f565b9050610591828261054a565b919050565b600067ffffffffffffffff8211156105b1576105b061051b565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6105da816105c7565b81146105e557600080fd5b50565b6000813590506105f7816105d1565b92915050565b600061061061060b84610596565b61057b565b90508083825260208201905060208402830185811115610633576106326105c2565b5b835b8181101561065c578061064888826105e8565b845260208401935050602081019050610635565b5050509392505050565b600082601f83011261067b5761067a610505565b5b813561068b8482602086016105fd565b91505092915050565b6000602082840312156106aa576106a9610439565b5b600082013567ffffffffffffffff8111156106c8576106c761043e565b5b6106d484828501610666565b91505092915050565b6106e6816105c7565b82525050565b600060208201905061070160008301846106dd565b92915050565b60006020828403121561071d5761071c610439565b5b600061072b848285016105e8565b91505092915050565b61073d81610463565b82525050565b60006020820190506107586000830184610734565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107c7826105c7565b91506107d2836105c7565b9250826107e2576107e161075e565b5b828204905092915050565b60006107f8826105c7565b9150610803836105c7565b9250828210156108165761081561078d565b5b828203905092915050565b600060408201905061083660008301856106dd565b61084360208301846106dd565b9392505050565b6000610855826105c7565b9150610860836105c7565b9250826108705761086f61075e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006108b5826105c7565b91506108c0836105c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f5576108f461078d565b5b82820190509291505056fea2646970667358221220109a1d435797bea2346ac8b06fcc8b315ad9c4a26c993b69492b50aabc28469764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CE142F5 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB24EBFCC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF50B2EFE EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF90C4924 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0x11FFFC9970C41B9BFB9AA35BE838D39BCE918CFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CA JUMP JUMPDEST PUSH20 0xDBCC2C6C892C8D3E3FE4D325FEC810B7376A5ED6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1CA JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0xEC459BC000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x208 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 DUP3 PUSH2 0x2D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x3C TIMESTAMP DUP3 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST GT ISZERO PUSH2 0x275 JUMPI DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH32 0xB6B0916D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP3 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH1 0xB4 DUP2 TIMESTAMP PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST GT ISZERO PUSH2 0x2CD JUMPI DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH32 0x321D0B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP3 SWAP2 SWAP1 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SUB PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E198AF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x317 DUP3 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x84A JUMP JUMPDEST SUB PUSH2 0x3A2 JUMPI PUSH1 0x0 PUSH2 0x38A DUP5 PUSH1 0x1 DUP5 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x362 JUMPI PUSH2 0x361 PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x87B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP3 MUL DUP2 ADD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x412 JUMPI DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x406 JUMPI DUP2 MLOAD DUP2 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x3F9 JUMPI DUP1 DUP5 MSTORE DUP2 DUP4 MSTORE JUMPDEST POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DE JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46E DUP3 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x463 JUMP JUMPDEST DUP2 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49B DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C5 DUP5 DUP3 DUP6 ADD PUSH2 0x48C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E4 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x553 DUP3 PUSH2 0x50A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0x51B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP3 DUP3 PUSH2 0x54A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x51B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x5C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F7 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x610 PUSH2 0x60B DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x5C2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP1 PUSH2 0x648 DUP9 DUP3 PUSH2 0x5E8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x635 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x68B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AA JUMPI PUSH2 0x6A9 PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x43E JUMP JUMPDEST JUMPDEST PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x666 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x5C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x701 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH2 0x71C PUSH2 0x439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP5 DUP3 DUP6 ADD PUSH2 0x5E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x463 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x758 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7C7 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D2 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x75E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F8 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x803 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x78D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x836 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x843 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x860 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x75E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B5 DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP4 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x78D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP11 SAR NUMBER JUMPI SWAP8 0xBE LOG2 CALLVALUE PUSH11 0xC8B06FCC8B315AD9C4A26C SWAP10 EXTCODESIZE PUSH10 0x492B50AABC2846976473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "114:552:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2280:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1505:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;181:101:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:378;401:5;437:42;420:59;;:13;:59;;;416:244;;496:1;489:8;;;;416:244;531:42;514:59;;:13;:59;;;510:150;;590:1;583:8;;;;510:150;639:13;619:34;;;;;;;;;;;:::i;:::-;;;;;;;;286:378;;;;:::o;2280:149:2:-;2359:7;2381:43;2417:6;2381:35;:43::i;:::-;2374:50;;2280:149;;;:::o;1505:165::-;1597:68;1635:29;1597:37;:68::i;:::-;1505:165;:::o;181:101:5:-;256:5;276:1;269:8;;181:101;:::o;1547:134:4:-;1620:7;1642:34;1669:6;1642:26;:34::i;:::-;1635:41;;1547:134;;;:::o;584:959::-;1030:32;1097:4;1065:29;:36;;;;:::i;:::-;1030:71;;1130:24;1112:15;:42;1108:431;;;390:9;1196:15;1169:24;:42;;;;:::i;:::-;1168:87;1164:188;;;1301:24;1327:15;1274:69;;;;;;;;;;;;:::i;:::-;;;;;;;;1164:188;1108:431;;;317:9;1387:24;1369:15;:42;;;;:::i;:::-;1368:87;1364:175;;;1490:24;1516:15;1472:60;;;;;;;;;;;;:::i;:::-;;;;;;;;1364:175;1108:431;664:879;584:959;:::o;448:391:7:-;513:7;546:1;532:3;:10;:15;528:73;;564:30;;;;;;;;;;;;;;528:73;606:9;611:3;606:4;:9::i;:::-;621:19;656:1;643:3;:10;:14;;;;:::i;:::-;621:36;;685:1;680;667:3;:10;:14;;;;:::i;:::-;:19;663:172;;696:11;710:52;723:3;741:1;727:11;:15;;;;:::i;:::-;723:20;;;;;;;;:::i;:::-;;;;;;;;745:3;749:11;745:16;;;;;;;;:::i;:::-;;;;;;;;710:12;:52::i;:::-;696:66;;783:1;777:3;:7;;;;:::i;:::-;770:14;;;;;;663:172;812:3;816:11;812:16;;;;;;;;:::i;:::-;;;;;;;;805:23;;;448:391;;;;:::o;843:750::-;939:3;933:10;976:20;971:3;967:30;1048:16;1037:9;1033:32;1022:9;1018:48;1102:9;1073:510;1132:6;1123:7;1120:19;1073:510;;;1258:9;1227:348;1290:7;1281;1278:20;1227:348;;;1410:7;1404:14;1447:7;1441:14;1478:4;1472;1469:14;1466:99;;;1514:4;1505:7;1498:21;1548:4;1539:7;1532:21;1466:99;1380:195;;1335:16;1326:7;1322:30;1311:41;;1227:348;;;1231:46;1174:16;1165:7;1161:30;1150:41;;1073:510;;;1077:42;908:681;;;843:750;:::o;2755:96:9:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:86::-;1211:7;1251:4;1244:5;1240:16;1229:27;;1176:86;;;:::o;1268:112::-;1351:22;1367:5;1351:22;:::i;:::-;1346:3;1339:35;1268:112;;:::o;1386:214::-;1475:4;1513:2;1502:9;1498:18;1490:26;;1526:67;1590:1;1579:9;1575:17;1566:6;1526:67;:::i;:::-;1386:214;;;;:::o;1606:117::-;1715:1;1712;1705:12;1729:102;1770:6;1821:2;1817:7;1812:2;1805:5;1801:14;1797:28;1787:38;;1729:102;;;:::o;1837:180::-;1885:77;1882:1;1875:88;1982:4;1979:1;1972:15;2006:4;2003:1;1996:15;2023:281;2106:27;2128:4;2106:27;:::i;:::-;2098:6;2094:40;2236:6;2224:10;2221:22;2200:18;2188:10;2185:34;2182:62;2179:88;;;2247:18;;:::i;:::-;2179:88;2287:10;2283:2;2276:22;2066:238;2023:281;;:::o;2310:129::-;2344:6;2371:20;;:::i;:::-;2361:30;;2400:33;2428:4;2420:6;2400:33;:::i;:::-;2310:129;;;:::o;2445:311::-;2522:4;2612:18;2604:6;2601:30;2598:56;;;2634:18;;:::i;:::-;2598:56;2684:4;2676:6;2672:17;2664:25;;2744:4;2738;2734:15;2726:23;;2445:311;;;:::o;2762:117::-;2871:1;2868;2861:12;2885:77;2922:7;2951:5;2940:16;;2885:77;;;:::o;2968:122::-;3041:24;3059:5;3041:24;:::i;:::-;3034:5;3031:35;3021:63;;3080:1;3077;3070:12;3021:63;2968:122;:::o;3096:139::-;3142:5;3180:6;3167:20;3158:29;;3196:33;3223:5;3196:33;:::i;:::-;3096:139;;;;:::o;3258:710::-;3354:5;3379:81;3395:64;3452:6;3395:64;:::i;:::-;3379:81;:::i;:::-;3370:90;;3480:5;3509:6;3502:5;3495:21;3543:4;3536:5;3532:16;3525:23;;3596:4;3588:6;3584:17;3576:6;3572:30;3625:3;3617:6;3614:15;3611:122;;;3644:79;;:::i;:::-;3611:122;3759:6;3742:220;3776:6;3771:3;3768:15;3742:220;;;3851:3;3880:37;3913:3;3901:10;3880:37;:::i;:::-;3875:3;3868:50;3947:4;3942:3;3938:14;3931:21;;3818:144;3802:4;3797:3;3793:14;3786:21;;3742:220;;;3746:21;3360:608;;3258:710;;;;;:::o;3991:370::-;4062:5;4111:3;4104:4;4096:6;4092:17;4088:27;4078:122;;4119:79;;:::i;:::-;4078:122;4236:6;4223:20;4261:94;4351:3;4343:6;4336:4;4328:6;4324:17;4261:94;:::i;:::-;4252:103;;4068:293;3991:370;;;;:::o;4367:539::-;4451:6;4500:2;4488:9;4479:7;4475:23;4471:32;4468:119;;;4506:79;;:::i;:::-;4468:119;4654:1;4643:9;4639:17;4626:31;4684:18;4676:6;4673:30;4670:117;;;4706:79;;:::i;:::-;4670:117;4811:78;4881:7;4872:6;4861:9;4857:22;4811:78;:::i;:::-;4801:88;;4597:302;4367:539;;;;:::o;4912:118::-;4999:24;5017:5;4999:24;:::i;:::-;4994:3;4987:37;4912:118;;:::o;5036:222::-;5129:4;5167:2;5156:9;5152:18;5144:26;;5180:71;5248:1;5237:9;5233:17;5224:6;5180:71;:::i;:::-;5036:222;;;;:::o;5264:329::-;5323:6;5372:2;5360:9;5351:7;5347:23;5343:32;5340:119;;;5378:79;;:::i;:::-;5340:119;5498:1;5523:53;5568:7;5559:6;5548:9;5544:22;5523:53;:::i;:::-;5513:63;;5469:117;5264:329;;;;:::o;5599:118::-;5686:24;5704:5;5686:24;:::i;:::-;5681:3;5674:37;5599:118;;:::o;5723:222::-;5816:4;5854:2;5843:9;5839:18;5831:26;;5867:71;5935:1;5924:9;5920:17;5911:6;5867:71;:::i;:::-;5723:222;;;;:::o;5951:180::-;5999:77;5996:1;5989:88;6096:4;6093:1;6086:15;6120:4;6117:1;6110:15;6137:180;6185:77;6182:1;6175:88;6282:4;6279:1;6272:15;6306:4;6303:1;6296:15;6323:185;6363:1;6380:20;6398:1;6380:20;:::i;:::-;6375:25;;6414:20;6432:1;6414:20;:::i;:::-;6409:25;;6453:1;6443:35;;6458:18;;:::i;:::-;6443:35;6500:1;6497;6493:9;6488:14;;6323:185;;;;:::o;6514:191::-;6554:4;6574:20;6592:1;6574:20;:::i;:::-;6569:25;;6608:20;6626:1;6608:20;:::i;:::-;6603:25;;6647:1;6644;6641:8;6638:34;;;6652:18;;:::i;:::-;6638:34;6697:1;6694;6690:9;6682:17;;6514:191;;;;:::o;6711:332::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6883:71;6951:1;6940:9;6936:17;6927:6;6883:71;:::i;:::-;6964:72;7032:2;7021:9;7017:18;7008:6;6964:72;:::i;:::-;6711:332;;;;;:::o;7049:176::-;7081:1;7098:20;7116:1;7098:20;:::i;:::-;7093:25;;7132:20;7150:1;7132:20;:::i;:::-;7127:25;;7171:1;7161:35;;7176:18;;:::i;:::-;7161:35;7217:1;7214;7210:9;7205:14;;7049:176;;;;:::o;7231:180::-;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:305;7457:3;7476:20;7494:1;7476:20;:::i;:::-;7471:25;;7510:20;7528:1;7510:20;:::i;:::-;7505:25;;7664:1;7596:66;7592:74;7589:1;7586:81;7583:107;;;7670:18;;:::i;:::-;7583:107;7714:1;7711;7707:9;7700:16;;7417:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "471600",
								"executionCost": "505",
								"totalCost": "472105"
							},
							"external": {
								"aggregateValues(uint256[])": "infinite",
								"getAuthorisedSignerIndex(address)": "infinite",
								"getUniqueSignersThreshold()": "387",
								"validateTimestamp(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 114,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 666,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220109a1d435797bea2346ac8b06fcc8b315ad9c4a26c993b69492b50aabc28469764736f6c634300080d0033",
									".code": [
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "3CE142F5"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "B24EBFCC"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "F50B2EFE"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "F90C4924"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 666,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 181,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 479,
											"name": "PUSH",
											"source": 5,
											"value": "11FFFC9970C41B9BFB9AA35BE838D39BCE918CFF"
										},
										{
											"begin": 420,
											"end": 479,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 479,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 420,
											"end": 479,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 479,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 420,
											"end": 479,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 416,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 489,
											"end": 497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 489,
											"end": 497,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 416,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 573,
											"name": "PUSH",
											"source": 5,
											"value": "DBCC2C6C892C8D3E3FE4D325FEC810B7376A5ED6"
										},
										{
											"begin": 514,
											"end": 573,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 573,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 514,
											"end": 527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 514,
											"end": 573,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 573,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 514,
											"end": 573,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 510,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 510,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 590,
											"end": 591,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 583,
											"end": 591,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 510,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 510,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "EC459BC000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 653,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 653,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 286,
											"end": 664,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2381,
											"end": 2424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2381,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2429,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1597,
											"end": 1665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1665,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1597,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1670,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 256,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 282,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1681,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 584,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 1065,
											"end": 1094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1065,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1127,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 390,
											"end": 399,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 1196,
											"end": 1211,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1169,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1255,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1352,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1164,
											"end": 1352,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1342,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "B6B0916D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1352,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1164,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 326,
											"name": "PUSH",
											"source": 4,
											"value": "B4"
										},
										{
											"begin": 1387,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1384,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1455,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1539,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1364,
											"end": 1539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "321D0B500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1539,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1364,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1108,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 664,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 1543,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 448,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 448,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 532,
											"end": 535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 542,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 532,
											"end": 547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 528,
											"end": 601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 7,
											"value": "9E198AF900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 594,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 564,
											"end": 594,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 601,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 528,
											"end": 601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 606,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 611,
											"end": 614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 606,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 606,
											"end": 615,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 615,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 606,
											"end": 615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 621,
											"end": 640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 643,
											"end": 653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 643,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 643,
											"end": 657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 643,
											"end": 657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 643,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 643,
											"end": 657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 657,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 643,
											"end": 657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 621,
											"end": 657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 621,
											"end": 657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 667,
											"end": 670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 667,
											"end": 677,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 667,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 667,
											"end": 681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 667,
											"end": 681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 667,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 667,
											"end": 681,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 667,
											"end": 681,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 667,
											"end": 681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 667,
											"end": 686,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 663,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 663,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 741,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 727,
											"end": 738,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 727,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 727,
											"end": 742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 727,
											"end": 742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 727,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 727,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 727,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 723,
											"end": 743,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 748,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 749,
											"end": 760,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 710,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 696,
											"end": 762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 777,
											"end": 780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 770,
											"end": 784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 770,
											"end": 784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 770,
											"end": 784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 770,
											"end": 784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 770,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 770,
											"end": 784,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 663,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 663,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 816,
											"end": 827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 812,
											"end": 828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 805,
											"end": 828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 805,
											"end": 828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 805,
											"end": 828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 448,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 448,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 448,
											"end": 839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 448,
											"end": 839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 448,
											"end": 839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 448,
											"end": 839,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 843,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 976,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 967,
											"end": 997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1065,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1139,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1483,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1565,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1466,
											"end": 1565,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1565,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1466,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1227,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1073,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 1593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 1593,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1229,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1229,
											"end": 1256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1380,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1268,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1380,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1526,
											"end": 1593,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1593,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1526,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1600,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1606,
											"end": 1723,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1606,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1717,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1817,
											"end": 1824,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1831,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1837,
											"end": 2017,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1837,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1962,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 1987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2010,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2304,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2023,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2106,
											"end": 2133,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2133,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2106,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2219,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2244,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2179,
											"end": 2267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2267,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2179,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2298,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2304,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2439,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2631,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2689,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2748,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2756,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2762,
											"end": 2879,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2762,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2873,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3059,
											"end": 3064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3066,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3082,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3395,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3395,
											"end": 3459,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3395,
											"end": 3459,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3395,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3379,
											"end": 3460,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3379,
											"end": 3460,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3379,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3594,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3601,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3628,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3629,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3733,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3611,
											"end": 3733,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3644,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3644,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3644,
											"end": 3723,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3723,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3644,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3733,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3611,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3783,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3913,
											"end": 3916,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3918,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3945,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3952,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3818,
											"end": 3962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3742,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3968,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4062,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4114,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4115,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4078,
											"end": 4200,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4119,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4119,
											"end": 4198,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4119,
											"end": 4198,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4119,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4200,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4078,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4351,
											"end": 4354,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4340,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 4261,
											"end": 4355,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4261,
											"end": 4355,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4261,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4361,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4451,
											"end": 4457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 4497,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4486,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4498,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4471,
											"end": 4503,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4468,
											"end": 4587,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4506,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4506,
											"end": 4585,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4585,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4506,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4587,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4468,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4657,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4703,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4670,
											"end": 4787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4670,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4670,
											"end": 4787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4670,
											"end": 4787,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4670,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4881,
											"end": 4888,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 4811,
											"end": 4889,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4811,
											"end": 4889,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4811,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4906,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5024,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5180,
											"end": 5251,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5180,
											"end": 5251,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5180,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5258,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5358,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5370,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5343,
											"end": 5375,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5523,
											"end": 5576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5523,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5576,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5593,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5599,
											"end": 5717,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5599,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5686,
											"end": 5710,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5710,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5686,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5717,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 5856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5933,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5917,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5867,
											"end": 5938,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5867,
											"end": 5938,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5867,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5945,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5951,
											"end": 6131,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5951,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6076,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 6077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6124,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6125,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6317,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6137,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6262,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6286,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6279,
											"end": 6280,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6272,
											"end": 6287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6311,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6380,
											"end": 6400,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6380,
											"end": 6400,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 6380,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6414,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6434,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6443,
											"end": 6478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6478,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6443,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6508,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6574,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6569,
											"end": 6594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6569,
											"end": 6594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6647,
											"end": 6648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6644,
											"end": 6645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6649,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6699,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6705,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 7032,
											"end": 7034,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 7043,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7127,
											"end": 7152,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7127,
											"end": 7152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7161,
											"end": 7196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7196,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7161,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7225,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7530,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7662,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7666,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7667,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7690,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7583,
											"end": 7690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7690,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7583,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7722,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"aggregateValues(uint256[])": "b24ebfcc",
							"getAuthorisedSignerIndex(address)": "3ce142f5",
							"getUniqueSignersThreshold()": "f90c4924",
							"validateTimestamp(uint256)": "f50b2efe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CalldataMustHaveValidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CalldataOverOrUnderFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CanNotPickMedianOfEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EachSignerMustProvideTheSameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyCalldataPointersArr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectUnsignedMetadataSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedSignersCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignersCount\",\"type\":\"uint256\"}],\"name\":\"InsufficientNumberOfUniqueSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldataPointer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receivedSigner\",\"type\":\"address\"}],\"name\":\"SignerNotAuthorised\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampFromTooLongFuture\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"TimestampIsTooOld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"aggregateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signerAddress\",\"type\":\"address\"}],\"name\":\"getAuthorisedSignerIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniqueSignersThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receivedTimestampMilliseconds\",\"type\":\"uint256\"}],\"name\":\"validateTimestamp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateValues(uint256[])\":{\"details\":\"This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value\",\"params\":{\"values\":\"An array of uint256 values from different signers\"},\"returns\":{\"_0\":\"Result of the aggregation in the form of a single number\"}},\"getUniqueSignersThreshold()\":{\"details\":\"This function should be overridden by the child consumer contract.\",\"returns\":{\"_0\":\"The minimum required value of unique authorised signers\"}},\"validateTimestamp(uint256)\":{\"details\":\"This function may be overridden by the child consumer contract. It should validate the timestamp against the current time (block.timestamp) It should revert with a helpful message if the timestamp is not valid\",\"params\":{\"receivedTimestampMilliseconds\":\"Timestamp extracted from calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":\"CustomUrlsConsumerBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol\":{\"keccak256\":\"0xdd3de13c7194743e56133e19bb228a88d446e41a9494215c8e4b908155644eae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f69c992aeaabc2823648fa7be053d5c9b93e3914f2397f6213e87ecf167ed226\",\"dweb:/ipfs/QmRgynehX4BGMMsuEVg8LYUp55M8u1WELSCP4amYgLWprn\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol\":{\"keccak256\":\"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f\",\"dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol\":{\"keccak256\":\"0xcea791cdbc054d88248f94d600761fe2b33721f016608444828b400511c2f14a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bae01e69b26c58cbb0fcb2ce192e3fcde27f32855b2546fedf13d85475f7ede\",\"dweb:/ipfs/QmVTHJdboEmwGtwxZuw8xhP142cx6x7UJ5na4uTGEevS4k\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol\":{\"keccak256\":\"0xe8e70ed8bb3efc527dccaf5919587c7ff3980836256d7d8db8f632721a3cf956\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://550168f845b478dbb81f3f5dcf71cc61d64558a6dd676d95d2c46008b5e3e380\",\"dweb:/ipfs/Qmc2F5p3NdVubj733YqBGHyhA4TBnvEbqRRadkedboKw8Y\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol\":{\"keccak256\":\"0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73\",\"dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol\":{\"keccak256\":\"0xb3d4d5189ed745b1a1d026b3e85b7aa80c45ebf25a699d2dd59b766f69b9c992\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3a0a3e72e974a361fcaef4318057e25c02abd12a05efd9af6eb055b19791fe46\",\"dweb:/ipfs/Qmb7Ti8QNjWJv6Bi6xSa5x5FgVzJfwWZeRAXb9xu2FXiUK\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":{\"keccak256\":\"0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb\",\"dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":{\"keccak256\":\"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd\",\"dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt\"]},\".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":{\"keccak256\":\"0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4\",\"dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol": {
				"BitmapLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":58:390  library BitmapLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":58:390  library BitmapLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220104478de409955874861e0150cd3f902ee869b4fdc534107da96bde8fc6e6a8164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220104478de409955874861e0150cd3f902ee869b4fdc534107da96bde8fc6e6a8164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DIFFICULTY PUSH25 0xDE409955874861E0150CD3F902EE869B4FDC534107DA96BDE8 0xFC PUSH15 0x6A8164736F6C634300080D00330000 ",
							"sourceMap": "58:332:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220104478de409955874861e0150cd3f902ee869b4fdc534107da96bde8fc6e6a8164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DIFFICULTY PUSH25 0xDE409955874861E0150CD3F902EE869B4FDC534107DA96BDE8 0xFC PUSH15 0x6A8164736F6C634300080D00330000 ",
							"sourceMap": "58:332:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getBitFromBitmap(uint256,uint256)": "infinite",
								"setBitInBitmap(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 58,
									"end": 390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220104478de409955874861e0150cd3f902ee869b4fdc534107da96bde8fc6e6a8164736f6c634300080d0033",
									".code": [
										{
											"begin": 58,
											"end": 390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 58,
											"end": 390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 58,
											"end": 390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 58,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58,
											"end": 390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":\"BitmapLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol\":{\"keccak256\":\"0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb\",\"dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol": {
				"NumericArrayLib": {
					"abi": [
						{
							"inputs": [],
							"name": "CanNotPickMedianOfEmptyArray",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":117:1595  library NumericArrayLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":117:1595  library NumericArrayLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f05ec9c1c1b4d0439462d324a1773346c079e229d6853fd345a681dc311c32cc64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f05ec9c1c1b4d0439462d324a1773346c079e229d6853fd345a681dc311c32cc64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x5E 0xC9 0xC1 0xC1 0xB4 0xD0 NUMBER SWAP5 PUSH3 0xD324A1 PUSH24 0x3346C079E229D6853FD345A681DC311C32CC64736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "117:1478:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f05ec9c1c1b4d0439462d324a1773346c079e229d6853fd345a681dc311c32cc64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x5E 0xC9 0xC1 0xC1 0xB4 0xD0 NUMBER SWAP5 PUSH3 0xD324A1 PUSH24 0x3346C079E229D6853FD345A681DC311C32CC64736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "117:1478:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"pickMedian(uint256[] memory)": "infinite",
								"sort(uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 1595,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f05ec9c1c1b4d0439462d324a1773346c079e229d6853fd345a681dc311c32cc64736f6c634300080d0033",
									".code": [
										{
											"begin": 117,
											"end": 1595,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 117,
											"end": 1595,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CanNotPickMedianOfEmptyArray\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":\"NumericArrayLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol\":{\"keccak256\":\"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd\",\"dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol": {
				"SignatureLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":58:876  library SignatureLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":58:876  library SignatureLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cd677ffedaedb86ae3b877bd36cb434bc57f35340a02ce02cd3edb21fe3267664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd677ffedaedb86ae3b877bd36cb434bc57f35340a02ce02cd3edb21fe3267664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD6 PUSH24 0xFFEDAEDB86AE3B877BD36CB434BC57F35340A02CE02CD3ED 0xB2 0x1F 0xE3 0x26 PUSH23 0x64736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "58:818:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cd677ffedaedb86ae3b877bd36cb434bc57f35340a02ce02cd3edb21fe3267664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD6 PUSH24 0xFFEDAEDB86AE3B877BD36CB434BC57F35340A02CE02CD3ED 0xB2 0x1F 0xE3 0x26 PUSH23 0x64736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "58:818:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"recoverSignerAddress(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 876,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cd677ffedaedb86ae3b877bd36cb434bc57f35340a02ce02cd3edb21fe3267664736f6c634300080d0033",
									".code": [
										{
											"begin": 58,
											"end": 876,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 876,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 876,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 58,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 58,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 58,
											"end": 876,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":\"SignatureLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol\":{\"keccak256\":\"0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4\",\"dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD SHL MULMOD GASPRICE NUMBER SWAP8 0xF8 NUMBER DUP12 SWAP7 0xB8 SWAP16 PUSH25 0x3006275EBC2FA9DC186C5DC5B69D2E218B7764736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD SHL MULMOD GASPRICE NUMBER SWAP8 0xF8 NUMBER DUP12 SWAP7 0xB8 SWAP16 PUSH25 0x3006275EBC2FA9DC186C5DC5B69D2E218B7764736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol",
					"exportedSymbols": {
						"CalldataExtractor": [
							186
						],
						"RedstoneConstants": [
							272
						],
						"SafeMath": [
							1552
						]
					},
					"id": 187,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 1553,
							"src": "63:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol",
							"file": "./RedstoneConstants.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 273,
							"src": "122:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "RedstoneConstants",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 272,
										"src": "435:17:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "435:17:0"
								}
							],
							"canonicalName": "CalldataExtractor",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "157:247:0",
								"text": " @title The base contract with the main logic of data extraction from calldata\n @author The Redstone Oracles team\n @dev This contract was created to reuse the same logic in the RedstoneConsumerBase\n and the ProxyConnector contracts"
							},
							"fullyImplemented": true,
							"id": 186,
							"linearizedBaseContracts": [
								186,
								272
							],
							"name": "CalldataExtractor",
							"nameLocation": "414:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 9,
									"libraryName": {
										"id": 7,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1552,
										"src": "463:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "457:27:0",
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "476:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "566:1091:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "hasValidRedstoneMarker",
														"nameLocation": "639:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 61,
														"src": "634:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 14,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "634:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"nodeType": "VariableDeclarationStatement",
												"src": "634:27:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "676:221:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:78:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "728:12:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "728:14:0"
																			},
																			{
																				"name": "STANDARD_SLOT_BS",
																				"nodeType": "YulIdentifier",
																				"src": "744:16:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "724:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "724:37:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "711:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:51:0"
															},
															"variables": [
																{
																	"name": "calldataLast32Bytes",
																	"nodeType": "YulTypedName",
																	"src": "688:19:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "769:122:0",
															"value": {
																"arguments": [
																	{
																		"name": "REDSTONE_MARKER_MASK",
																		"nodeType": "YulIdentifier",
																		"src": "807:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "calldataLast32Bytes",
																				"nodeType": "YulIdentifier",
																				"src": "841:19:0"
																			},
																			{
																				"name": "REDSTONE_MARKER_MASK",
																				"nodeType": "YulIdentifier",
																				"src": "862:20:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:46:0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "795:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:96:0"
															},
															"variableNames": [
																{
																	"name": "hasValidRedstoneMarker",
																	"nodeType": "YulIdentifier",
																	"src": "769:22:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 237,
														"isOffset": false,
														"isSlot": false,
														"src": "807:20:0",
														"valueSize": 1
													},
													{
														"declaration": 237,
														"isOffset": false,
														"isSlot": false,
														"src": "862:20:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "744:16:0",
														"valueSize": 1
													},
													{
														"declaration": 15,
														"isOffset": false,
														"isSlot": false,
														"src": "769:22:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "667:230:0"
											},
											{
												"condition": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "906:23:0",
													"subExpression": {
														"id": 18,
														"name": "hasValidRedstoneMarker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "907:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "902:81:0",
												"trueBody": {
													"id": 23,
													"nodeType": "Block",
													"src": "931:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 20,
																	"name": "CalldataMustHaveValidPayload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "946:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "946:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 22,
															"nodeType": "RevertStatement",
															"src": "939:37:0"
														}
													]
												}
											},
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "unsignedMetadataByteSize",
														"nameLocation": "1072:24:0",
														"nodeType": "VariableDeclaration",
														"scope": 61,
														"src": "1065:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 25,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "1065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1106:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 29,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1149:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "1149:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1149:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1106:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "1102:111:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "1166:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 33,
																	"name": "CalldataOverOrUnderFlow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1181:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1181:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 35,
															"nodeType": "RevertStatement",
															"src": "1174:32:0"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1227:133:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1235:119:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "1289:12:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1289:14:0"
																			},
																			{
																				"name": "REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS",
																				"nodeType": "YulIdentifier",
																				"src": "1305:40:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1285:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:61:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1263:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:91:0"
															},
															"variableNames": [
																{
																	"name": "unsignedMetadataByteSize",
																	"nodeType": "YulIdentifier",
																	"src": "1235:24:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 249,
														"isOffset": false,
														"isSlot": false,
														"src": "1305:40:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "1235:24:0",
														"valueSize": 1
													}
												],
												"id": 38,
												"nodeType": "InlineAssembly",
												"src": "1218:142:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "calldataNegativeOffset",
														"nameLocation": "1373:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 61,
														"src": "1365:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 39,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 46,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 41,
															"name": "unsignedMetadataByteSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1398:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 42,
															"name": "UNSIGNED_METADATA_BYTE_SIZE_BS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "1431:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1398:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 44,
														"name": "REDSTONE_MARKER_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1470:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1398:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1365:123:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "calldataNegativeOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "1498:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 48,
															"name": "DATA_PACKAGES_COUNT_BS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1523:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1498:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1548:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "1548:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1548:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1498:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "IfStatement",
												"src": "1494:124:0",
												"trueBody": {
													"id": 57,
													"nodeType": "Block",
													"src": "1565:53:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "IncorrectUnsignedMetadataSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1580:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1580:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 56,
															"nodeType": "RevertStatement",
															"src": "1573:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 59,
													"name": "calldataNegativeOffset",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "1630:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 13,
												"id": 60,
												"nodeType": "Return",
												"src": "1623:29:0"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extractByteSizeOfUnsignedMetadata",
									"nameLocation": "497:34:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:9:0"
									},
									"scope": 186,
									"src": "488:1169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1881:383:0",
										"statements": [
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "calldataNegativeOffsetWithStandardSlot",
														"nameLocation": "1895:38:0",
														"nodeType": "VariableDeclaration",
														"scope": 88,
														"src": "1887:46:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 71,
														"name": "calldataNegativeOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1936:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 72,
														"name": "STANDARD_SLOT_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1961:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1936:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1887:90:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 75,
														"name": "calldataNegativeOffsetWithStandardSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1987:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2028:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "2028:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2028:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1987:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "1983:109:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "2045:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 80,
																	"name": "CalldataOverOrUnderFlow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "2060:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2060:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 82,
															"nodeType": "RevertStatement",
															"src": "2053:32:0"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2106:124:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2114:110:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "2161:12:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2161:14:0"
																			},
																			{
																				"name": "calldataNegativeOffsetWithStandardSlot",
																				"nodeType": "YulIdentifier",
																				"src": "2177:38:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:59:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:89:0"
															},
															"variableNames": [
																{
																	"name": "dataPackagesCount",
																	"nodeType": "YulIdentifier",
																	"src": "2114:17:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 70,
														"isOffset": false,
														"isSlot": false,
														"src": "2177:38:0",
														"valueSize": 1
													},
													{
														"declaration": 67,
														"isOffset": false,
														"isSlot": false,
														"src": "2114:17:0",
														"valueSize": 1
													}
												],
												"id": 85,
												"nodeType": "InlineAssembly",
												"src": "2097:133:0"
											},
											{
												"expression": {
													"id": 86,
													"name": "dataPackagesCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "2242:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 68,
												"id": 87,
												"nodeType": "Return",
												"src": "2235:24:0"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extractDataPackagesCountFromCalldata",
									"nameLocation": "1748:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "calldataNegativeOffset",
												"nameLocation": "1794:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1786:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:32:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "dataPackagesCount",
												"nameLocation": "1860:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1853:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 66,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:26:0"
									},
									"scope": 186,
									"src": "1739:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2522:547:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "negativeOffsetToDataPoints",
														"nameLocation": "2536:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "2528:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 104,
														"name": "calldataNegativeOffsetForDataPackage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "2565:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 105,
														"name": "DATA_PACKAGE_WITHOUT_DATA_POINTS_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2604:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2565:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:111:0"
											},
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "dataPointNegativeOffset",
														"nameLocation": "2653:23:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "2645:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 117,
																				"name": "defaultDataPointValueByteSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 93,
																				"src": "2743:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 118,
																				"name": "DATA_POINT_SYMBOL_BS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "2775:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2743:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 120,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2742:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2718:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 113,
																				"name": "dataPointIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 95,
																				"src": "2722:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2718:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 115,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2717:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1446,
																"src": "2717:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 110,
															"name": "negativeOffsetToDataPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2679:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1416,
														"src": "2679:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2645:158:0"
											},
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "dataPointCalldataOffset",
														"nameLocation": "2817:23:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "2809:31:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"arguments": [
														{
															"id": 130,
															"name": "dataPointNegativeOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2863:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"expression": {
																	"id": 126,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2843:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "2843:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2843:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1431,
														"src": "2843:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2809:78:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2902:163:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2910:60:0",
															"value": {
																"arguments": [
																	{
																		"name": "dataPointCalldataOffset",
																		"nodeType": "YulIdentifier",
																		"src": "2946:23:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2933:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2933:37:0"
															},
															"variableNames": [
																{
																	"name": "dataPointDataFeedId",
																	"nodeType": "YulIdentifier",
																	"src": "2910:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2977:82:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataPointCalldataOffset",
																				"nodeType": "YulIdentifier",
																				"src": "3012:23:0"
																			},
																			{
																				"name": "DATA_POINT_SYMBOL_BS",
																				"nodeType": "YulIdentifier",
																				"src": "3037:20:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3008:50:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2995:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:64:0"
															},
															"variableNames": [
																{
																	"name": "dataPointValue",
																	"nodeType": "YulIdentifier",
																	"src": "2977:14:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": false,
														"src": "3037:20:0",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2946:23:0",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "3012:23:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "2910:19:0",
														"valueSize": 1
													},
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "2977:14:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "2893:172:0"
											}
										]
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extractDataPointValueAndDataFeedId",
									"nameLocation": "2277:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "calldataNegativeOffsetForDataPackage",
												"nameLocation": "2326:36:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2318:44:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "defaultDataPointValueByteSize",
												"nameLocation": "2376:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2368:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "dataPointIndex",
												"nameLocation": "2419:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2411:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2312:125:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "dataPointDataFeedId",
												"nameLocation": "2477:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2469:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "dataPointValue",
												"nameLocation": "2506:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2498:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:53:0"
									},
									"scope": 186,
									"src": "2268:801:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "3266:833:0",
										"statements": [
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "dataPointsCount_",
														"nameLocation": "3355:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "3348:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 144,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "3348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:23:0"
											},
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "eachDataPointValueByteSize_",
														"nameLocation": "3453:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "3446:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 147,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"nodeType": "VariableDeclarationStatement",
												"src": "3446:34:0"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "negativeCalldataOffset",
														"nameLocation": "3528:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "3520:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "calldataNegativeOffsetForDataPackage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "3553:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 153,
														"name": "SIG_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3592:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3553:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3520:78:0"
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "calldataOffset",
														"nameLocation": "3612:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "3604:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "negativeCalldataOffset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "3649:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 163,
																"name": "STANDARD_SLOT_BS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "3674:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3649:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"expression": {
																	"id": 158,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3629:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "3629:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3629:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1431,
														"src": "3629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3629:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3604:87:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3706:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3714:48:0",
															"value": {
																"arguments": [
																	{
																		"name": "calldataOffset",
																		"nodeType": "YulIdentifier",
																		"src": "3747:14:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3734:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:28:0"
															},
															"variableNames": [
																{
																	"name": "dataPointsCount_",
																	"nodeType": "YulIdentifier",
																	"src": "3714:16:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "3747:14:0",
														"valueSize": 1
													},
													{
														"declaration": 145,
														"isOffset": false,
														"isSlot": false,
														"src": "3714:16:0",
														"valueSize": 1
													}
												],
												"id": 167,
												"nodeType": "InlineAssembly",
												"src": "3697:71:0"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "calldataOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "3816:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 171,
																"name": "DATA_POINTS_COUNT_BS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "3852:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 169,
																"name": "calldataOffset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "3833:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1431,
															"src": "3833:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3833:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3816:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "3816:57:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3888:73:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3896:59:0",
															"value": {
																"arguments": [
																	{
																		"name": "calldataOffset",
																		"nodeType": "YulIdentifier",
																		"src": "3940:14:0"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3927:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:28:0"
															},
															"variableNames": [
																{
																	"name": "eachDataPointValueByteSize_",
																	"nodeType": "YulIdentifier",
																	"src": "3896:27:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 157,
														"isOffset": false,
														"isSlot": false,
														"src": "3940:14:0",
														"valueSize": 1
													},
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "3896:27:0",
														"valueSize": 1
													}
												],
												"id": 175,
												"nodeType": "InlineAssembly",
												"src": "3879:82:0"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "dataPointsCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3998:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 177,
														"name": "dataPointsCount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "4016:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "3998:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "3998:34:0"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "eachDataPointValueByteSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "4038:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "eachDataPointValueByteSize_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "4067:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4038:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "4038:56:0"
											}
										]
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extractDataPointsDetailsForDataPackage",
									"nameLocation": "3082:39:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "calldataNegativeOffsetForDataPackage",
												"nameLocation": "3130:36:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3122:44:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:46:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "dataPointsCount",
												"nameLocation": "3211:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3203:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "eachDataPointValueByteSize",
												"nameLocation": "3236:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3228:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:61:0"
									},
									"scope": 186,
									"src": "3073:1026:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 187,
							"src": "405:3696:0",
							"usedErrors": [
								251,
								253,
								259,
								261,
								263,
								265,
								267,
								271
							]
						}
					],
					"src": "38:4064:0"
				},
				"id": 0
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol",
					"exportedSymbols": {
						"RedstoneConstants": [
							272
						]
					},
					"id": 273,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RedstoneConstants",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 189,
								"nodeType": "StructuredDocumentation",
								"src": "63:245:1",
								"text": " @title The base contract with helpful constants\n @author The Redstone Oracles team\n @dev It mainly contains redstone-related values, which improve readability\n of other contracts (e.g. CalldataExtractor and RedstoneConsumerBase)"
							},
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "RedstoneConstants",
							"nameLocation": "318:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 192,
									"mutability": "constant",
									"name": "STANDARD_SLOT_BS",
									"nameLocation": "505:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "479:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "524:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 195,
									"mutability": "constant",
									"name": "FREE_MEMORY_PTR",
									"nameLocation": "556:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "530:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "530:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783430",
										"id": 194,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "574:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "0x40"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 198,
									"mutability": "constant",
									"name": "BYTES_ARR_LEN_VAR_BS",
									"nameLocation": "608:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "582:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "582:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "631:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 201,
									"mutability": "constant",
									"name": "FUNCTION_SIGNATURE_BS",
									"nameLocation": "663:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "637:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "687:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 204,
									"mutability": "constant",
									"name": "REVERT_MSG_OFFSET",
									"nameLocation": "718:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "692:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "692:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3638",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "738:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_68_by_1",
											"typeString": "int_const 68"
										},
										"value": "68"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 207,
									"mutability": "constant",
									"name": "STRING_ERR_MESSAGE_MASK",
									"nameLocation": "864:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "838:118:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307830386333373961303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "890:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3963877391197344453575983046348115674221700746820753546331534351508065746944_by_1",
											"typeString": "int_const 3963...(68 digits omitted)...6944"
										},
										"value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 210,
									"mutability": "constant",
									"name": "SIG_BS",
									"nameLocation": "1017:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "991:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "991:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3635",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1026:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "65"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 213,
									"mutability": "constant",
									"name": "TIMESTAMP_BS",
									"nameLocation": "1058:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1032:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 211,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1073:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 216,
									"mutability": "constant",
									"name": "DATA_PACKAGES_COUNT_BS",
									"nameLocation": "1104:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1078:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1078:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1129:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 219,
									"mutability": "constant",
									"name": "DATA_POINTS_COUNT_BS",
									"nameLocation": "1160:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1134:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1134:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1183:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 222,
									"mutability": "constant",
									"name": "DATA_POINT_VALUE_BYTE_SIZE_BS",
									"nameLocation": "1214:29:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1188:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1188:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1246:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 225,
									"mutability": "constant",
									"name": "DATA_POINT_SYMBOL_BS",
									"nameLocation": "1277:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1251:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 223,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1300:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 228,
									"mutability": "constant",
									"name": "DEFAULT_DATA_POINT_VALUE_BS",
									"nameLocation": "1332:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1306:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1306:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1362:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 231,
									"mutability": "constant",
									"name": "UNSIGNED_METADATA_BYTE_SIZE_BS",
									"nameLocation": "1394:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1368:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 229,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 230,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1427:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 234,
									"mutability": "constant",
									"name": "REDSTONE_MARKER_BS",
									"nameLocation": "1458:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1432:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1432:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1479:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 237,
									"mutability": "constant",
									"name": "REDSTONE_MARKER_MASK",
									"nameLocation": "1547:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1521:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 235,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1521:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303032656435373031316530303030",
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1570:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_823907890102272_by_1",
											"typeString": "int_const 823907890102272"
										},
										"value": "0x0000000000000000000000000000000000000000000000000002ed57011e0000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 240,
									"mutability": "constant",
									"name": "TIMESTAMP_NEGATIVE_OFFSET_IN_DATA_PACKAGE_WITH_STANDARD_SLOT_BS",
									"nameLocation": "1705:63:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1679:95:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1679:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313034",
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1771:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_104_by_1",
											"typeString": "int_const 104"
										},
										"value": "104"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "DATA_PACKAGE_WITHOUT_DATA_POINTS_BS",
									"nameLocation": "1888:35:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1862:66:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1862:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3738",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1926:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_78_by_1",
											"typeString": "int_const 78"
										},
										"value": "78"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "DATA_PACKAGE_WITHOUT_DATA_POINTS_AND_SIG_BS",
									"nameLocation": "2038:43:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "2012:74:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2012:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2084:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 249,
									"mutability": "constant",
									"name": "REDSTONE_MARKER_BS_PLUS_STANDARD_SLOT_BS",
									"nameLocation": "2187:40:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "2161:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2161:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3431",
										"id": 248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2230:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_41_by_1",
											"typeString": "int_const 41"
										},
										"value": "41"
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "5796f78a",
									"id": 251,
									"name": "CalldataOverOrUnderFlow",
									"nameLocation": "2304:23:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2327:2:1"
									},
									"src": "2298:32:1"
								},
								{
									"errorSelector": "c30a7bd7",
									"id": 253,
									"name": "IncorrectUnsignedMetadataSize",
									"nameLocation": "2339:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:2:1"
									},
									"src": "2333:38:1"
								},
								{
									"errorSelector": "2b13aef5",
									"id": 259,
									"name": "InsufficientNumberOfUniqueSigners",
									"nameLocation": "2380:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "receivedSignersCount",
												"nameLocation": "2422:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2414:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "requiredSignersCount",
												"nameLocation": "2452:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2444:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:60:1"
									},
									"src": "2374:100:1"
								},
								{
									"errorSelector": "ece458ec",
									"id": 261,
									"name": "EachSignerMustProvideTheSameValue",
									"nameLocation": "2483:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:2:1"
									},
									"src": "2477:42:1"
								},
								{
									"errorSelector": "6c2325dc",
									"id": 263,
									"name": "EmptyCalldataPointersArr",
									"nameLocation": "2528:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:2:1"
									},
									"src": "2522:33:1"
								},
								{
									"errorSelector": "b0e86e51",
									"id": 265,
									"name": "InvalidCalldataPointer",
									"nameLocation": "2564:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:2:1"
									},
									"src": "2558:31:1"
								},
								{
									"errorSelector": "e7764c9e",
									"id": 267,
									"name": "CalldataMustHaveValidPayload",
									"nameLocation": "2598:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2626:2:1"
									},
									"src": "2592:37:1"
								},
								{
									"errorSelector": "ec459bc0",
									"id": 271,
									"name": "SignerNotAuthorised",
									"nameLocation": "2638:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "receivedSigner",
												"nameLocation": "2666:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2658:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:24:1"
									},
									"src": "2632:50:1"
								}
							],
							"scope": 273,
							"src": "309:2375:1",
							"usedErrors": [
								251,
								253,
								259,
								261,
								263,
								265,
								267,
								271
							]
						}
					],
					"src": "38:2647:1"
				},
				"id": 1
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol",
					"exportedSymbols": {
						"BitmapLib": [
							1124
						],
						"CalldataExtractor": [
							186
						],
						"NumericArrayLib": [
							1204
						],
						"RedstoneConstants": [
							272
						],
						"RedstoneConsumerBase": [
							743
						],
						"RedstoneDefaultsLib": [
							1038
						],
						"SafeMath": [
							1552
						],
						"SignatureLib": [
							1240
						]
					},
					"id": 744,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 1553,
							"src": "63:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConstants.sol",
							"file": "./RedstoneConstants.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 273,
							"src": "122:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol",
							"file": "./RedstoneDefaultsLib.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 1039,
							"src": "156:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/CalldataExtractor.sol",
							"file": "./CalldataExtractor.sol",
							"id": 278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 187,
							"src": "192:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol",
							"file": "../libs/BitmapLib.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 1125,
							"src": "226:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol",
							"file": "../libs/SignatureLib.sol",
							"id": 280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 744,
							"sourceUnit": 1241,
							"src": "258:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 282,
										"name": "CalldataExtractor",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 186,
										"src": "591:17:2"
									},
									"id": 283,
									"nodeType": "InheritanceSpecifier",
									"src": "591:17:2"
								}
							],
							"canonicalName": "RedstoneConsumerBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 281,
								"nodeType": "StructuredDocumentation",
								"src": "294:254:2",
								"text": " @title The base contract with the main Redstone logic\n @author The Redstone Oracles team\n @dev Do not use this contract directly in consumer contracts, take a\n look at `RedstoneConsumerNumericBase` and `RedstoneConsumerBytesBase` instead"
							},
							"fullyImplemented": false,
							"id": 743,
							"linearizedBaseContracts": [
								743,
								186,
								272
							],
							"name": "RedstoneConsumerBase",
							"nameLocation": "567:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 286,
									"libraryName": {
										"id": 284,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1552,
										"src": "619:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "613:27:2",
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "732:354:2",
										"text": " @dev This function must be implemented by the child consumer contract.\n It should return a unique index for a given signer address if the signer\n is authorised, otherwise it should revert\n @param receivedSigner The address of a signer, recovered from ECDSA signature\n @return Unique index for a signer in the range [0..255]"
									},
									"functionSelector": "3ce142f5",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorisedSignerIndex",
									"nameLocation": "1098:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receivedSigner",
												"nameLocation": "1131:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1123:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:24:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1176:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 291,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1176:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:7:2"
									},
									"scope": 743,
									"src": "1089:94:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1591:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "receivedTimestampMilliseconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1635:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 300,
															"name": "RedstoneDefaultsLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "1597:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_RedstoneDefaultsLib_$1038_$",
																"typeString": "type(library RedstoneDefaultsLib)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "validateTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1023,
														"src": "1597:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1597:68:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1187:315:2",
										"text": " @dev This function may be overridden by the child consumer contract.\n It should validate the timestamp against the current time (block.timestamp)\n It should revert with a helpful message if the timestamp is not valid\n @param receivedTimestampMilliseconds Timestamp extracted from calldata"
									},
									"functionSelector": "f50b2efe",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateTimestamp",
									"nameLocation": "1514:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "receivedTimestampMilliseconds",
												"nameLocation": "1540:29:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1532:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:39:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:2"
									},
									"scope": 743,
									"src": "1505:165:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "1905:19:2",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1918:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 312,
												"id": 314,
												"nodeType": "Return",
												"src": "1911:8:2"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "1674:155:2",
										"text": " @dev This function should be overridden by the child consumer contract.\n @return The minimum required value of unique authorised signers"
									},
									"functionSelector": "f90c4924",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUniqueSignersThreshold",
									"nameLocation": "1841:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:2:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1898:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 310,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1898:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:7:2"
									},
									"scope": 743,
									"src": "1832:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2368:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "2417:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 325,
															"name": "RedstoneDefaultsLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "2381:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_RedstoneDefaultsLib_$1038_$",
																"typeString": "type(library RedstoneDefaultsLib)"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "aggregateValues",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1037,
														"src": "2381:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory) pure returns (uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2381:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 324,
												"id": 329,
												"nodeType": "Return",
												"src": "2374:50:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "1928:349:2",
										"text": " @dev This function may be overridden by the child consumer contract.\n It should aggregate values from different signers to a single uint value.\n By default, it calculates the median value\n @param values An array of uint256 values from different signers\n @return Result of the aggregation in the form of a single number"
									},
									"functionSelector": "b24ebfcc",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "aggregateValues",
									"nameLocation": "2289:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2322:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2305:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2305:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"nodeType": "ArrayTypeName",
													"src": "2305:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:25:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2359:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2358:9:2"
									},
									"scope": 743,
									"src": "2280:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "3460:1891:2",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "uniqueSignerCountForDataFeedIds",
														"nameLocation": "3543:31:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "3526:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 343,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3526:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 344,
															"nodeType": "ArrayTypeName",
															"src": "3526:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 352,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 349,
																"name": "dataFeedIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3591:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3591:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3577:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 346,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3581:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ArrayTypeName",
															"src": "3581:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3577:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3526:84:2"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "signersBitmapForDataFeedIds",
														"nameLocation": "3633:27:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "3616:44:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 355,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3616:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ArrayTypeName",
															"src": "3616:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 361,
																"name": "dataFeedIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3677:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3677:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3663:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3667:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"nodeType": "ArrayTypeName",
															"src": "3667:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:80:2"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "valuesForDataFeeds",
														"nameLocation": "3721:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "3702:37:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
															"typeString": "uint256[][]"
														},
														"typeName": {
															"baseType": {
																"baseType": {
																	"id": 367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3702:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 368,
																"nodeType": "ArrayTypeName",
																"src": "3702:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															},
															"id": 369,
															"nodeType": "ArrayTypeName",
															"src": "3702:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
																"typeString": "uint256[][]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "dataFeedIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3758:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3758:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3742:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"baseType": {
																	"id": 371,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3746:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 372,
																"nodeType": "ArrayTypeName",
																"src": "3746:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															},
															"id": 373,
															"nodeType": "ArrayTypeName",
															"src": "3746:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
																"typeString": "uint256[][]"
															}
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3742:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
														"typeString": "uint256[] memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3702:75:2"
											},
											{
												"body": {
													"id": 401,
													"nodeType": "Block",
													"src": "3832:296:2",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 390,
																		"name": "valuesForDataFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "4055:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																			"typeString": "uint256[] memory[] memory"
																		}
																	},
																	"id": 392,
																	"indexExpression": {
																		"id": 391,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "4074:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4055:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 396,
																				"name": "getUniqueSignersThreshold",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 316,
																				"src": "4093:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4093:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "4079:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (uint256[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 393,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4083:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 394,
																			"nodeType": "ArrayTypeName",
																			"src": "4083:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[]"
																			}
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:42:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"src": "4055:66:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "4055:66:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3803:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 384,
															"name": "dataFeedIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "3807:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3807:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3803:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"initializationExpression": {
													"assignments": [
														380
													],
													"declarations": [
														{
															"constant": false,
															"id": 380,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3796:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 402,
															"src": "3788:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 379,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3788:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 382,
													"initialValue": {
														"hexValue": "30",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3800:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3788:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3827:3:2",
														"subExpression": {
															"id": 387,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3827:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"nodeType": "ExpressionStatement",
													"src": "3827:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3783:345:2"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "calldataNegativeOffset",
														"nameLocation": "4202:22:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "4194:30:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4194:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 405,
														"name": "_extractByteSizeOfUnsignedMetadata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "4227:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4227:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4194:69:2"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "dataPackagesCount",
														"nameLocation": "4277:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "4269:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [
														{
															"id": 411,
															"name": "calldataNegativeOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4335:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 410,
														"name": "_extractDataPackagesCountFromCalldata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "4297:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
															"typeString": "function (uint256) pure returns (uint16)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4269:89:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "calldataNegativeOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "4364:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 415,
														"name": "DATA_PACKAGES_COUNT_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4390:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4364:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "4364:48:2"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "freeMemPtr",
														"nameLocation": "4469:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "4461:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4461:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"nodeType": "VariableDeclarationStatement",
												"src": "4461:18:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4494:50:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4502:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "FREE_MEMORY_PTR",
																		"nodeType": "YulIdentifier",
																		"src": "4522:15:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4516:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:22:2"
															},
															"variableNames": [
																{
																	"name": "freeMemPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4502:10:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": false,
														"src": "4522:15:2",
														"valueSize": 1
													},
													{
														"declaration": 419,
														"isOffset": false,
														"isSlot": false,
														"src": "4502:10:2",
														"valueSize": 1
													}
												],
												"id": 421,
												"nodeType": "InlineAssembly",
												"src": "4485:59:2"
											},
											{
												"body": {
													"id": 447,
													"nodeType": "Block",
													"src": "4685:477:2",
													"statements": [
														{
															"assignments": [
																433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 433,
																	"mutability": "mutable",
																	"name": "dataPackageByteSize",
																	"nameLocation": "4766:19:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 447,
																	"src": "4758:27:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 432,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4758:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 441,
															"initialValue": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "dataFeedIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "4817:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	{
																		"id": 436,
																		"name": "uniqueSignerCountForDataFeedIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "4838:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 437,
																		"name": "signersBitmapForDataFeedIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "4879:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 438,
																		"name": "valuesForDataFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "4916:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																			"typeString": "uint256[] memory[] memory"
																		}
																	},
																	{
																		"id": 439,
																		"name": "calldataNegativeOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "4944:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																			"typeString": "uint256[] memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 434,
																	"name": "_extractDataPackage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "4788:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (bytes32[] memory,uint256[] memory,uint256[] memory,uint256[] memory[] memory,uint256) view returns (uint256)"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4788:186:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4758:216:2"
														},
														{
															"expression": {
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 442,
																	"name": "calldataNegativeOffset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "4982:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 443,
																	"name": "dataPackageByteSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5008:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 445,
															"nodeType": "ExpressionStatement",
															"src": "4982:45:2"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5103:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "FREE_MEMORY_PTR",
																					"nodeType": "YulIdentifier",
																					"src": "5120:15:2"
																				},
																				{
																					"name": "freeMemPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5137:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5113:35:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5113:35:2"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 195,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5120:15:2",
																	"valueSize": 1
																},
																{
																	"declaration": 419,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5137:10:2",
																	"valueSize": 1
																}
															],
															"id": 446,
															"nodeType": "InlineAssembly",
															"src": "5094:62:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "dataPackageIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4627:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 427,
														"name": "dataPackagesCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "4646:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4627:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"initializationExpression": {
													"assignments": [
														423
													],
													"declarations": [
														{
															"constant": false,
															"id": 423,
															"mutability": "mutable",
															"name": "dataPackageIndex",
															"nameLocation": "4605:16:2",
															"nodeType": "VariableDeclaration",
															"scope": 448,
															"src": "4597:24:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 422,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4597:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 425,
													"initialValue": {
														"hexValue": "30",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4624:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4597:28:2"
												},
												"loopExpression": {
													"expression": {
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4665:18:2",
														"subExpression": {
															"id": 429,
															"name": "dataPackageIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4665:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 431,
													"nodeType": "ExpressionStatement",
													"src": "4665:18:2"
												},
												"nodeType": "ForStatement",
												"src": "4592:570:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "valuesForDataFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5294:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																"typeString": "uint256[] memory[] memory"
															}
														},
														{
															"id": 451,
															"name": "uniqueSignerCountForDataFeedIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5314:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																"typeString": "uint256[] memory[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 449,
														"name": "_getAggregatedValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "5273:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory[] memory,uint256[] memory) view returns (uint256[] memory)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 453,
												"nodeType": "Return",
												"src": "5266:80:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2518:807:2",
										"text": " @dev This is an internal helpful function for secure extraction oracle values\n from the tx calldata. Security is achieved by signatures verification, timestamp\n validation, and aggregating values from different authorised signers into a\n single numeric value. If any of the required conditions (e.g. too old timestamp or\n insufficient number of authorised signers) do not match, the function will revert.\n Note! You should not call this function in a consumer contract. You can use\n `getOracleNumericValuesFromTxMsg` or `getOracleNumericValueFromTxMsg` instead.\n @param dataFeedIds An array of unique data feed identifiers\n @return An array of the extracted and verified oracle values in the same order\n as they are requested in dataFeedIds array"
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_securelyExtractOracleValuesFromTxMsg",
									"nameLocation": "3337:37:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "dataFeedIds",
												"nameLocation": "3392:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3375:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 333,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3375:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 334,
													"nodeType": "ArrayTypeName",
													"src": "3375:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3374:30:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3440:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3440:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:18:2"
									},
									"scope": 743,
									"src": "3328:2023:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "6430:4200:2",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "signerIndex",
														"nameLocation": "6444:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "6436:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"nodeType": "VariableDeclarationStatement",
												"src": "6436:19:2"
											},
											{
												"assignments": [
													480,
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "dataPointsCount",
														"nameLocation": "6478:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "6470:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "eachDataPointValueByteSize",
														"nameLocation": "6509:26:2",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "6501:34:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6501:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "calldataNegativeOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6584:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "_extractDataPointsDetailsForDataPackage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6544:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6462:145:2"
											},
											{
												"id": 558,
												"nodeType": "Block",
												"src": "6674:2061:2",
												"statements": [
													{
														"assignments": [
															488
														],
														"declarations": [
															{
																"constant": false,
																"id": 488,
																"mutability": "mutable",
																"name": "extractedTimestamp",
																"nameLocation": "6689:18:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "6682:25:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																"typeName": {
																	"id": 487,
																	"name": "uint48",
																	"nodeType": "ElementaryTypeName",
																	"src": "6682:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 489,
														"nodeType": "VariableDeclarationStatement",
														"src": "6682:25:2"
													},
													{
														"assignments": [
															491
														],
														"declarations": [
															{
																"constant": false,
																"id": 491,
																"mutability": "mutable",
																"name": "signerAddress",
																"nameLocation": "6723:13:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "6715:21:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6715:7:2",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 492,
														"nodeType": "VariableDeclarationStatement",
														"src": "6715:21:2"
													},
													{
														"assignments": [
															494
														],
														"declarations": [
															{
																"constant": false,
																"id": 494,
																"mutability": "mutable",
																"name": "signedHash",
																"nameLocation": "6752:10:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "6744:18:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 493,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6744:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 495,
														"nodeType": "VariableDeclarationStatement",
														"src": "6744:18:2"
													},
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "signedMessage",
																"nameLocation": "6783:13:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "6770:26:2",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes"
																},
																"typeName": {
																	"id": 496,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6770:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 498,
														"nodeType": "VariableDeclarationStatement",
														"src": "6770:26:2"
													},
													{
														"assignments": [
															500
														],
														"declarations": [
															{
																"constant": false,
																"id": 500,
																"mutability": "mutable",
																"name": "signedMessageBytesCount",
																"nameLocation": "6812:23:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "6804:31:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 499,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6804:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 501,
														"nodeType": "VariableDeclarationStatement",
														"src": "6804:31:2"
													},
													{
														"expression": {
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 502,
																"name": "signedMessageBytesCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "6844:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 505,
																				"name": "eachDataPointValueByteSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "6890:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 506,
																				"name": "DATA_POINT_SYMBOL_BS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "6919:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6890:49:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 503,
																			"name": "dataPointsCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "6870:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1446,
																		"src": "6870:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6870:70:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 509,
																	"name": "DATA_PACKAGE_WITHOUT_DATA_POINTS_AND_SIG_BS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "6951:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6870:124:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6844:150:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 512,
														"nodeType": "ExpressionStatement",
														"src": "6844:150:2"
													},
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "timestampCalldataOffset",
																"nameLocation": "7081:23:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "7073:31:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7073:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 523,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "calldataNegativeOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "7136:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 520,
																		"name": "TIMESTAMP_NEGATIVE_OFFSET_IN_DATA_PACKAGE_WITH_STANDARD_SLOT_BS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "7161:63:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7136:88:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"expression": {
																			"id": 515,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7107:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"src": "7107:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7107:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1431,
																"src": "7107:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7107:118:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7073:152:2"
													},
													{
														"assignments": [
															525
														],
														"declarations": [
															{
																"constant": false,
																"id": 525,
																"mutability": "mutable",
																"name": "signedMessageCalldataOffset",
																"nameLocation": "7242:27:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "7234:35:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7234:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 530,
																			"name": "calldataNegativeOffset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "7301:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 531,
																			"name": "SIG_BS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "7326:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7301:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 533,
																		"name": "signedMessageBytesCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7335:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7301:57:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"expression": {
																			"id": 526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7272:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"src": "7272:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7272:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1431,
																"src": "7272:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7272:87:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7234:125:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "7377:1016:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "7428:125:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "signedMessageCalldataOffset",
																				"nodeType": "YulIdentifier",
																				"src": "7481:27:2"
																			},
																			{
																				"name": "signedMessageBytesCount",
																				"nodeType": "YulIdentifier",
																				"src": "7520:23:2"
																			}
																		],
																		"functionName": {
																			"name": "extractBytesFromCalldata",
																			"nodeType": "YulIdentifier",
																			"src": "7445:24:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7445:108:2"
																	},
																	"variableNames": [
																		{
																			"name": "signedMessage",
																			"nodeType": "YulIdentifier",
																			"src": "7428:13:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7601:90:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "signedMessage",
																						"nodeType": "YulIdentifier",
																						"src": "7629:13:2"
																					},
																					{
																						"name": "BYTES_ARR_LEN_VAR_BS",
																						"nodeType": "YulIdentifier",
																						"src": "7644:20:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7625:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7625:40:2"
																			},
																			{
																				"name": "signedMessageBytesCount",
																				"nodeType": "YulIdentifier",
																				"src": "7667:23:2"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "7615:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:76:2"
																	},
																	"variableNames": [
																		{
																			"name": "signedHash",
																			"nodeType": "YulIdentifier",
																			"src": "7601:10:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:59:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "timestampCalldataOffset",
																				"nodeType": "YulIdentifier",
																				"src": "7768:23:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7755:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7755:37:2"
																	},
																	"variableNames": [
																		{
																			"name": "extractedTimestamp",
																			"nodeType": "YulIdentifier",
																			"src": "7733:18:2"
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7844:189:2",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7856:29:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "FREE_MEMORY_PTR",
																							"nodeType": "YulIdentifier",
																							"src": "7869:15:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7863:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7863:22:2"
																				},
																				"variableNames": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "7856:3:2"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7903:3:2"
																						},
																						{
																							"name": "bytesCount",
																							"nodeType": "YulIdentifier",
																							"src": "7908:10:2"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7896:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7896:23:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7896:23:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7930:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7941:3:2"
																						},
																						{
																							"name": "BYTES_ARR_LEN_VAR_BS",
																							"nodeType": "YulIdentifier",
																							"src": "7946:20:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7937:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7937:30:2"
																				},
																				"variableNames": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "7930:3:2"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "FREE_MEMORY_PTR",
																							"nodeType": "YulIdentifier",
																							"src": "7985:15:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "ptr",
																									"nodeType": "YulIdentifier",
																									"src": "8006:3:2"
																								},
																								{
																									"name": "bytesCount",
																									"nodeType": "YulIdentifier",
																									"src": "8011:10:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8002:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8002:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7978:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7978:45:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7978:45:2"
																			}
																		]
																	},
																	"name": "initByteArray",
																	"nodeType": "YulFunctionDefinition",
																	"parameters": [
																		{
																			"name": "bytesCount",
																			"nodeType": "YulTypedName",
																			"src": "7825:10:2",
																			"type": ""
																		}
																	],
																	"returnVariables": [
																		{
																			"name": "ptr",
																			"nodeType": "YulTypedName",
																			"src": "7840:3:2",
																			"type": ""
																		}
																	],
																	"src": "7802:231:2"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8115:270:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8127:55:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "bytesCount",
																							"nodeType": "YulIdentifier",
																							"src": "8171:10:2"
																						}
																					],
																					"functionName": {
																						"name": "initByteArray",
																						"nodeType": "YulIdentifier",
																						"src": "8157:13:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8157:25:2"
																				},
																				"variables": [
																					{
																						"name": "extractedBytesStartPtr",
																						"nodeType": "YulTypedName",
																						"src": "8131:22:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "extractedBytesStartPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8219:22:2"
																						},
																						{
																							"name": "offset",
																							"nodeType": "YulIdentifier",
																							"src": "8255:6:2"
																						},
																						{
																							"name": "bytesCount",
																							"nodeType": "YulIdentifier",
																							"src": "8275:10:2"
																						}
																					],
																					"functionName": {
																						"name": "calldatacopy",
																						"nodeType": "YulIdentifier",
																						"src": "8193:12:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8193:104:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8193:104:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8308:67:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "extractedBytesStartPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8330:22:2"
																						},
																						{
																							"name": "BYTES_ARR_LEN_VAR_BS",
																							"nodeType": "YulIdentifier",
																							"src": "8354:20:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "8326:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8326:49:2"
																				},
																				"variableNames": [
																					{
																						"name": "extractedBytes",
																						"nodeType": "YulIdentifier",
																						"src": "8308:14:2"
																					}
																				]
																			}
																		]
																	},
																	"name": "extractBytesFromCalldata",
																	"nodeType": "YulFunctionDefinition",
																	"parameters": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8077:6:2",
																			"type": ""
																		},
																		{
																			"name": "bytesCount",
																			"nodeType": "YulTypedName",
																			"src": "8085:10:2",
																			"type": ""
																		}
																	],
																	"returnVariables": [
																		{
																			"name": "extractedBytes",
																			"nodeType": "YulTypedName",
																			"src": "8100:14:2",
																			"type": ""
																		}
																	],
																	"src": "8043:342:2"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "7644:20:2",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "7946:20:2",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "8354:20:2",
																"valueSize": 1
															},
															{
																"declaration": 195,
																"isOffset": false,
																"isSlot": false,
																"src": "7869:15:2",
																"valueSize": 1
															},
															{
																"declaration": 195,
																"isOffset": false,
																"isSlot": false,
																"src": "7985:15:2",
																"valueSize": 1
															},
															{
																"declaration": 488,
																"isOffset": false,
																"isSlot": false,
																"src": "7733:18:2",
																"valueSize": 1
															},
															{
																"declaration": 494,
																"isOffset": false,
																"isSlot": false,
																"src": "7601:10:2",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "7428:13:2",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "7629:13:2",
																"valueSize": 1
															},
															{
																"declaration": 500,
																"isOffset": false,
																"isSlot": false,
																"src": "7520:23:2",
																"valueSize": 1
															},
															{
																"declaration": 500,
																"isOffset": false,
																"isSlot": false,
																"src": "7667:23:2",
																"valueSize": 1
															},
															{
																"declaration": 525,
																"isOffset": false,
																"isSlot": false,
																"src": "7481:27:2",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "7768:23:2",
																"valueSize": 1
															}
														],
														"id": 537,
														"nodeType": "InlineAssembly",
														"src": "7368:1025:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"name": "extractedTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "8449:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 538,
																"name": "validateTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "8431:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) view"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8431:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 541,
														"nodeType": "ExpressionStatement",
														"src": "8431:37:2"
													},
													{
														"expression": {
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 542,
																"name": "signerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "8549:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 545,
																		"name": "signedHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "8608:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 546,
																			"name": "calldataNegativeOffset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "8628:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 547,
																			"name": "SIG_BS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "8653:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8628:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 543,
																		"name": "SignatureLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "8565:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SignatureLib_$1240_$",
																			"typeString": "type(library SignatureLib)"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "recoverSignerAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1239,
																	"src": "8565:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint256) pure returns (address)"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8565:102:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8549:118:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 551,
														"nodeType": "ExpressionStatement",
														"src": "8549:118:2"
													},
													{
														"expression": {
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 552,
																"name": "signerIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "8675:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "signerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "8714:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 553,
																	"name": "getAuthorisedSignerIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "8689:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																		"typeString": "function (address) view returns (uint8)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8689:39:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8675:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 557,
														"nodeType": "ExpressionStatement",
														"src": "8675:53:2"
													}
												]
											},
											{
												"id": 656,
												"nodeType": "Block",
												"src": "8772:1672:2",
												"statements": [
													{
														"assignments": [
															560
														],
														"declarations": [
															{
																"constant": false,
																"id": 560,
																"mutability": "mutable",
																"name": "dataPointDataFeedId",
																"nameLocation": "8788:19:2",
																"nodeType": "VariableDeclaration",
																"scope": 656,
																"src": "8780:27:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 559,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8780:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 561,
														"nodeType": "VariableDeclarationStatement",
														"src": "8780:27:2"
													},
													{
														"assignments": [
															563
														],
														"declarations": [
															{
																"constant": false,
																"id": 563,
																"mutability": "mutable",
																"name": "dataPointValue",
																"nameLocation": "8823:14:2",
																"nodeType": "VariableDeclaration",
																"scope": 656,
																"src": "8815:22:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 562,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8815:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 564,
														"nodeType": "VariableDeclarationStatement",
														"src": "8815:22:2"
													},
													{
														"body": {
															"id": 654,
															"nodeType": "Block",
															"src": "8930:1508:2",
															"statements": [
																{
																	"expression": {
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 575,
																					"name": "dataPointDataFeedId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 560,
																					"src": "9013:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 576,
																					"name": "dataPointValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 563,
																					"src": "9034:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "9012:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																				"typeString": "tuple(bytes32,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 579,
																					"name": "calldataNegativeOffset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 471,
																					"src": "9099:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 580,
																					"name": "eachDataPointValueByteSize",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 482,
																					"src": "9133:26:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 581,
																					"name": "dataPointIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "9171:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 578,
																				"name": "_extractDataPointValueAndDataFeedId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "9052:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (bytes32,uint256)"
																				}
																			},
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9052:143:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
																				"typeString": "tuple(bytes32,uint256)"
																			}
																		},
																		"src": "9012:183:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 584,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:183:2"
																},
																{
																	"body": {
																		"id": 652,
																		"nodeType": "Block",
																		"src": "9337:1093:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 596,
																						"name": "dataPointDataFeedId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 560,
																						"src": "9353:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 597,
																							"name": "dataFeedIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 459,
																							"src": "9376:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																								"typeString": "bytes32[] memory"
																							}
																						},
																						"id": 599,
																						"indexExpression": {
																							"id": 598,
																							"name": "dataFeedIdIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 586,
																							"src": "9388:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9376:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "9353:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 651,
																				"nodeType": "IfStatement",
																				"src": "9349:1071:2",
																				"trueBody": {
																					"id": 650,
																					"nodeType": "Block",
																					"src": "9406:1014:2",
																					"statements": [
																						{
																							"assignments": [
																								602
																							],
																							"declarations": [
																								{
																									"constant": false,
																									"id": 602,
																									"mutability": "mutable",
																									"name": "bitmapSignersForDataFeedId",
																									"nameLocation": "9428:26:2",
																									"nodeType": "VariableDeclaration",
																									"scope": 650,
																									"src": "9420:34:2",
																									"stateVariable": false,
																									"storageLocation": "default",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"typeName": {
																										"id": 601,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "9420:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"visibility": "internal"
																								}
																							],
																							"id": 606,
																							"initialValue": {
																								"baseExpression": {
																									"id": 603,
																									"name": "signersBitmapForDataFeedIds",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 465,
																									"src": "9457:27:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 605,
																								"indexExpression": {
																									"id": 604,
																									"name": "dataFeedIdIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 586,
																									"src": "9485:15:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9457:44:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "VariableDeclarationStatement",
																							"src": "9420:81:2"
																						},
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								"id": 619,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 612,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "!",
																									"prefix": true,
																									"src": "9535:68:2",
																									"subExpression": {
																										"arguments": [
																											{
																												"id": 609,
																												"name": "bitmapSignersForDataFeedId",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 602,
																												"src": "9563:26:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"id": 610,
																												"name": "signerIndex",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 477,
																												"src": "9591:11:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 607,
																												"name": "BitmapLib",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1124,
																												"src": "9536:9:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_BitmapLib_$1124_$",
																													"typeString": "type(library BitmapLib)"
																												}
																											},
																											"id": 608,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "getBitFromBitmap",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1123,
																											"src": "9536:26:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																												"typeString": "function (uint256,uint256) pure returns (bool)"
																											}
																										},
																										"id": 611,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9536:67:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "&&",
																								"rightExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 618,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"baseExpression": {
																											"id": 613,
																											"name": "uniqueSignerCountForDataFeedIds",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 462,
																											"src": "9681:31:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																												"typeString": "uint256[] memory"
																											}
																										},
																										"id": 615,
																										"indexExpression": {
																											"id": 614,
																											"name": "dataFeedIdIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 586,
																											"src": "9713:15:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "9681:48:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<",
																									"rightExpression": {
																										"arguments": [],
																										"expression": {
																											"argumentTypes": [],
																											"id": 616,
																											"name": "getUniqueSignersThreshold",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 316,
																											"src": "9732:25:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																												"typeString": "function () view returns (uint8)"
																											}
																										},
																										"id": 617,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9732:27:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"src": "9681:78:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"src": "9535:224:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 648,
																							"nodeType": "IfStatement",
																							"src": "9516:789:2",
																							"trueBody": {
																								"id": 647,
																								"nodeType": "Block",
																								"src": "9774:531:2",
																								"statements": [
																									{
																										"expression": {
																											"id": 623,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "++",
																											"prefix": false,
																											"src": "9838:50:2",
																											"subExpression": {
																												"baseExpression": {
																													"id": 620,
																													"name": "uniqueSignerCountForDataFeedIds",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 462,
																													"src": "9838:31:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																														"typeString": "uint256[] memory"
																													}
																												},
																												"id": 622,
																												"indexExpression": {
																													"id": 621,
																													"name": "dataFeedIdIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 586,
																													"src": "9870:15:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": true,
																												"nodeType": "IndexAccess",
																												"src": "9838:48:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 624,
																										"nodeType": "ExpressionStatement",
																										"src": "9838:50:2"
																									},
																									{
																										"expression": {
																											"id": 635,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"baseExpression": {
																													"baseExpression": {
																														"id": 625,
																														"name": "valuesForDataFeeds",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 469,
																														"src": "9936:18:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																															"typeString": "uint256[] memory[] memory"
																														}
																													},
																													"id": 632,
																													"indexExpression": {
																														"id": 626,
																														"name": "dataFeedIdIndex",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 586,
																														"src": "9955:15:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "9936:35:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																														"typeString": "uint256[] memory"
																													}
																												},
																												"id": 633,
																												"indexExpression": {
																													"commonType": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"id": 631,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"baseExpression": {
																															"id": 627,
																															"name": "uniqueSignerCountForDataFeedIds",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 462,
																															"src": "9989:31:2",
																															"typeDescriptions": {
																																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																																"typeString": "uint256[] memory"
																															}
																														},
																														"id": 629,
																														"indexExpression": {
																															"id": 628,
																															"name": "dataFeedIdIndex",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 586,
																															"src": "10021:15:2",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "IndexAccess",
																														"src": "9989:48:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": "-",
																													"rightExpression": {
																														"hexValue": "31",
																														"id": 630,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "10040:1:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_1_by_1",
																															"typeString": "int_const 1"
																														},
																														"value": "1"
																													},
																													"src": "9989:52:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": true,
																												"nodeType": "IndexAccess",
																												"src": "9936:121:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"id": 634,
																												"name": "dataPointValue",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 563,
																												"src": "10060:14:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "9936:138:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 636,
																										"nodeType": "ExpressionStatement",
																										"src": "9936:138:2"
																									},
																									{
																										"expression": {
																											"id": 645,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"baseExpression": {
																													"id": 637,
																													"name": "signersBitmapForDataFeedIds",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 465,
																													"src": "10130:27:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																														"typeString": "uint256[] memory"
																													}
																												},
																												"id": 639,
																												"indexExpression": {
																													"id": 638,
																													"name": "dataFeedIdIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 586,
																													"src": "10158:15:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": true,
																												"nodeType": "IndexAccess",
																												"src": "10130:44:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"arguments": [
																													{
																														"id": 642,
																														"name": "bitmapSignersForDataFeedId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 602,
																														"src": "10219:26:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													{
																														"id": 643,
																														"name": "signerIndex",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 477,
																														"src": "10263:11:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"id": 640,
																														"name": "BitmapLib",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1124,
																														"src": "10177:9:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_type$_t_contract$_BitmapLib_$1124_$",
																															"typeString": "type(library BitmapLib)"
																														}
																													},
																													"id": 641,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "setBitInBitmap",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1100,
																													"src": "10177:24:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 644,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "10177:113:2",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10130:160:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 646,
																										"nodeType": "ExpressionStatement",
																										"src": "10130:160:2"
																									}
																								]
																							}
																						},
																						{
																							"id": 649,
																							"nodeType": "Break",
																							"src": "10402:5:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 589,
																			"name": "dataFeedIdIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "9261:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"id": 590,
																				"name": "dataFeedIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "9279:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																					"typeString": "bytes32[] memory"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "9279:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9261:36:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 653,
																	"initializationExpression": {
																		"assignments": [
																			586
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 586,
																				"mutability": "mutable",
																				"name": "dataFeedIdIndex",
																				"nameLocation": "9230:15:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 653,
																				"src": "9222:23:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 585,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9222:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 588,
																		"initialValue": {
																			"hexValue": "30",
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9248:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9222:27:2"
																	},
																	"loopExpression": {
																		"expression": {
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "9309:17:2",
																			"subExpression": {
																				"id": 593,
																				"name": "dataFeedIdIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 586,
																				"src": "9309:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 595,
																		"nodeType": "ExpressionStatement",
																		"src": "9309:17:2"
																	},
																	"nodeType": "ForStatement",
																	"src": "9206:1224:2"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 569,
																"name": "dataPointIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "8878:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 570,
																"name": "dataPointsCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8895:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8878:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 655,
														"initializationExpression": {
															"assignments": [
																566
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 566,
																	"mutability": "mutable",
																	"name": "dataPointIndex",
																	"nameLocation": "8858:14:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 655,
																	"src": "8850:22:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 565,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8850:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 568,
															"initialValue": {
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8875:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8850:26:2"
														},
														"loopExpression": {
															"expression": {
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8912:16:2",
																"subExpression": {
																	"id": 572,
																	"name": "dataPointIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "8912:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 574,
															"nodeType": "ExpressionStatement",
															"src": "8912:16:2"
														},
														"nodeType": "ForStatement",
														"src": "8845:1593:2"
													}
												]
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 657,
														"name": "DATA_PACKAGE_WITHOUT_DATA_POINTS_BS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "10506:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 658,
																		"name": "eachDataPointValueByteSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "10551:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 659,
																		"name": "DATA_POINT_SYMBOL_BS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "10580:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10551:49:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 661,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10550:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 662,
															"name": "dataPointsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10610:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10550:75:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10506:119:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 475,
												"id": 665,
												"nodeType": "Return",
												"src": "10493:132:2"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "5355:791:2",
										"text": " @dev This is a private helpful function, which extracts data for a data package based\n on the given negative calldata offset, verifies them, and in the case of successful\n verification updates the corresponding data package values in memory\n @param dataFeedIds an array of unique data feed identifiers\n @param uniqueSignerCountForDataFeedIds an array with the numbers of unique signers\n for each data feed\n @param signersBitmapForDataFeedIds an array of signer bitmaps for data feeds\n @param valuesForDataFeeds 2-dimensional array, valuesForDataFeeds[i][j] contains\n j-th value for the i-th data feed\n @param calldataNegativeOffset negative calldata offset for the given data package\n @return An array of the aggregated values"
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extractDataPackage",
									"nameLocation": "6158:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "dataFeedIds",
												"nameLocation": "6200:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6183:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 457,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6183:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 458,
													"nodeType": "ArrayTypeName",
													"src": "6183:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "uniqueSignerCountForDataFeedIds",
												"nameLocation": "6234:31:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6217:48:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 460,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6217:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 461,
													"nodeType": "ArrayTypeName",
													"src": "6217:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "signersBitmapForDataFeedIds",
												"nameLocation": "6288:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6271:44:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 463,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6271:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 464,
													"nodeType": "ArrayTypeName",
													"src": "6271:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "valuesForDataFeeds",
												"nameLocation": "6340:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6321:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
													"typeString": "uint256[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 467,
														"nodeType": "ArrayTypeName",
														"src": "6321:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														}
													},
													"id": 468,
													"nodeType": "ArrayTypeName",
													"src": "6321:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
														"typeString": "uint256[][]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "calldataNegativeOffset",
												"nameLocation": "6372:22:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6364:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6177:221:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6421:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:9:2"
									},
									"scope": 743,
									"src": "6149:4481:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "11270:691:2",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "aggregatedValues",
														"nameLocation": "11293:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "11276:33:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 683,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11276:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 684,
															"nodeType": "ArrayTypeName",
															"src": "11276:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 689,
																"name": "valuesForDataFeeds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "11326:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																	"typeString": "uint256[] memory[] memory"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11326:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11312:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 686,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11316:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ArrayTypeName",
															"src": "11316:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11276:76:2"
											},
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "uniqueSignersThreshold",
														"nameLocation": "11366:22:2",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "11358:30:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 693,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11358:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "getUniqueSignersThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "11391:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
															"typeString": "function () view returns (uint8)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11358:60:2"
											},
											{
												"body": {
													"id": 737,
													"nodeType": "Block",
													"src": "11517:410:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 709,
																		"name": "uniqueSignerCountForDataFeedIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "11529:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 711,
																	"indexExpression": {
																		"id": 710,
																		"name": "dataFeedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "11561:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11529:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 712,
																	"name": "uniqueSignersThreshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "11578:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11529:71:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 722,
															"nodeType": "IfStatement",
															"src": "11525:229:2",
															"trueBody": {
																"id": 721,
																"nodeType": "Block",
																"src": "11602:152:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 715,
																						"name": "uniqueSignerCountForDataFeedIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 675,
																						"src": "11664:31:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 717,
																					"indexExpression": {
																						"id": 716,
																						"name": "dataFeedIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 699,
																						"src": "11696:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11664:46:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 718,
																					"name": "uniqueSignersThreshold",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 694,
																					"src": "11722:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 714,
																				"name": "InsufficientNumberOfUniqueSigners",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "11619:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11619:126:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 720,
																		"nodeType": "RevertStatement",
																		"src": "11612:133:2"
																	}
																]
															}
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "aggregatedValueForDataFeedId",
																	"nameLocation": "11769:28:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 737,
																	"src": "11761:36:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11761:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 730,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 726,
																			"name": "valuesForDataFeeds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "11816:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																				"typeString": "uint256[] memory[] memory"
																			}
																		},
																		"id": 728,
																		"indexExpression": {
																			"id": 727,
																			"name": "dataFeedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "11835:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11816:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 725,
																	"name": "aggregateValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "11800:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (uint256[] memory) view returns (uint256)"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11800:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11761:89:2"
														},
														{
															"expression": {
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 731,
																		"name": "aggregatedValues",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "11858:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 733,
																	"indexExpression": {
																		"id": 732,
																		"name": "dataFeedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "11875:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11858:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 734,
																	"name": "aggregatedValueForDataFeedId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "11892:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11858:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "11858:62:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "dataFeedIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "11457:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 703,
															"name": "valuesForDataFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "11473:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
																"typeString": "uint256[] memory[] memory"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11473:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11457:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"initializationExpression": {
													"assignments": [
														699
													],
													"declarations": [
														{
															"constant": false,
															"id": 699,
															"mutability": "mutable",
															"name": "dataFeedIndex",
															"nameLocation": "11438:13:2",
															"nodeType": "VariableDeclaration",
															"scope": 738,
															"src": "11430:21:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 698,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11430:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 701,
													"initialValue": {
														"hexValue": "30",
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11454:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11430:25:2"
												},
												"loopExpression": {
													"expression": {
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11500:15:2",
														"subExpression": {
															"id": 706,
															"name": "dataFeedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "11500:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 708,
													"nodeType": "ExpressionStatement",
													"src": "11500:15:2"
												},
												"nodeType": "ForStatement",
												"src": "11425:502:2"
											},
											{
												"expression": {
													"id": 739,
													"name": "aggregatedValues",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 685,
													"src": "11940:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 740,
												"nodeType": "Return",
												"src": "11933:23:2"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "10634:462:2",
										"text": " @dev This is a private helpful function, which aggregates values from different\n authorised signers for the given arrays of values for each data feed\n @param valuesForDataFeeds 2-dimensional array, valuesForDataFeeds[i][j] contains\n j-th value for the i-th data feed\n @param uniqueSignerCountForDataFeedIds an array with the numbers of unique signers\n for each data feed\n @return An array of the aggregated values"
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAggregatedValues",
									"nameLocation": "11108:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "valuesForDataFeeds",
												"nameLocation": "11153:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "11134:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
													"typeString": "uint256[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11134:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 670,
														"nodeType": "ArrayTypeName",
														"src": "11134:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														}
													},
													"id": 671,
													"nodeType": "ArrayTypeName",
													"src": "11134:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
														"typeString": "uint256[][]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "uniqueSignerCountForDataFeedIds",
												"nameLocation": "11194:31:2",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "11177:48:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 673,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 674,
													"nodeType": "ArrayTypeName",
													"src": "11177:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11128:101:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "11252:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 677,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11252:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 678,
													"nodeType": "ArrayTypeName",
													"src": "11252:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11251:18:2"
									},
									"scope": 743,
									"src": "11099:862:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 744,
							"src": "549:11414:2",
							"usedErrors": [
								251,
								253,
								259,
								261,
								263,
								265,
								267,
								271,
								969,
								975,
								1135
							]
						}
					],
					"src": "38:11926:2"
				},
				"id": 2
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol",
					"exportedSymbols": {
						"BitmapLib": [
							1124
						],
						"CalldataExtractor": [
							186
						],
						"NumericArrayLib": [
							1204
						],
						"RedstoneConstants": [
							272
						],
						"RedstoneConsumerBase": [
							743
						],
						"RedstoneConsumerNumericBase": [
							953
						],
						"RedstoneDefaultsLib": [
							1038
						],
						"SafeMath": [
							1552
						],
						"SignatureLib": [
							1240
						]
					},
					"id": 954,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:3"
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerBase.sol",
							"file": "./RedstoneConsumerBase.sol",
							"id": 746,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 954,
							"sourceUnit": 744,
							"src": "63:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 748,
										"name": "RedstoneConsumerBase",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 743,
										"src": "454:20:3"
									},
									"id": 749,
									"nodeType": "InheritanceSpecifier",
									"src": "454:20:3"
								}
							],
							"canonicalName": "RedstoneConsumerNumericBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 747,
								"nodeType": "StructuredDocumentation",
								"src": "101:303:3",
								"text": " @title The base contract for Redstone consumers' contracts that allows to\n securely calculate numeric redstone oracle values\n @author The Redstone Oracles team\n @dev This contract can extend other contracts to allow them\n securely fetch Redstone oracle data from transactions calldata"
							},
							"fullyImplemented": false,
							"id": 953,
							"linearizedBaseContracts": [
								953,
								743,
								186,
								272
							],
							"name": "RedstoneConsumerNumericBase",
							"nameLocation": "423:27:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1375:151:3",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "dataFeedIds",
														"nameLocation": "1398:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "1381:28:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 759,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1381:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 760,
															"nodeType": "ArrayTypeName",
															"src": "1381:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1426:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1412:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 762,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1416:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 763,
															"nodeType": "ArrayTypeName",
															"src": "1416:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1381:47:3"
											},
											{
												"expression": {
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 768,
															"name": "dataFeedIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1434:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 770,
														"indexExpression": {
															"hexValue": "30",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1434:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 771,
														"name": "dataFeedId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1451:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1434:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1434:27:3"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 775,
																"name": "dataFeedIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "1506:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															],
															"id": 774,
															"name": "getOracleNumericValuesFromTxMsg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1474:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (bytes32[] memory) view returns (uint256[] memory)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 778,
													"indexExpression": {
														"hexValue": "30",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1519:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1474:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 756,
												"id": 779,
												"nodeType": "Return",
												"src": "1467:54:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "479:775:3",
										"text": " @dev This function can be used in a consumer contract to securely extract an\n oracle value for a given data feed id. Security is achieved by\n signatures verification, timestamp validation, and aggregating values\n from different authorised signers into a single numeric value. If any of the\n required conditions do not match, the function will revert.\n Note! This function expects that tx calldata contains redstone payload in the end\n Learn more about redstone payload here: https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector#readme\n @param dataFeedId bytes32 value that uniquely identifies the data feed\n @return Extracted and verified numeric oracle value for the given data feed id"
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOracleNumericValueFromTxMsg",
									"nameLocation": "1266:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "dataFeedId",
												"nameLocation": "1305:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1297:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:20:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:9:3"
									},
									"scope": 953,
									"src": "1257:269:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "2511:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "dataFeedIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2562:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														],
														"id": 791,
														"name": "_securelyExtractOracleValuesFromTxMsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2524:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (bytes32[] memory) view returns (uint256[] memory)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 794,
												"nodeType": "Return",
												"src": "2517:57:3"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1530:840:3",
										"text": " @dev This function can be used in a consumer contract to securely extract several\n numeric oracle values for a given array of data feed ids. Security is achieved by\n signatures verification, timestamp validation, and aggregating values\n from different authorised signers into a single numeric value. If any of the\n required conditions do not match, the function will revert.\n Note! This function expects that tx calldata contains redstone payload in the end\n Learn more about redstone payload here: https://github.com/redstone-finance/redstone-oracles-monorepo/tree/main/packages/evm-connector#readme\n @param dataFeedIds An array of unique data feed identifiers\n @return An array of the extracted and verified oracle values in the same order\n as they are requested in the dataFeedIds array"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOracleNumericValuesFromTxMsg",
									"nameLocation": "2382:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "dataFeedIds",
												"nameLocation": "2431:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2414:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 783,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 784,
													"nodeType": "ArrayTypeName",
													"src": "2414:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:30:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2491:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 787,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 788,
													"nodeType": "ArrayTypeName",
													"src": "2491:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:18:3"
									},
									"scope": 953,
									"src": "2373:206:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3197:1940:3",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "dataFeedIdsWithoutDuplicates",
														"nameLocation": "3264:28:3",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "3247:45:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 808,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3247:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 809,
															"nodeType": "ArrayTypeName",
															"src": "3247:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 814,
																"name": "dataFeedIdsWithDuplicates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3309:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3309:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3295:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 811,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3299:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 812,
															"nodeType": "ArrayTypeName",
															"src": "3299:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3295:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3247:95:3"
											},
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "alreadyIncluded",
														"nameLocation": "3353:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "3348:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 818,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3348:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:20:3"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "uniqueDataFeedIdsCount",
														"nameLocation": "3382:22:3",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "3374:30:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3374:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"hexValue": "30",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3407:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3374:34:3"
											},
											{
												"body": {
													"id": 881,
													"nodeType": "Block",
													"src": "3511:614:3",
													"statements": [
														{
															"expression": {
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 836,
																	"name": "alreadyIncluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "3610:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3628:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3610:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "3610:23:3"
														},
														{
															"body": {
																"id": 864,
																"nodeType": "Block",
																"src": "3736:174:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 850,
																					"name": "dataFeedIdsWithoutDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "3750:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 852,
																				"indexExpression": {
																					"id": 851,
																					"name": "indexWithoutDup",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 841,
																					"src": "3779:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3750:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 853,
																					"name": "dataFeedIdsWithDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "3799:25:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 855,
																				"indexExpression": {
																					"id": 854,
																					"name": "indexWithDup",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "3825:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3799:39:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3750:88:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 863,
																		"nodeType": "IfStatement",
																		"src": "3746:156:3",
																		"trueBody": {
																			"id": 862,
																			"nodeType": "Block",
																			"src": "3840:62:3",
																			"statements": [
																				{
																					"expression": {
																						"id": 859,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 857,
																							"name": "alreadyIncluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 819,
																							"src": "3852:15:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 858,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "3852:22:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 860,
																					"nodeType": "ExpressionStatement",
																					"src": "3852:22:3"
																				},
																				{
																					"id": 861,
																					"nodeType": "Break",
																					"src": "3886:5:3"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "indexWithoutDup",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "3675:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 845,
																	"name": "uniqueDataFeedIdsCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "3693:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3675:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 865,
															"initializationExpression": {
																"assignments": [
																	841
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 841,
																		"mutability": "mutable",
																		"name": "indexWithoutDup",
																		"nameLocation": "3654:15:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 865,
																		"src": "3646:23:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 840,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3646:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 843,
																"initialValue": {
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3672:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3646:27:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3717:17:3",
																	"subExpression": {
																		"id": 847,
																		"name": "indexWithoutDup",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "3717:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 849,
																"nodeType": "ExpressionStatement",
																"src": "3717:17:3"
															},
															"nodeType": "ForStatement",
															"src": "3641:269:3"
														},
														{
															"condition": {
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3954:16:3",
																"subExpression": {
																	"id": 866,
																	"name": "alreadyIncluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "3955:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 880,
															"nodeType": "IfStatement",
															"src": "3950:169:3",
															"trueBody": {
																"id": 879,
																"nodeType": "Block",
																"src": "3972:147:3",
																"statements": [
																	{
																		"expression": {
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 868,
																					"name": "dataFeedIdsWithoutDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "3982:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 870,
																				"indexExpression": {
																					"id": 869,
																					"name": "uniqueDataFeedIdsCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "4011:22:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3982:52:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 871,
																					"name": "dataFeedIdsWithDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "4037:25:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 873,
																				"indexExpression": {
																					"id": 872,
																					"name": "indexWithDup",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "4063:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4037:39:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3982:94:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 875,
																		"nodeType": "ExpressionStatement",
																		"src": "3982:94:3"
																	},
																	{
																		"expression": {
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4086:24:3",
																			"subExpression": {
																				"id": 876,
																				"name": "uniqueDataFeedIdsCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "4086:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 878,
																		"nodeType": "ExpressionStatement",
																		"src": "4086:24:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "indexWithDup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3446:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 830,
															"name": "dataFeedIdsWithDuplicates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3461:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3461:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3446:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"initializationExpression": {
													"assignments": [
														826
													],
													"declarations": [
														{
															"constant": false,
															"id": 826,
															"mutability": "mutable",
															"name": "indexWithDup",
															"nameLocation": "3428:12:3",
															"nodeType": "VariableDeclaration",
															"scope": 882,
															"src": "3420:20:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 825,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3420:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 828,
													"initialValue": {
														"hexValue": "30",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3443:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3420:24:3"
												},
												"loopExpression": {
													"expression": {
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3495:14:3",
														"subExpression": {
															"id": 833,
															"name": "indexWithDup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3495:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 835,
													"nodeType": "ExpressionStatement",
													"src": "3495:14:3"
												},
												"nodeType": "ForStatement",
												"src": "3415:710:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4278:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dataFeedIdsWithoutDuplicates",
																		"nodeType": "YulIdentifier",
																		"src": "4293:28:3"
																	},
																	{
																		"name": "uniqueDataFeedIdsCount",
																		"nodeType": "YulIdentifier",
																		"src": "4323:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:60:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4286:60:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 810,
														"isOffset": false,
														"isSlot": false,
														"src": "4293:28:3",
														"valueSize": 1
													},
													{
														"declaration": 822,
														"isOffset": false,
														"isSlot": false,
														"src": "4323:22:3",
														"valueSize": 1
													}
												],
												"id": 883,
												"nodeType": "InlineAssembly",
												"src": "4269:83:3"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "valuesWithoutDuplicates",
														"nameLocation": "4428:23:3",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "4411:40:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 886,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4411:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"nodeType": "ArrayTypeName",
															"src": "4411:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"arguments": [
														{
															"id": 890,
															"name": "dataFeedIdsWithoutDuplicates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4486:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														],
														"id": 889,
														"name": "getOracleNumericValuesFromTxMsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "4454:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (bytes32[] memory) view returns (uint256[] memory)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4454:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4411:104:3"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "valuesWithDuplicates",
														"nameLocation": "4576:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "4559:37:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 895,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4559:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 896,
															"nodeType": "ArrayTypeName",
															"src": "4559:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 901,
																"name": "dataFeedIdsWithDuplicates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "4613:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4613:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4599:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 898,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4603:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 899,
															"nodeType": "ArrayTypeName",
															"src": "4603:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4599:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4559:87:3"
											},
											{
												"body": {
													"id": 947,
													"nodeType": "Block",
													"src": "4748:351:3",
													"statements": [
														{
															"body": {
																"id": 945,
																"nodeType": "Block",
																"src": "4864:229:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 927,
																					"name": "dataFeedIdsWithDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "4878:25:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 929,
																				"indexExpression": {
																					"id": 928,
																					"name": "indexWithDup",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "4904:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4878:39:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 930,
																					"name": "dataFeedIdsWithoutDuplicates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 810,
																					"src": "4921:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 932,
																				"indexExpression": {
																					"id": 931,
																					"name": "indexWithoutDup",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "4950:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4921:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "4878:88:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 944,
																		"nodeType": "IfStatement",
																		"src": "4874:211:3",
																		"trueBody": {
																			"id": 943,
																			"nodeType": "Block",
																			"src": "4968:117:3",
																			"statements": [
																				{
																					"expression": {
																						"id": 940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 934,
																								"name": "valuesWithDuplicates",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 897,
																								"src": "4980:20:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 936,
																							"indexExpression": {
																								"id": 935,
																								"name": "indexWithDup",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 906,
																								"src": "5001:12:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "4980:34:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 937,
																								"name": "valuesWithoutDuplicates",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 888,
																								"src": "5017:23:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 939,
																							"indexExpression": {
																								"id": 938,
																								"name": "indexWithoutDup",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 917,
																								"src": "5041:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5017:40:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4980:77:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 941,
																					"nodeType": "ExpressionStatement",
																					"src": "4980:77:3"
																				},
																				{
																					"id": 942,
																					"nodeType": "Break",
																					"src": "5069:5:3"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "indexWithoutDup",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4790:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 921,
																		"name": "dataFeedIdsWithoutDuplicates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "4808:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4808:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4790:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 946,
															"initializationExpression": {
																"assignments": [
																	917
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 917,
																		"mutability": "mutable",
																		"name": "indexWithoutDup",
																		"nameLocation": "4769:15:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 946,
																		"src": "4761:23:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 916,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4761:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 919,
																"initialValue": {
																	"hexValue": "30",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4787:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4761:27:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4845:17:3",
																	"subExpression": {
																		"id": 924,
																		"name": "indexWithoutDup",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4845:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 926,
																"nodeType": "ExpressionStatement",
																"src": "4845:17:3"
															},
															"nodeType": "ForStatement",
															"src": "4756:337:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 909,
														"name": "indexWithDup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "4683:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 910,
															"name": "dataFeedIdsWithDuplicates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4698:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4698:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4683:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"initializationExpression": {
													"assignments": [
														906
													],
													"declarations": [
														{
															"constant": false,
															"id": 906,
															"mutability": "mutable",
															"name": "indexWithDup",
															"nameLocation": "4665:12:3",
															"nodeType": "VariableDeclaration",
															"scope": 948,
															"src": "4657:20:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 905,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4657:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 908,
													"initialValue": {
														"hexValue": "30",
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4680:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4657:24:3"
												},
												"loopExpression": {
													"expression": {
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4732:14:3",
														"subExpression": {
															"id": 913,
															"name": "indexWithDup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "4732:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 915,
													"nodeType": "ExpressionStatement",
													"src": "4732:14:3"
												},
												"nodeType": "ForStatement",
												"src": "4652:447:3"
											},
											{
												"expression": {
													"id": 949,
													"name": "valuesWithDuplicates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 897,
													"src": "5112:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 805,
												"id": 950,
												"nodeType": "Return",
												"src": "5105:27:3"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2583:471:3",
										"text": " @dev This function works similarly to the `getOracleNumericValuesFromTxMsg` with the\n only difference that it allows to request oracle data for an array of data feeds\n that may contain duplicates\n \n @param dataFeedIdsWithDuplicates An array of data feed identifiers (duplicates are allowed)\n @return An array of the extracted and verified oracle values in the same order\n as they are requested in the dataFeedIdsWithDuplicates array"
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOracleNumericValuesWithDuplicatesFromTxMsg",
									"nameLocation": "3066:45:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "dataFeedIdsWithDuplicates",
												"nameLocation": "3129:25:3",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3112:42:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 798,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3112:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 799,
													"nodeType": "ArrayTypeName",
													"src": "3112:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3111:44:3"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3179:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 802,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3179:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 803,
													"nodeType": "ArrayTypeName",
													"src": "3179:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3178:18:3"
									},
									"scope": 953,
									"src": "3057:2080:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 954,
							"src": "405:4734:3",
							"usedErrors": [
								251,
								253,
								259,
								261,
								263,
								265,
								267,
								271,
								969,
								975,
								1135
							]
						}
					],
					"src": "38:5102:3"
				},
				"id": 3
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneDefaultsLib.sol",
					"exportedSymbols": {
						"NumericArrayLib": [
							1204
						],
						"RedstoneDefaultsLib": [
							1038
						],
						"SafeMath": [
							1552
						]
					},
					"id": 1039,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 955,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:4"
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol",
							"file": "../libs/NumericArrayLib.sol",
							"id": 956,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 1205,
							"src": "63:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RedstoneDefaultsLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "102:122:4",
								"text": " @title Default implementations of virtual redstone consumer base functions\n @author The Redstone Oracles team"
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038
							],
							"name": "RedstoneDefaultsLib",
							"nameLocation": "233:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 960,
									"mutability": "constant",
									"name": "DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS",
									"nameLocation": "274:40:4",
									"nodeType": "VariableDeclaration",
									"scope": 1038,
									"src": "257:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "317:9:4",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 963,
									"mutability": "constant",
									"name": "DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS",
									"nameLocation": "347:40:4",
									"nodeType": "VariableDeclaration",
									"scope": 1038,
									"src": "330:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 961,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 962,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "390:9:4",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "b6b0916d",
									"id": 969,
									"name": "TimestampFromTooLongFuture",
									"nameLocation": "410:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "receivedTimestampSeconds",
												"nameLocation": "445:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "437:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "479:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "471:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:58:4"
									},
									"src": "404:91:4"
								},
								{
									"errorSelector": "0321d0b5",
									"id": 975,
									"name": "TimestampIsTooOld",
									"nameLocation": "504:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "receivedTimestampSeconds",
												"nameLocation": "530:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "522:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "564:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "556:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:58:4"
									},
									"src": "498:82:4"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "664:879:4",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "receivedTimestampSeconds",
														"nameLocation": "1038:24:4",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "1030:32:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "receivedTimestampMilliseconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "1065:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1065:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:71:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 986,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1112:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1112:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 988,
														"name": "receivedTimestampSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "1130:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1112:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1006,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1369:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1369:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1008,
																		"name": "receivedTimestampSeconds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "1387:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1369:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1010,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1368:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1011,
															"name": "DEFAULT_MAX_DATA_TIMESTAMP_DELAY_SECONDS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "1415:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1368:87:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1020,
													"nodeType": "IfStatement",
													"src": "1364:175:4",
													"trueBody": {
														"id": 1019,
														"nodeType": "Block",
														"src": "1457:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1014,
																			"name": "receivedTimestampSeconds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "1490:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1015,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1516:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1516:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1013,
																		"name": "TimestampIsTooOld",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "1472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1472:60:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1018,
																"nodeType": "RevertStatement",
																"src": "1465:67:4"
															}
														]
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "1108:431:4",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "1156:202:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 990,
																				"name": "receivedTimestampSeconds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "1169:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 991,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1196:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1196:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1169:42:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1168:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 995,
																	"name": "DEFAULT_MAX_DATA_TIMESTAMP_AHEAD_SECONDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "1215:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1168:87:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "1164:188:4",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "1257:95:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "receivedTimestampSeconds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 981,
																					"src": "1301:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 999,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "1327:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "1327:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "TimestampFromTooLongFuture",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "1274:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1274:69:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "RevertStatement",
																		"src": "1267:76:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateTimestamp",
									"nameLocation": "593:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "receivedTimestampMilliseconds",
												"nameLocation": "619:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "611:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:39:4"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:0:4"
									},
									"scope": 1038,
									"src": "584:959:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "1629:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1033,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1031,
															"name": "NumericArrayLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1642:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_NumericArrayLib_$1204_$",
																"typeString": "type(library NumericArrayLib)"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pickMedian",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "1642:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[] memory) pure returns (uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1035,
												"nodeType": "Return",
												"src": "1635:41:4"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "aggregateValues",
									"nameLocation": "1556:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1589:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1572:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1024,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1572:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1025,
													"nodeType": "ArrayTypeName",
													"src": "1572:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:25:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1620:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:9:4"
									},
									"scope": 1038,
									"src": "1547:134:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1039,
							"src": "225:1458:4",
							"usedErrors": [
								969,
								975
							]
						}
					],
					"src": "38:1646:4"
				},
				"id": 4
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/data-services/CustomUrlsConsumerBase.sol",
					"exportedSymbols": {
						"BitmapLib": [
							1124
						],
						"CalldataExtractor": [
							186
						],
						"CustomUrlsConsumerBase": [
							1081
						],
						"NumericArrayLib": [
							1204
						],
						"RedstoneConstants": [
							272
						],
						"RedstoneConsumerBase": [
							743
						],
						"RedstoneConsumerNumericBase": [
							953
						],
						"RedstoneDefaultsLib": [
							1038
						],
						"SafeMath": [
							1552
						],
						"SignatureLib": [
							1240
						]
					},
					"id": 1082,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:5"
						},
						{
							"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol",
							"file": "../core/RedstoneConsumerNumericBase.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 954,
							"src": "63:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1042,
										"name": "RedstoneConsumerNumericBase",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 953,
										"src": "149:27:5"
									},
									"id": 1043,
									"nodeType": "InheritanceSpecifier",
									"src": "149:27:5"
								}
							],
							"canonicalName": "CustomUrlsConsumerBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081,
								953,
								743,
								186,
								272
							],
							"name": "CustomUrlsConsumerBase",
							"nameLocation": "123:22:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										316
									],
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "263:19:5",
										"statements": [
											{
												"expression": {
													"hexValue": "32",
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "276:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 1048,
												"id": 1050,
												"nodeType": "Return",
												"src": "269:8:5"
											}
										]
									},
									"functionSelector": "f90c4924",
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUniqueSignersThreshold",
									"nameLocation": "190:25:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1045,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "238:8:5"
									},
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "256:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1046,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "256:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:7:5"
									},
									"scope": 1081,
									"src": "181:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										294
									],
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "410:254:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "signerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "420:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "307831316646466339393730633431423962464239416133354265383338643339626365393138436646",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "437:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x11fFFc9970c41B9bFB9Aa35Be838d39bce918CfF"
													},
													"src": "420:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "signerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "514:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "307864426343324336633839324338643365334665344433323566456338313042373337364135456436",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "531:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xdBcC2C6c892C8d3e3Fe4D325fEc810B7376A5Ed6"
														},
														"src": "514:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1076,
														"nodeType": "Block",
														"src": "604:56:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1073,
																			"name": "signerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "639:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1072,
																		"name": "SignerNotAuthorised",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "619:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "619:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1075,
																"nodeType": "RevertStatement",
																"src": "612:41:5"
															}
														]
													},
													"id": 1077,
													"nodeType": "IfStatement",
													"src": "510:150:5",
													"trueBody": {
														"id": 1071,
														"nodeType": "Block",
														"src": "575:23:5",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "590:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 1059,
																"id": 1070,
																"nodeType": "Return",
																"src": "583:8:5"
															}
														]
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "416:244:5",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "481:23:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "496:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1059,
															"id": 1064,
															"nodeType": "Return",
															"src": "489:8:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3ce142f5",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorisedSignerIndex",
									"nameLocation": "295:24:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1056,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "379:8:5"
									},
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "signerAddress",
												"nameLocation": "328:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "320:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:23:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "401:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1057,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "401:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:7:5"
									},
									"scope": 1081,
									"src": "286:378:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1082,
							"src": "114:552:5",
							"usedErrors": [
								251,
								253,
								259,
								261,
								263,
								265,
								267,
								271,
								969,
								975,
								1135
							]
						}
					],
					"src": "38:629:5"
				},
				"id": 5
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/BitmapLib.sol",
					"exportedSymbols": {
						"BitmapLib": [
							1124
						]
					},
					"id": 1125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitmapLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1124,
							"linearizedBaseContracts": [
								1124
							],
							"name": "BitmapLib",
							"nameLocation": "66:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "170:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "bitmap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "183:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "193:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1094,
																	"name": "bitIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "198:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "193:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "192:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "183:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1098,
												"nodeType": "Return",
												"src": "176:31:6"
											}
										]
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBitInBitmap",
									"nameLocation": "89:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "112:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "104:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "bitIndex",
												"nameLocation": "128:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "120:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:34:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "161:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:9:6"
									},
									"scope": 1124,
									"src": "80:132:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "305:83:6",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "bitAtIndex",
														"nameLocation": "319:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "311:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "311:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "bitmap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "332:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "342:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1113,
																	"name": "bitIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "347:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "342:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1115,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "341:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "332:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "311:45:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "bitAtIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "369:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "382:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "369:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1121,
												"nodeType": "Return",
												"src": "362:21:6"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBitFromBitmap",
									"nameLocation": "225:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "bitmap",
												"nameLocation": "250:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "242:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "bitIndex",
												"nameLocation": "266:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "258:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:34:6"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "299:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "299:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:6:6"
									},
									"scope": 1124,
									"src": "216:172:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1125,
							"src": "58:332:6",
							"usedErrors": []
						}
					],
					"src": "33:358:6"
				},
				"id": 6
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/NumericArrayLib.sol",
					"exportedSymbols": {
						"NumericArrayLib": [
							1204
						],
						"SafeMath": [
							1552
						]
					},
					"id": 1205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 1553,
							"src": "58:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NumericArrayLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1204,
							"linearizedBaseContracts": [
								1204
							],
							"name": "NumericArrayLib",
							"nameLocation": "125:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1130,
									"mutability": "constant",
									"name": "BYTES_ARR_LEN_VAR_BS",
									"nameLocation": "297:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "280:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "320:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1133,
									"mutability": "constant",
									"name": "UINT256_VALUE_BS",
									"nameLocation": "343:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "326:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 1132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "362:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "9e198af9",
									"id": 1135,
									"name": "CanNotPickMedianOfEmptyArray",
									"nameLocation": "375:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:7"
									},
									"src": "369:37:7"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "522:317:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1143,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "532:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "532:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "546:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "532:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "528:73:7",
												"trueBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "549:52:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1147,
																	"name": "CanNotPickMedianOfEmptyArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "564:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "564:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1149,
															"nodeType": "RevertStatement",
															"src": "557:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "611:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1152,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "606:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:9:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "606:9:7"
											},
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "middleIndex",
														"nameLocation": "629:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1194,
														"src": "621:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "621:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1158,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "643:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "643:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "656:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "643:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "621:36:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1163,
																"name": "arr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "667:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "667:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "680:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "667:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "685:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "667:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "797:38:7",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1188,
																	"name": "arr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "812:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1190,
																"indexExpression": {
																	"id": 1189,
																	"name": "middleIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "816:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "812:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1191,
															"nodeType": "Return",
															"src": "805:23:7"
														}
													]
												},
												"id": 1193,
												"nodeType": "IfStatement",
												"src": "663:172:7",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "688:103:7",
													"statements": [
														{
															"assignments": [
																1170
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1170,
																	"mutability": "mutable",
																	"name": "sum",
																	"nameLocation": "704:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1187,
																	"src": "696:11:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1169,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1182,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1173,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "723:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1177,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1174,
																				"name": "middleIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "727:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "741:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "727:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "723:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1178,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "745:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1180,
																		"indexExpression": {
																			"id": 1179,
																			"name": "middleIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "749:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "745:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1171,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "710:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1552_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "710:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "710:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "696:66:7"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1183,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "777:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "783:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "777:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1186,
															"nodeType": "Return",
															"src": "770:14:7"
														}
													]
												}
											}
										]
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pickMedian",
									"nameLocation": "457:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "485:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "468:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "468:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "468:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:22:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "513:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:9:7"
									},
									"scope": 1204,
									"src": "448:391:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "893:700:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "908:681:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "916:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "arr",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "933:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:10:7"
															},
															"variables": [
																{
																	"name": "arrLength",
																	"nodeType": "YulTypedName",
																	"src": "920:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "950:47:7",
															"value": {
																"arguments": [
																	{
																		"name": "arr",
																		"nodeType": "YulIdentifier",
																		"src": "971:3:7"
																	},
																	{
																		"name": "BYTES_ARR_LEN_VAR_BS",
																		"nodeType": "YulIdentifier",
																		"src": "976:20:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:30:7"
															},
															"variables": [
																{
																	"name": "valuesPtr",
																	"nodeType": "YulTypedName",
																	"src": "954:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1004:62:7",
															"value": {
																"arguments": [
																	{
																		"name": "valuesPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1022:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "arrLength",
																				"nodeType": "YulIdentifier",
																				"src": "1037:9:7"
																			},
																			{
																				"name": "UINT256_VALUE_BS",
																				"nodeType": "YulIdentifier",
																				"src": "1048:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1033:32:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1018:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:48:7"
															},
															"variables": [
																{
																	"name": "endPtr",
																	"nodeType": "YulTypedName",
																	"src": "1008:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:366:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1380:195:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "1392:26:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "arrIPtr",
																								"nodeType": "YulIdentifier",
																								"src": "1410:7:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1404:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1404:14:7"
																					},
																					"variables": [
																						{
																							"name": "arrI",
																							"nodeType": "YulTypedName",
																							"src": "1396:4:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "1429:26:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "arrJPtr",
																								"nodeType": "YulIdentifier",
																								"src": "1447:7:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1441:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1441:14:7"
																					},
																					"variables": [
																						{
																							"name": "arrJ",
																							"nodeType": "YulTypedName",
																							"src": "1433:4:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "1484:81:7",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "arrIPtr",
																											"nodeType": "YulIdentifier",
																											"src": "1505:7:7"
																										},
																										{
																											"name": "arrJ",
																											"nodeType": "YulIdentifier",
																											"src": "1514:4:7"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "1498:6:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1498:21:7"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "1498:21:7"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "arrJPtr",
																											"nodeType": "YulIdentifier",
																											"src": "1539:7:7"
																										},
																										{
																											"name": "arrI",
																											"nodeType": "YulIdentifier",
																											"src": "1548:4:7"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "1532:6:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1532:21:7"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "1532:21:7"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "arrI",
																								"nodeType": "YulIdentifier",
																								"src": "1472:4:7"
																							},
																							{
																								"name": "arrJ",
																								"nodeType": "YulIdentifier",
																								"src": "1478:4:7"
																							}
																						],
																						"functionName": {
																							"name": "lt",
																							"nodeType": "YulIdentifier",
																							"src": "1469:2:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1469:14:7"
																					},
																					"nodeType": "YulIf",
																					"src": "1466:99:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "arrJPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1281:7:7"
																				},
																				{
																					"name": "arrIPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1290:7:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1278:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1278:20:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1299:80:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1311:41:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "arrJPtr",
																								"nodeType": "YulIdentifier",
																								"src": "1326:7:7"
																							},
																							{
																								"name": "UINT256_VALUE_BS",
																								"nodeType": "YulIdentifier",
																								"src": "1335:16:7"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1322:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1322:30:7"
																					},
																					"variableNames": [
																						{
																							"name": "arrJPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1311:7:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1231:46:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "1243:24:7",
																					"value": {
																						"name": "valuesPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1258:9:7"
																					},
																					"variables": [
																						{
																							"name": "arrJPtr",
																							"nodeType": "YulTypedName",
																							"src": "1247:7:7",
																							"type": ""
																						}
																					]
																				}
																			]
																		},
																		"src": "1227:348:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "arrIPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1123:7:7"
																	},
																	{
																		"name": "endPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1120:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:19:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1140:76:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1150:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "arrIPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1165:7:7"
																				},
																				{
																					"name": "UINT256_VALUE_BS",
																					"nodeType": "YulIdentifier",
																					"src": "1174:16:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1161:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1161:30:7"
																		},
																		"variableNames": [
																			{
																				"name": "arrIPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1150:7:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1077:42:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1087:24:7",
																		"value": {
																			"name": "valuesPtr",
																			"nodeType": "YulIdentifier",
																			"src": "1102:9:7"
																		},
																		"variables": [
																			{
																				"name": "arrIPtr",
																				"nodeType": "YulTypedName",
																				"src": "1091:7:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1073:510:7"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1130,
														"isOffset": false,
														"isSlot": false,
														"src": "976:20:7",
														"valueSize": 1
													},
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "1048:16:7",
														"valueSize": 1
													},
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "1174:16:7",
														"valueSize": 1
													},
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "1335:16:7",
														"valueSize": 1
													},
													{
														"declaration": 1198,
														"isOffset": false,
														"isSlot": false,
														"src": "939:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1198,
														"isOffset": false,
														"isSlot": false,
														"src": "971:3:7",
														"valueSize": 1
													}
												],
												"id": 1201,
												"nodeType": "InlineAssembly",
												"src": "899:690:7"
											}
										]
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "852:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "874:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "857:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1196,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "857:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"nodeType": "ArrayTypeName",
													"src": "857:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:22:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:7"
									},
									"scope": 1204,
									"src": "843:750:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1205,
							"src": "117:1478:7",
							"usedErrors": [
								1135
							]
						}
					],
					"src": "33:1563:7"
				},
				"id": 7
			},
			".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@redstone-finance/evm-connector/contracts/libs/SignatureLib.sol",
					"exportedSymbols": {
						"SignatureLib": [
							1240
						]
					},
					"id": 1241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1240,
							"linearizedBaseContracts": [
								1240
							],
							"name": "SignatureLib",
							"nameLocation": "66:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1209,
									"mutability": "constant",
									"name": "ECDSA_SIG_R_BS",
									"nameLocation": "100:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "83:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "83:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 1208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "117:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1212,
									"mutability": "constant",
									"name": "ECDSA_SIG_S_BS",
									"nameLocation": "140:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "123:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "123:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 1211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "157:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "301:573:8",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "315:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "307:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1221,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "307:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"nodeType": "VariableDeclarationStatement",
												"src": "307:9:8"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "330:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "322:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"nodeType": "VariableDeclarationStatement",
												"src": "322:9:8"
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "343:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "337:7:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1227,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "337:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"nodeType": "VariableDeclarationStatement",
												"src": "337:7:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "359:468:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "367:85:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "404:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:14:8"
																	},
																	{
																		"name": "signatureCalldataNegativeOffset",
																		"nodeType": "YulIdentifier",
																		"src": "420:31:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:52:8"
															},
															"variables": [
																{
																	"name": "signatureCalldataStartPos",
																	"nodeType": "YulTypedName",
																	"src": "371:25:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "459:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "signatureCalldataStartPos",
																		"nodeType": "YulIdentifier",
																		"src": "477:25:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "464:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:39:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "459:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "510:75:8",
															"value": {
																"arguments": [
																	{
																		"name": "signatureCalldataStartPos",
																		"nodeType": "YulIdentifier",
																		"src": "543:25:8"
																	},
																	{
																		"name": "ECDSA_SIG_R_BS",
																		"nodeType": "YulIdentifier",
																		"src": "570:14:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"variableNames": [
																{
																	"name": "signatureCalldataStartPos",
																	"nodeType": "YulIdentifier",
																	"src": "510:25:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "592:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "signatureCalldataStartPos",
																		"nodeType": "YulIdentifier",
																		"src": "610:25:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "597:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:39:8"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "592:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "643:75:8",
															"value": {
																"arguments": [
																	{
																		"name": "signatureCalldataStartPos",
																		"nodeType": "YulIdentifier",
																		"src": "676:25:8"
																	},
																	{
																		"name": "ECDSA_SIG_S_BS",
																		"nodeType": "YulIdentifier",
																		"src": "703:14:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:46:8"
															},
															"variableNames": [
																{
																	"name": "signatureCalldataStartPos",
																	"nodeType": "YulIdentifier",
																	"src": "643:25:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "725:53:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "signatureCalldataStartPos",
																				"nodeType": "YulIdentifier",
																				"src": "751:25:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "738:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:39:8"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "730:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:48:8"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "725:1:8"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "570:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1212,
														"isOffset": false,
														"isSlot": false,
														"src": "703:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1222,
														"isOffset": false,
														"isSlot": false,
														"src": "459:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1225,
														"isOffset": false,
														"isSlot": false,
														"src": "592:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1216,
														"isOffset": false,
														"isSlot": false,
														"src": "420:31:8",
														"valueSize": 1
													},
													{
														"declaration": 1228,
														"isOffset": false,
														"isSlot": false,
														"src": "725:1:8",
														"valueSize": 1
													}
												],
												"id": 1230,
												"nodeType": "InlineAssembly",
												"src": "350:477:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"name": "signedHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "849:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1233,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "861:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1234,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "864:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1235,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "867:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1231,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "839:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1237,
												"nodeType": "Return",
												"src": "832:37:8"
											}
										]
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSignerAddress",
									"nameLocation": "173:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "signedHash",
												"nameLocation": "202:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "194:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "signatureCalldataNegativeOffset",
												"nameLocation": "222:31:8",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "214:39:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:61:8"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "290:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:9:8"
									},
									"scope": 1240,
									"src": "164:710:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1241,
							"src": "58:818:8",
							"usedErrors": []
						}
					],
					"src": "33:844:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1552
						]
					},
					"id": 1553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1243,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:9",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1552,
							"linearizedBaseContracts": [
								1552
							],
							"name": "SafeMath",
							"nameLocation": "490:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "717:140:9",
										"statements": [
											{
												"id": 1273,
												"nodeType": "UncheckedBlock",
												"src": "727:124:9",
												"statements": [
													{
														"assignments": [
															1256
														],
														"declarations": [
															{
																"constant": false,
																"id": 1256,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1273,
																"src": "751:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1255,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1260,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "763:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "767:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "786:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "790:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1268,
														"nodeType": "IfStatement",
														"src": "782:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1254,
															"id": 1267,
															"nodeType": "Return",
															"src": "793:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1270,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "838:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1271,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1254,
														"id": 1272,
														"nodeType": "Return",
														"src": "824:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "657:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "668:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:9"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "702:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "708:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:9"
									},
									"scope": 1552,
									"src": "641:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1078:113:9",
										"statements": [
											{
												"id": 1301,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "1116:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "1120:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1294,
														"nodeType": "IfStatement",
														"src": "1112:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1286,
															"id": 1293,
															"nodeType": "Return",
															"src": "1123:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1296,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "1168:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "1172:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1286,
														"id": 1300,
														"nodeType": "Return",
														"src": "1154:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1018:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1029:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:9"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1063:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:9"
									},
									"scope": 1552,
									"src": "1002:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "1415:417:9",
										"statements": [
											{
												"id": 1343,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1315,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "1683:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1322,
														"nodeType": "IfStatement",
														"src": "1679:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1314,
															"id": 1321,
															"nodeType": "Return",
															"src": "1691:16:9"
														}
													},
													{
														"assignments": [
															1324
														],
														"declarations": [
															{
																"constant": false,
																"id": 1324,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1343,
																"src": "1721:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1323,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "1733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1326,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1329,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "1756:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1330,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "1760:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1332,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "1765:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "1752:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1336,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1314,
															"id": 1337,
															"nodeType": "Return",
															"src": "1768:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1340,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "1813:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1341,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1314,
														"id": 1342,
														"nodeType": "Return",
														"src": "1799:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1355:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1366:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:9"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1400:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1406:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:9"
									},
									"scope": 1552,
									"src": "1339:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "2057:114:9",
										"statements": [
											{
												"id": 1371,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1357,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "2095:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1364,
														"nodeType": "IfStatement",
														"src": "2091:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1356,
															"id": 1363,
															"nodeType": "Return",
															"src": "2103:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1366,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "2148:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1367,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "2152:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1369,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1356,
														"id": 1370,
														"nodeType": "Return",
														"src": "2134:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1997:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2008:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:9"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2042:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2048:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:9"
									},
									"scope": 1552,
									"src": "1981:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "2406:114:9",
										"statements": [
											{
												"id": 1399,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1385,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "2444:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "2440:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1390,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1384,
															"id": 1391,
															"nodeType": "Return",
															"src": "2452:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1394,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "2497:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1395,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "2501:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1397,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1384,
														"id": 1398,
														"nodeType": "Return",
														"src": "2483:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2346:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2357:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2391:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2397:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:9"
									},
									"scope": 1552,
									"src": "2330:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "2822:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1411,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "2839:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1412,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "2843:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1414,
												"nodeType": "Return",
												"src": "2832:12:9"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:9",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2768:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2779:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2813:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:9"
									},
									"scope": 1552,
									"src": "2755:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "3189:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1426,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "3206:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1427,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "3210:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1425,
												"id": 1429,
												"nodeType": "Return",
												"src": "3199:12:9"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3135:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3146:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:9"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3180:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:9"
									},
									"scope": 1552,
									"src": "3122:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "3532:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "3549:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1442,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "3553:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1444,
												"nodeType": "Return",
												"src": "3542:12:9"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:9",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3478:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3489:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:9"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3523:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:9"
									},
									"scope": 1552,
									"src": "3465:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "3917:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1456,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "3934:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1457,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3938:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1459,
												"nodeType": "Return",
												"src": "3927:12:9"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "3863:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "3874:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:9"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "3908:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:9"
									},
									"scope": 1552,
									"src": "3850:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "4466:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1471,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "4483:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1472,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "4487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1474,
												"nodeType": "Return",
												"src": "4476:12:9"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "4412:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "4423:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:9"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "4457:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:9"
									},
									"scope": 1552,
									"src": "4399:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "5084:106:9",
										"statements": [
											{
												"id": 1499,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1489,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "5126:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1490,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "5131:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1492,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "5134:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1488,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1494,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "5168:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1496,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "5172:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1487,
														"id": 1498,
														"nodeType": "Return",
														"src": "5161:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4981:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "5000:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "5019:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:9"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "5075:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:9"
									},
									"scope": 1552,
									"src": "4959:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "5799:105:9",
										"statements": [
											{
												"id": 1524,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1514,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "5841:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1517,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "5848:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1513,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1519,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1520,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "5882:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1521,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "5886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1512,
														"id": 1523,
														"nodeType": "Return",
														"src": "5875:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "5696:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "5715:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "5734:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:9"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "5790:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:9"
									},
									"scope": 1552,
									"src": "5674:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "6675:105:9",
										"statements": [
											{
												"id": 1549,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1539,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "6717:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1542,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "6724:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1538,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1544,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1545,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "6758:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6762:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1537,
														"id": 1548,
														"nodeType": "Return",
														"src": "6751:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6572:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6591:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6610:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:9"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:9"
									},
									"scope": 1552,
									"src": "6550:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1553,
							"src": "482:6300:9",
							"usedErrors": []
						}
					],
					"src": "107:6676:9"
				},
				"id": 9
			}
		}
	}
}